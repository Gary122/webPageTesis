{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaxonomyTree() {\n  _s();\n  const [treeData, setTreeData] = useState([]);\n  function createTreeNode(id, name, children, level) {\n    return {\n      id: id.toString(),\n      name,\n      children,\n      level\n    }; // Convertir el id a cadena\n  }\n\n  // Cargar hijos de un nodo\n  async function loadNodeChildren(node, level) {\n    let url = '';\n    let data = [];\n    switch (level) {\n      case 'reino':\n        url = `/filos/${node.id}`;\n        break;\n      case 'filo':\n        url = `/clases/${node.id}`;\n        break;\n      case 'clase':\n        url = `/ordenes/${node.id}`;\n        break;\n      case 'orden':\n        url = `/familias/${node.id}`;\n        break;\n      case 'familia':\n        url = `/generos/${node.id}`;\n        break;\n      case 'genero':\n        url = `/especies/${node.id}`;\n        break;\n      default:\n        break;\n    }\n    const response = await fetch(url);\n    data = await response.json();\n    const childNodes = data.map(item => {\n      const newNode = createTreeNode(item.id, item.nombre, [], level);\n      node.children.push(newNode);\n      return newNode;\n    });\n    return childNodes;\n  }\n\n  // Manejar evento de expansi칩n de nodo\n  const handleNodeToggle = async (event, nodeId) => {\n    const targetNode = treeData.find(node => node.id === nodeId);\n    if (!targetNode.children.length) {\n      const nodeLevel = getNextLevel(targetNode.level);\n      const children = await loadNodeChildren(targetNode, nodeLevel);\n      targetNode.children = children;\n      setTreeData([...treeData]);\n    }\n  };\n\n  // Obtener datos iniciales\n  async function fetchData() {\n    const response = await fetch('/reinos');\n    const data = await response.json();\n    const nodes = data.map(item => createTreeNode(item.id, item.nombre, [], 'reino'));\n    setTreeData(nodes);\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Renderizar los nodos del 치rbol de forma recursiva\n  const renderTree = nodes => {\n    return nodes.map(node => /*#__PURE__*/_jsxDEV(TreeItem, {\n      nodeId: node.id,\n      label: node.name.trim(),\n      onToggle: handleNodeToggle,\n      children: Array.isArray(node.children) ? renderTree(node.children) : null\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 34\n    }, this),\n    defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 32\n    }, this),\n    children: renderTree(treeData)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(TaxonomyTree, \"beijQgCEr4PaHJnyDg4mOCdZI4w=\");\n_c = TaxonomyTree;\nexport default TaxonomyTree;\nvar _c;\n$RefreshReg$(_c, \"TaxonomyTree\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","TreeItem","ExpandMoreIcon","ChevronRightIcon","jsxDEV","_jsxDEV","TaxonomyTree","_s","treeData","setTreeData","createTreeNode","id","name","children","level","toString","loadNodeChildren","node","url","data","response","fetch","json","childNodes","map","item","newNode","nombre","push","handleNodeToggle","event","nodeId","targetNode","find","length","nodeLevel","getNextLevel","fetchData","nodes","renderTree","label","trim","onToggle","Array","isArray","fileName","_jsxFileName","lineNumber","columnNumber","defaultCollapseIcon","defaultExpandIcon","_c","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nfunction TaxonomyTree() {\n    const [treeData, setTreeData] = useState([]);\n\n    function createTreeNode(id, name, children, level) {\n        return { id: id.toString(), name, children, level };  // Convertir el id a cadena\n    }\n\n    // Cargar hijos de un nodo\n    async function loadNodeChildren(node, level) {\n        let url = '';\n        let data = [];\n\n        switch (level) {\n            case 'reino':\n                url = `/filos/${node.id}`;\n                break;\n            case 'filo':\n                url = `/clases/${node.id}`;\n                break;\n            case 'clase':\n                url = `/ordenes/${node.id}`;\n                break;\n            case 'orden':\n                url = `/familias/${node.id}`;\n                break;\n            case 'familia':\n                url = `/generos/${node.id}`;\n                break;\n            case 'genero':\n                url = `/especies/${node.id}`;\n                break;\n            default:\n                break;\n        }\n\n        const response = await fetch(url);\n        data = await response.json();\n\n        const childNodes = data.map((item) => {\n            const newNode = createTreeNode(item.id, item.nombre, [], level);\n            node.children.push(newNode);\n            return newNode;\n        });\n\n        return childNodes;\n    }\n\n    // Manejar evento de expansi칩n de nodo\n    const handleNodeToggle = async (event, nodeId) => {\n        const targetNode = treeData.find(node => node.id === nodeId);\n        if (!targetNode.children.length) {\n            const nodeLevel = getNextLevel(targetNode.level);\n            const children = await loadNodeChildren(targetNode, nodeLevel);\n            targetNode.children = children;\n            setTreeData([...treeData]);\n        }\n    };\n\n    // Obtener datos iniciales\n    async function fetchData() {\n        const response = await fetch('/reinos');\n        const data = await response.json();\n        const nodes = data.map((item) => createTreeNode(item.id, item.nombre, [], 'reino'));\n        setTreeData(nodes);\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    // Renderizar los nodos del 치rbol de forma recursiva\n    const renderTree = (nodes) => {\n        return nodes.map((node) => (\n            <TreeItem key={node.id} nodeId={node.id} label={node.name.trim()} onToggle={handleNodeToggle}>\n                {Array.isArray(node.children) ? renderTree(node.children) : null}\n            </TreeItem>\n        ));\n    };\n\n    return (\n        <TreeView\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n        >\n            {renderTree(treeData)}\n        </TreeView>\n    );\n}\n\nexport default TaxonomyTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}