{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\Insertar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { styled } from \"@mui/system\";\nimport { Button, Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledForm = styled('form')({\n  background: 'rgba(255, 255, 255, 1)',\n  padding: '100px',\n  // Ajusta el padding según tus necesidades\n  borderRadius: '10px',\n  boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n  opacity: 0.8,\n  width: '400px',\n  // Ancho deseado\n  margin: '0 auto',\n  // Esto centrará el formulario horizontalmente\n  display: 'flex',\n  flexDirection: 'column',\n  // Para que los elementos estén en una disposición vertical\n  gap: '10px' // Espacio vertical entre elementos\n});\n_c = StyledForm;\nexport default function TaxonomicList() {\n  _s();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [setTaxonomic] = useState([]);\n\n  // Reino\n  const [reino, setReino] = useState([]);\n  const [selectedReino, setSelectedReino] = useState('');\n\n  // Filo\n  const [filos, setFilos] = useState([]);\n  const [selectedFilos, setSelectedFilos] = useState('');\n\n  // Clase\n  const [clases, setClases] = useState([]);\n  const [selectedClase, setSelectedClase] = useState('');\n\n  // Orden\n  const [ordenes, setOrdenes] = useState([]);\n  const [selectedOrden, setSelectedOrden] = useState('');\n\n  // Familia\n  const [familias, setFamilias] = useState([]);\n  const [selectedFamilia, setSelectedFamilia] = useState('');\n\n  // Genero\n  const [generos, setGeneros] = useState([]);\n  const [selectedGenero, setSelectedGenero] = useState('');\n  const [selectedGeneroText, setSelectedGeneroText] = useState('');\n\n  // Especie\n  const [especies, setEspecies] = useState([]);\n  const [selectedEspecie, setSelectedEspecie] = useState('');\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  useEffect(() => {\n    fetch('http://localhost:4000/taxonReino').then(response => response.json()).then(data => setReino(data)).catch(error => console.error('Error:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedReino !== '') {\n      fetch(`http://localhost:4000/taxonFiloByReino/${selectedReino}`).then(response => response.json()).then(data => setFilos(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedReino]);\n  useEffect(() => {\n    if (selectedFilos !== '') {\n      fetch(`http://localhost:4000/taxonClaseByFilo/${selectedFilos}`).then(response => response.json()).then(data => setClases(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedFilos]);\n  useEffect(() => {\n    if (selectedClase !== '') {\n      fetch(`http://localhost:4000/taxonOrdenByClase/${selectedClase}`).then(response => response.json()).then(data => setOrdenes(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedClase]);\n  useEffect(() => {\n    if (selectedOrden !== '') {\n      fetch(`http://localhost:4000/taxonFamiliaByOrden/${selectedOrden}`).then(response => response.json()).then(data => setFamilias(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedOrden]);\n  useEffect(() => {\n    if (selectedFamilia !== '') {\n      fetch(`http://localhost:4000/taxonGeneroByFamilia/${selectedFamilia}`).then(response => response.json()).then(data => setGeneros(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedFamilia]);\n  useEffect(() => {\n    if (selectedGenero !== '') {\n      fetch(`http://localhost:4000/taxonEspecieByGenero/${selectedGenero}`).then(response => response.json()).then(data => setEspecies(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedGenero]);\n  const handleReinoChange = event => {\n    setSelectedReino(event.target.value);\n    setFilos([]);\n    setSelectedFilos('');\n    setClases([]);\n    setSelectedClase('');\n    setOrdenes([]);\n    setSelectedOrden('');\n    setFamilias([]);\n    setSelectedFamilia('');\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleFiloChange = event => {\n    setSelectedFilos(event.target.value);\n    setClases([]);\n    setSelectedClase('');\n    setOrdenes([]);\n    setSelectedOrden('');\n    setFamilias([]);\n    setSelectedFamilia('');\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleClaseChange = event => {\n    setSelectedClase(event.target.value);\n    setOrdenes([]);\n    setSelectedOrden('');\n    setFamilias([]);\n    setSelectedFamilia('');\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleOrdenChange = event => {\n    setSelectedOrden(event.target.value);\n    setFamilias([]);\n    setSelectedFamilia('');\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleFamiliaChange = event => {\n    setSelectedFamilia(event.target.value);\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleGeneroChange = event => {\n    setSelectedGenero(event.target.value);\n    setSelectedGeneroText(event.target.value);\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleEspecieChange = event => {\n    setSelectedEspecie(event.target.value);\n  };\n\n  // Variable para almacenar las opciones seleccionadas en una cadena\n  const [selectedOptions, setSelectedOptions] = useState('');\n\n  // ...\n\n  const handleSearch = () => {\n    // Actualizar la variable de estado con las opciones seleccionadas\n    const url = `http://localhost:4000/taxonGeneroNombre/${selectedGeneroText}`;\n\n    // Realiza la solicitud HTTP utilizando fetc\n    fetch(url).then(response => response.json()).then(data => {\n      // Almacena la respuesta en una variable (por ejemplo, resultadoGenero)\n      const resultadoGeneroString = data.gen_id.toString();\n      // Puedes utilizar resultadoGenero como necesites en tu aplicación\n      console.log(\"Resultado del género:\", selectedGeneroText);\n      console.log(\"Id genero:\", resultadoGeneroString);\n    }).catch(error => console.error('Error:', error));\n    const especieValue = selectedEspecie;\n\n    // Realizar cualquier acción adicional que necesites con especieValue\n    console.log(\"Valor de la especie:\", especieValue);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledForm, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h\",\n        color: \"#000080\",\n        gutterBottom: true,\n        component: \"div\",\n        children: \"Filtrar por provincias\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"reino-select-label\",\n            children: \"Reino\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"reino-select-label\",\n            value: selectedReino,\n            onChange: handleReinoChange,\n            children: reino.map((reino, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: reino.rei_nombre.trim(),\n              children: reino.rei_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"filo-select-label\",\n            children: \"Filo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"filo-select-label\",\n            value: selectedFilos,\n            onChange: handleFiloChange,\n            children: filos && filos.length > 0 ? filos.map((filo, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: filo.fil_nombre.trim(),\n              children: filo.fil_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay filos disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"clase-select-label\",\n            children: \"Clase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"clase-select-label\",\n            value: selectedClase,\n            onChange: handleClaseChange,\n            children: clases && clases.length > 0 ? clases.map((clase, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: clase.cla_nombre.trim(),\n              children: clase.cla_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay clases disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"orden-select-label\",\n            children: \"Orden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"orden-select-label\",\n            value: selectedOrden,\n            onChange: handleOrdenChange,\n            children: ordenes && ordenes.length > 0 ? ordenes.map((orden, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: orden.ord_nombre.trim(),\n              children: orden.ord_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay ordenes disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"familia-select-label\",\n            children: \"Familia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"familia-select-label\",\n            value: selectedFamilia,\n            onChange: handleFamiliaChange,\n            children: familias && familias.length > 0 ? familias.map((familia, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: familia.gen_nombre.trim(),\n              children: familia.gen_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay familias disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"genero-select-label\",\n            children: \"Genero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"genero-select-label\",\n            value: selectedGenero,\n            onChange: handleGeneroChange,\n            children: generos && generos.length > 0 ? generos.map((genero, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: genero.gen_nombre.trim(),\n              children: genero.gen_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay provincias disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Especie\",\n            value: selectedEspecie,\n            onChange: handleEspecieChange,\n            variant: \"filled\",\n            InputLabelProps: {\n              shrink: true\n            } // Esto hará que la etiqueta se reduzca automáticamente\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSearch,\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      style: {\n        color: 'black'\n      },\n      children: [\"Opciones seleccionadas: \", selectedOptions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TaxonomicList, \"CkhGxjx7aAtuJiYokDUmlUHPNgw=\");\n_c2 = TaxonomicList;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"TaxonomicList\");","map":{"version":3,"names":["React","useEffect","useState","styled","Button","Typography","Box","FormControl","InputLabel","Select","MenuItem","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledForm","background","padding","borderRadius","boxShadow","opacity","width","margin","display","flexDirection","gap","_c","TaxonomicList","_s","openDialog","setOpenDialog","setTaxonomic","reino","setReino","selectedReino","setSelectedReino","filos","setFilos","selectedFilos","setSelectedFilos","clases","setClases","selectedClase","setSelectedClase","ordenes","setOrdenes","selectedOrden","setSelectedOrden","familias","setFamilias","selectedFamilia","setSelectedFamilia","generos","setGeneros","selectedGenero","setSelectedGenero","selectedGeneroText","setSelectedGeneroText","especies","setEspecies","selectedEspecie","setSelectedEspecie","handleCloseDialog","fetch","then","response","json","data","catch","error","console","handleReinoChange","event","target","value","handleFiloChange","handleClaseChange","handleOrdenChange","handleFamiliaChange","handleGeneroChange","handleEspecieChange","selectedOptions","setSelectedOptions","handleSearch","url","resultadoGeneroString","gen_id","toString","log","especieValue","children","variant","color","gutterBottom","component","fileName","_jsxFileName","lineNumber","columnNumber","style","id","labelId","onChange","map","index","rei_nombre","trim","length","filo","fil_nombre","clase","cla_nombre","orden","ord_nombre","familia","gen_nombre","genero","label","InputLabelProps","shrink","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/Insertar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport { Button, Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nconst StyledForm = styled('form')({\r\n  background: 'rgba(255, 255, 255, 1)',\r\n  padding: '100px', // Ajusta el padding según tus necesidades\r\n  borderRadius: '10px',\r\n  boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\r\n  opacity: 0.8,\r\n  width: '400px', // Ancho deseado\r\n  margin: '0 auto', // Esto centrará el formulario horizontalmente\r\n  display: 'flex',\r\n  flexDirection: 'column', // Para que los elementos estén en una disposición vertical\r\n  gap: '10px', // Espacio vertical entre elementos\r\n});\r\n\r\nexport default function TaxonomicList() {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [setTaxonomic] = useState([]);\r\n\r\n  // Reino\r\n  const [reino, setReino] = useState([]);\r\n  const [selectedReino, setSelectedReino] = useState('');\r\n\r\n  // Filo\r\n  const [filos, setFilos] = useState([]);\r\n  const [selectedFilos, setSelectedFilos] = useState('');\r\n\r\n  // Clase\r\n  const [clases, setClases] = useState([]);\r\n  const [selectedClase, setSelectedClase] = useState('');\r\n\r\n  // Orden\r\n  const [ordenes, setOrdenes] = useState([]);\r\n  const [selectedOrden, setSelectedOrden] = useState('');\r\n\r\n  // Familia\r\n  const [familias, setFamilias] = useState([]);\r\n  const [selectedFamilia, setSelectedFamilia] = useState('');\r\n\r\n  // Genero\r\n  const [generos, setGeneros] = useState([]);\r\n  const [selectedGenero, setSelectedGenero] = useState('');\r\n  const [selectedGeneroText, setSelectedGeneroText] = useState('');\r\n\r\n\r\n  // Especie\r\n  const [especies, setEspecies] = useState([]);\r\n  const [selectedEspecie, setSelectedEspecie] = useState('');\r\n\r\n\r\n\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/taxonReino')\r\n      .then(response => response.json())\r\n      .then(data => setReino(data))\r\n      .catch(error => console.error('Error:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedReino !== '') {\r\n      fetch(`http://localhost:4000/taxonFiloByReino/${selectedReino}`)\r\n        .then(response => response.json())\r\n        .then(data => setFilos(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedReino]);\r\n\r\n  useEffect(() => {\r\n    if (selectedFilos !== '') {\r\n      fetch(`http://localhost:4000/taxonClaseByFilo/${selectedFilos}`)\r\n        .then(response => response.json())\r\n        .then(data => setClases(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedFilos]);\r\n\r\n  useEffect(() => {\r\n    if (selectedClase !== '') {\r\n      fetch(`http://localhost:4000/taxonOrdenByClase/${selectedClase}`)\r\n        .then(response => response.json())\r\n        .then(data => setOrdenes(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedClase]);\r\n\r\n  useEffect(() => {\r\n    if (selectedOrden !== '') {\r\n      fetch(`http://localhost:4000/taxonFamiliaByOrden/${selectedOrden}`)\r\n        .then(response => response.json())\r\n        .then(data => setFamilias(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedOrden]);\r\n\r\n  useEffect(() => {\r\n    if (selectedFamilia !== '') {\r\n      fetch(`http://localhost:4000/taxonGeneroByFamilia/${selectedFamilia}`)\r\n        .then(response => response.json())\r\n        .then(data => setGeneros(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedFamilia]);\r\n\r\n  useEffect(() => {\r\n    if (selectedGenero !== '') {\r\n      fetch(`http://localhost:4000/taxonEspecieByGenero/${selectedGenero}`)\r\n        .then(response => response.json())\r\n        .then(data => setEspecies(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedGenero]);\r\n\r\n\r\n\r\n  const handleReinoChange = (event) => {\r\n    setSelectedReino(event.target.value);\r\n    setFilos([]);\r\n    setSelectedFilos('');\r\n    setClases([]);\r\n    setSelectedClase('');\r\n    setOrdenes([]);\r\n    setSelectedOrden('');\r\n    setFamilias([]);\r\n    setSelectedFamilia('');\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleFiloChange = (event) => {\r\n    setSelectedFilos(event.target.value);\r\n    setClases([]);\r\n    setSelectedClase('');\r\n    setOrdenes([]);\r\n    setSelectedOrden('');\r\n    setFamilias([]);\r\n    setSelectedFamilia('');\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleClaseChange = (event) => {\r\n    setSelectedClase(event.target.value);\r\n    setOrdenes([]);\r\n    setSelectedOrden('');\r\n    setFamilias([]);\r\n    setSelectedFamilia('');\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleOrdenChange = (event) => {\r\n    setSelectedOrden(event.target.value);\r\n    setFamilias([]);\r\n    setSelectedFamilia('');\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleFamiliaChange = (event) => {\r\n    setSelectedFamilia(event.target.value);\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleGeneroChange = (event) => {\r\n    setSelectedGenero(event.target.value);\r\n    setSelectedGeneroText(event.target.value);\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleEspecieChange = (event) => {\r\n    setSelectedEspecie(event.target.value);\r\n  };\r\n\r\n\r\n  // Variable para almacenar las opciones seleccionadas en una cadena\r\n  const [selectedOptions, setSelectedOptions] = useState('');\r\n\r\n  // ...\r\n\r\n  const handleSearch = () => {\r\n    // Actualizar la variable de estado con las opciones seleccionadas\r\n    const url = `http://localhost:4000/taxonGeneroNombre/${selectedGeneroText}`;\r\n\r\n    // Realiza la solicitud HTTP utilizando fetc\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Almacena la respuesta en una variable (por ejemplo, resultadoGenero)\r\n        const resultadoGeneroString = data.gen_id.toString();\r\n        // Puedes utilizar resultadoGenero como necesites en tu aplicación\r\n        console.log(\"Resultado del género:\", selectedGeneroText);\r\n        console.log(\"Id genero:\", resultadoGeneroString);\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n\r\n    const especieValue = selectedEspecie;\r\n\r\n    // Realizar cualquier acción adicional que necesites con especieValue\r\n    console.log(\"Valor de la especie:\", especieValue);\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <StyledForm>\r\n        <Typography variant=\"h\" color=\"#000080\" gutterBottom component=\"div\">\r\n          Filtrar por provincias\r\n        </Typography>\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n          {/* Reino */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"reino-select-label\">Reino</InputLabel>\r\n            <Select\r\n              labelId=\"reino-select-label\"\r\n              value={selectedReino}\r\n              onChange={handleReinoChange}\r\n            >\r\n              {reino.map((reino, index) => (\r\n                <MenuItem key={index} value={reino.rei_nombre.trim()}>\r\n                  {reino.rei_nombre.trim()}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Filo */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"filo-select-label\">Filo</InputLabel>\r\n            <Select\r\n              labelId=\"filo-select-label\"\r\n              value={selectedFilos}\r\n              onChange={handleFiloChange}\r\n            >\r\n              {filos && filos.length > 0 ? (\r\n                filos.map((filo, index) => (\r\n                  <MenuItem key={index} value={filo.fil_nombre.trim()}>\r\n                    {filo.fil_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay filos disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Clase */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"clase-select-label\">Clase</InputLabel>\r\n            <Select\r\n              labelId=\"clase-select-label\"\r\n              value={selectedClase}\r\n              onChange={handleClaseChange}\r\n            >\r\n              {clases && clases.length > 0 ? (\r\n                clases.map((clase, index) => (\r\n                  <MenuItem key={index} value={clase.cla_nombre.trim()}>\r\n                    {clase.cla_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay clases disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Orden */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"orden-select-label\">Orden</InputLabel>\r\n            <Select\r\n              labelId=\"orden-select-label\"\r\n              value={selectedOrden}\r\n              onChange={handleOrdenChange}\r\n            >\r\n              {ordenes && ordenes.length > 0 ? (\r\n                ordenes.map((orden, index) => (\r\n                  <MenuItem key={index} value={orden.ord_nombre.trim()}>\r\n                    {orden.ord_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay ordenes disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Familia */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"familia-select-label\">Familia</InputLabel>\r\n            <Select\r\n              labelId=\"familia-select-label\"\r\n              value={selectedFamilia}\r\n              onChange={handleFamiliaChange}\r\n            >\r\n              {familias && familias.length > 0 ? (\r\n                familias.map((familia, index) => (\r\n                  <MenuItem key={index} value={familia.gen_nombre.trim()}>\r\n                    {familia.gen_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay familias disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Genero */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"genero-select-label\">Genero</InputLabel>\r\n            <Select\r\n              labelId=\"genero-select-label\"\r\n              value={selectedGenero}\r\n              onChange={handleGeneroChange}\r\n            >\r\n              {generos && generos.length > 0 ? (\r\n                generos.map((genero, index) => (\r\n                  <MenuItem key={index} value={genero.gen_nombre.trim()}>\r\n                    {genero.gen_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay provincias disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Especie */}\r\n          <FormControl variant=\"filled\">\r\n            <TextField\r\n              label=\"Especie\"\r\n              value={selectedEspecie}\r\n              onChange={handleEspecieChange}\r\n              variant=\"filled\"\r\n              InputLabelProps={{ shrink: true }} // Esto hará que la etiqueta se reduzca automáticamente\r\n            />\r\n          </FormControl>\r\n\r\n\r\n        </div>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\r\n          Buscar\r\n        </Button>\r\n      </StyledForm>\r\n      <Typography variant=\"body1\" gutterBottom style={{ color: 'black' }}>\r\n        Opciones seleccionadas: {selectedOptions}\r\n      </Typography>\r\n\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,MAAM,EAAEC,UAAU,EAAEC,GAAG,EAAEC,WAAW,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AAElG,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGhD,MAAMC,UAAU,GAAGlB,MAAM,CAAC,MAAM,CAAC,CAAC;EAChCmB,UAAU,EAAE,wBAAwB;EACpCC,OAAO,EAAE,OAAO;EAAE;EAClBC,YAAY,EAAE,MAAM;EACpBC,SAAS,EAAE,6BAA6B;EACxCC,OAAO,EAAE,GAAG;EACZC,KAAK,EAAE,OAAO;EAAE;EAChBC,MAAM,EAAE,QAAQ;EAAE;EAClBC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EAAE;EACzBC,GAAG,EAAE,MAAM,CAAE;AACf,CAAC,CAAC;AAACC,EAAA,GAXGX,UAAU;AAahB,eAAe,SAASY,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;;EAEnC;EACA,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAM,CAACwC,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAM,CAAC4C,MAAM,EAAEC,SAAS,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8C,aAAa,EAAEC,gBAAgB,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAM,CAACgD,OAAO,EAAEC,UAAU,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkD,aAAa,EAAEC,gBAAgB,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAM,CAACoD,QAAQ,EAAEC,WAAW,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsD,eAAe,EAAEC,kBAAkB,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAM,CAACwD,OAAO,EAAEC,UAAU,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0D,cAAc,EAAEC,iBAAiB,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC4D,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;;EAGhE;EACA,MAAM,CAAC8D,QAAQ,EAAEC,WAAW,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgE,eAAe,EAAEC,kBAAkB,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAK1D,MAAMkE,iBAAiB,GAAGA,CAAA,KAAM;IAC9BhC,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACdoE,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIlC,QAAQ,CAACkC,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN1E,SAAS,CAAC,MAAM;IACd,IAAIuC,aAAa,KAAK,EAAE,EAAE;MACxB6B,KAAK,CAAE,0CAAyC7B,aAAc,EAAC,CAAC,CAC7D8B,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI9B,QAAQ,CAAC8B,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAACnC,aAAa,CAAC,CAAC;EAEnBvC,SAAS,CAAC,MAAM;IACd,IAAI2C,aAAa,KAAK,EAAE,EAAE;MACxByB,KAAK,CAAE,0CAAyCzB,aAAc,EAAC,CAAC,CAC7D0B,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI1B,SAAS,CAAC0B,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAAC/B,aAAa,CAAC,CAAC;EAEnB3C,SAAS,CAAC,MAAM;IACd,IAAI+C,aAAa,KAAK,EAAE,EAAE;MACxBqB,KAAK,CAAE,2CAA0CrB,aAAc,EAAC,CAAC,CAC9DsB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAItB,UAAU,CAACsB,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAAC3B,aAAa,CAAC,CAAC;EAEnB/C,SAAS,CAAC,MAAM;IACd,IAAImD,aAAa,KAAK,EAAE,EAAE;MACxBiB,KAAK,CAAE,6CAA4CjB,aAAc,EAAC,CAAC,CAChEkB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIlB,WAAW,CAACkB,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAACvB,aAAa,CAAC,CAAC;EAEnBnD,SAAS,CAAC,MAAM;IACd,IAAIuD,eAAe,KAAK,EAAE,EAAE;MAC1Ba,KAAK,CAAE,8CAA6Cb,eAAgB,EAAC,CAAC,CACnEc,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAId,UAAU,CAACc,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAACnB,eAAe,CAAC,CAAC;EAErBvD,SAAS,CAAC,MAAM;IACd,IAAI2D,cAAc,KAAK,EAAE,EAAE;MACzBS,KAAK,CAAE,8CAA6CT,cAAe,EAAC,CAAC,CAClEU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIR,WAAW,CAACQ,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAACf,cAAc,CAAC,CAAC;EAIpB,MAAMiB,iBAAiB,GAAIC,KAAK,IAAK;IACnCrC,gBAAgB,CAACqC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACpCrC,QAAQ,CAAC,EAAE,CAAC;IACZE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,SAAS,CAAC,EAAE,CAAC;IACbE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,UAAU,CAAC,EAAE,CAAC;IACdE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,UAAU,CAAC,EAAE,CAAC;IACdE,iBAAiB,CAAC,EAAE,CAAC;IACrBI,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAMc,gBAAgB,GAAIH,KAAK,IAAK;IAClCjC,gBAAgB,CAACiC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACpCjC,SAAS,CAAC,EAAE,CAAC;IACbE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,UAAU,CAAC,EAAE,CAAC;IACdE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,UAAU,CAAC,EAAE,CAAC;IACdE,iBAAiB,CAAC,EAAE,CAAC;IACrBI,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAMe,iBAAiB,GAAIJ,KAAK,IAAK;IACnC7B,gBAAgB,CAAC6B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACpC7B,UAAU,CAAC,EAAE,CAAC;IACdE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,UAAU,CAAC,EAAE,CAAC;IACdE,iBAAiB,CAAC,EAAE,CAAC;IACrBI,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAMgB,iBAAiB,GAAIL,KAAK,IAAK;IACnCzB,gBAAgB,CAACyB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACpCzB,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,UAAU,CAAC,EAAE,CAAC;IACdE,iBAAiB,CAAC,EAAE,CAAC;IACrBI,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAMiB,mBAAmB,GAAIN,KAAK,IAAK;IACrCrB,kBAAkB,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACtCrB,UAAU,CAAC,EAAE,CAAC;IACdE,iBAAiB,CAAC,EAAE,CAAC;IACrBI,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAMkB,kBAAkB,GAAIP,KAAK,IAAK;IACpCjB,iBAAiB,CAACiB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACrCjB,qBAAqB,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACzCf,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAMmB,mBAAmB,GAAIR,KAAK,IAAK;IACrCX,kBAAkB,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACxC,CAAC;;EAGD;EACA,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGtF,QAAQ,CAAC,EAAE,CAAC;;EAE1D;;EAEA,MAAMuF,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,MAAMC,GAAG,GAAI,2CAA0C5B,kBAAmB,EAAC;;IAE3E;IACAO,KAAK,CAACqB,GAAG,CAAC,CACPpB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACA,MAAMkB,qBAAqB,GAAGlB,IAAI,CAACmB,MAAM,CAACC,QAAQ,CAAC,CAAC;MACpD;MACAjB,OAAO,CAACkB,GAAG,CAAC,uBAAuB,EAAEhC,kBAAkB,CAAC;MACxDc,OAAO,CAACkB,GAAG,CAAC,YAAY,EAAEH,qBAAqB,CAAC;IAClD,CAAC,CAAC,CACDjB,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IAEjD,MAAMoB,YAAY,GAAG7B,eAAe;;IAEpC;IACAU,OAAO,CAACkB,GAAG,CAAC,sBAAsB,EAAEC,YAAY,CAAC;EAEnD,CAAC;EAED,oBACE7E,OAAA,CAAAE,SAAA;IAAA4E,QAAA,gBAGE9E,OAAA,CAACG,UAAU;MAAA2E,QAAA,gBACT9E,OAAA,CAACb,UAAU;QAAC4F,OAAO,EAAC,GAAG;QAACC,KAAK,EAAC,SAAS;QAACC,YAAY;QAACC,SAAS,EAAC,KAAK;QAAAJ,QAAA,EAAC;MAErE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEbtF,OAAA;QAAKuF,KAAK,EAAE;UAAE5E,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAiE,QAAA,gBAEpE9E,OAAA,CAACX,WAAW;UAAC0F,OAAO,EAAC,QAAQ;UAAAD,QAAA,gBAC3B9E,OAAA,CAACV,UAAU;YAACkG,EAAE,EAAC,oBAAoB;YAAAV,QAAA,EAAC;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACtDtF,OAAA,CAACT,MAAM;YACLkG,OAAO,EAAC,oBAAoB;YAC5B3B,KAAK,EAAExC,aAAc;YACrBoE,QAAQ,EAAE/B,iBAAkB;YAAAmB,QAAA,EAE3B1D,KAAK,CAACuE,GAAG,CAAC,CAACvE,KAAK,EAAEwE,KAAK,kBACtB5F,OAAA,CAACR,QAAQ;cAAasE,KAAK,EAAE1C,KAAK,CAACyE,UAAU,CAACC,IAAI,CAAC,CAAE;cAAAhB,QAAA,EAClD1D,KAAK,CAACyE,UAAU,CAACC,IAAI,CAAC;YAAC,GADXF,KAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGdtF,OAAA,CAACX,WAAW;UAAC0F,OAAO,EAAC,QAAQ;UAAAD,QAAA,gBAC3B9E,OAAA,CAACV,UAAU;YAACkG,EAAE,EAAC,mBAAmB;YAAAV,QAAA,EAAC;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACpDtF,OAAA,CAACT,MAAM;YACLkG,OAAO,EAAC,mBAAmB;YAC3B3B,KAAK,EAAEpC,aAAc;YACrBgE,QAAQ,EAAE3B,gBAAiB;YAAAe,QAAA,EAE1BtD,KAAK,IAAIA,KAAK,CAACuE,MAAM,GAAG,CAAC,GACxBvE,KAAK,CAACmE,GAAG,CAAC,CAACK,IAAI,EAAEJ,KAAK,kBACpB5F,OAAA,CAACR,QAAQ;cAAasE,KAAK,EAAEkC,IAAI,CAACC,UAAU,CAACH,IAAI,CAAC,CAAE;cAAAhB,QAAA,EACjDkB,IAAI,CAACC,UAAU,CAACH,IAAI,CAAC;YAAC,GADVF,KAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACX,CAAC,gBAEFtF,OAAA,CAACR,QAAQ;cAACsE,KAAK,EAAC,EAAE;cAAAgB,QAAA,EAAC;YAAwB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU;UACtD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGdtF,OAAA,CAACX,WAAW;UAAC0F,OAAO,EAAC,QAAQ;UAAAD,QAAA,gBAC3B9E,OAAA,CAACV,UAAU;YAACkG,EAAE,EAAC,oBAAoB;YAAAV,QAAA,EAAC;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACtDtF,OAAA,CAACT,MAAM;YACLkG,OAAO,EAAC,oBAAoB;YAC5B3B,KAAK,EAAEhC,aAAc;YACrB4D,QAAQ,EAAE1B,iBAAkB;YAAAc,QAAA,EAE3BlD,MAAM,IAAIA,MAAM,CAACmE,MAAM,GAAG,CAAC,GAC1BnE,MAAM,CAAC+D,GAAG,CAAC,CAACO,KAAK,EAAEN,KAAK,kBACtB5F,OAAA,CAACR,QAAQ;cAAasE,KAAK,EAAEoC,KAAK,CAACC,UAAU,CAACL,IAAI,CAAC,CAAE;cAAAhB,QAAA,EAClDoB,KAAK,CAACC,UAAU,CAACL,IAAI,CAAC;YAAC,GADXF,KAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACX,CAAC,gBAEFtF,OAAA,CAACR,QAAQ;cAACsE,KAAK,EAAC,EAAE;cAAAgB,QAAA,EAAC;YAAyB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU;UACvD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGdtF,OAAA,CAACX,WAAW;UAAC0F,OAAO,EAAC,QAAQ;UAAAD,QAAA,gBAC3B9E,OAAA,CAACV,UAAU;YAACkG,EAAE,EAAC,oBAAoB;YAAAV,QAAA,EAAC;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACtDtF,OAAA,CAACT,MAAM;YACLkG,OAAO,EAAC,oBAAoB;YAC5B3B,KAAK,EAAE5B,aAAc;YACrBwD,QAAQ,EAAEzB,iBAAkB;YAAAa,QAAA,EAE3B9C,OAAO,IAAIA,OAAO,CAAC+D,MAAM,GAAG,CAAC,GAC5B/D,OAAO,CAAC2D,GAAG,CAAC,CAACS,KAAK,EAAER,KAAK,kBACvB5F,OAAA,CAACR,QAAQ;cAAasE,KAAK,EAAEsC,KAAK,CAACC,UAAU,CAACP,IAAI,CAAC,CAAE;cAAAhB,QAAA,EAClDsB,KAAK,CAACC,UAAU,CAACP,IAAI,CAAC;YAAC,GADXF,KAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACX,CAAC,gBAEFtF,OAAA,CAACR,QAAQ;cAACsE,KAAK,EAAC,EAAE;cAAAgB,QAAA,EAAC;YAA0B;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU;UACxD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGdtF,OAAA,CAACX,WAAW;UAAC0F,OAAO,EAAC,QAAQ;UAAAD,QAAA,gBAC3B9E,OAAA,CAACV,UAAU;YAACkG,EAAE,EAAC,sBAAsB;YAAAV,QAAA,EAAC;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC1DtF,OAAA,CAACT,MAAM;YACLkG,OAAO,EAAC,sBAAsB;YAC9B3B,KAAK,EAAExB,eAAgB;YACvBoD,QAAQ,EAAExB,mBAAoB;YAAAY,QAAA,EAE7B1C,QAAQ,IAAIA,QAAQ,CAAC2D,MAAM,GAAG,CAAC,GAC9B3D,QAAQ,CAACuD,GAAG,CAAC,CAACW,OAAO,EAAEV,KAAK,kBAC1B5F,OAAA,CAACR,QAAQ;cAAasE,KAAK,EAAEwC,OAAO,CAACC,UAAU,CAACT,IAAI,CAAC,CAAE;cAAAhB,QAAA,EACpDwB,OAAO,CAACC,UAAU,CAACT,IAAI,CAAC;YAAC,GADbF,KAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACX,CAAC,gBAEFtF,OAAA,CAACR,QAAQ;cAACsE,KAAK,EAAC,EAAE;cAAAgB,QAAA,EAAC;YAA2B;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU;UACzD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGdtF,OAAA,CAACX,WAAW;UAAC0F,OAAO,EAAC,QAAQ;UAAAD,QAAA,gBAC3B9E,OAAA,CAACV,UAAU;YAACkG,EAAE,EAAC,qBAAqB;YAAAV,QAAA,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACxDtF,OAAA,CAACT,MAAM;YACLkG,OAAO,EAAC,qBAAqB;YAC7B3B,KAAK,EAAEpB,cAAe;YACtBgD,QAAQ,EAAEvB,kBAAmB;YAAAW,QAAA,EAE5BtC,OAAO,IAAIA,OAAO,CAACuD,MAAM,GAAG,CAAC,GAC5BvD,OAAO,CAACmD,GAAG,CAAC,CAACa,MAAM,EAAEZ,KAAK,kBACxB5F,OAAA,CAACR,QAAQ;cAAasE,KAAK,EAAE0C,MAAM,CAACD,UAAU,CAACT,IAAI,CAAC,CAAE;cAAAhB,QAAA,EACnD0B,MAAM,CAACD,UAAU,CAACT,IAAI,CAAC;YAAC,GADZF,KAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACX,CAAC,gBAEFtF,OAAA,CAACR,QAAQ;cAACsE,KAAK,EAAC,EAAE;cAAAgB,QAAA,EAAC;YAA6B;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU;UAC3D;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGdtF,OAAA,CAACX,WAAW;UAAC0F,OAAO,EAAC,QAAQ;UAAAD,QAAA,eAC3B9E,OAAA,CAACF,SAAS;YACR2G,KAAK,EAAC,SAAS;YACf3C,KAAK,EAAEd,eAAgB;YACvB0C,QAAQ,EAAEtB,mBAAoB;YAC9BW,OAAO,EAAC,QAAQ;YAChB2B,eAAe,EAAE;cAAEC,MAAM,EAAE;YAAK,CAAE,CAAC;UAAA;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CAAC,eAENtF,OAAA,CAACd,MAAM;QAAC6F,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAAC4B,OAAO,EAAErC,YAAa;QAAAO,QAAA,EAAC;MAEnE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACbtF,OAAA,CAACb,UAAU;MAAC4F,OAAO,EAAC,OAAO;MAACE,YAAY;MAACM,KAAK,EAAE;QAAEP,KAAK,EAAE;MAAQ,CAAE;MAAAF,QAAA,GAAC,0BAC1C,EAACT,eAAe;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA,eAEb,CAAC;AAEP;AAACtE,EAAA,CAlWuBD,aAAa;AAAA8F,GAAA,GAAb9F,aAAa;AAAA,IAAAD,EAAA,EAAA+F,GAAA;AAAAC,YAAA,CAAAhG,EAAA;AAAAgG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}