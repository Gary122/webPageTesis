{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  components: {\n    MuiTreeItem: {\n      styleOverrides: {\n        label: {\n          color: '#000000'\n        },\n        iconContainer: {\n          color: '#000000'\n        }\n      }\n    }\n  }\n});\nfunction TaxonomyTree() {\n  _s();\n  const [treeData, setTreeData] = useState([]);\n  function createTreeNode(id, name, children, level) {\n    return {\n      id: id.toString(),\n      name: name.trim(),\n      children,\n      level\n    };\n  }\n  async function loadNodeChildren(node) {\n    const level = node.level;\n    let url = '';\n    switch (level) {\n      case 'reino':\n        url = `http://localhost:4000/filos/${node.id}`;\n        break;\n      case 'filo':\n        url = `http://localhost:4000/clases/${node.id}`;\n        break;\n      case 'clase':\n        url = `http://localhost:4000/ordenes/${node.id}`;\n        break;\n      case 'orden':\n        url = `http://localhost:4000/familias/${node.id}`;\n        break;\n      case 'familia':\n        url = `http://localhost:4000/generos/${node.id}`;\n        break;\n      case 'genero':\n        url = `http://localhost:4000/especies/${node.id}`;\n        break;\n      default:\n        break;\n    }\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      return {\n        ...node,\n        children: data.map(item => createTreeNode(item.id, item.nombre, [], getNextLevel(level)))\n      };\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n      return node;\n    }\n  }\n  const handleNodeToggle = async (event, nodeIds) => {\n    if (nodeIds.length === 0) return;\n    const expandingNodeId = nodeIds[nodeIds.length - 1];\n    const nodeIndex = treeData.findIndex(node => node.id === expandingNodeId);\n    if (nodeIndex === -1) return;\n    const newNode = await loadNodeChildren(treeData[nodeIndex]);\n    setTreeData(treeData.map((node, index) => index === nodeIndex ? newNode : node));\n  };\n  async function fetchData() {\n    try {\n      const response = await fetch('http://localhost:4000/reinos');\n      const data = await response.json();\n      const nodes = data.map(item => createTreeNode(item.rei_id, item.rei_nombre, [], 'reino'));\n      setTreeData(nodes);\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const renderTree = nodes => nodes.map(node => /*#__PURE__*/_jsxDEV(TreeItem, {\n    nodeId: node.id,\n    label: node.name,\n    children: Array.isArray(node.children) ? renderTree(node.children) : null\n  }, node.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(TreeView, {\n      defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 38\n      }, this),\n      defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 36\n      }, this),\n      onNodeToggle: handleNodeToggle,\n      children: renderTree(treeData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(TaxonomyTree, \"beijQgCEr4PaHJnyDg4mOCdZI4w=\");\n_c = TaxonomyTree;\nexport default TaxonomyTree;\nvar _c;\n$RefreshReg$(_c, \"TaxonomyTree\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","TreeItem","ExpandMoreIcon","ChevronRightIcon","createTheme","ThemeProvider","jsxDEV","_jsxDEV","theme","components","MuiTreeItem","styleOverrides","label","color","iconContainer","TaxonomyTree","_s","treeData","setTreeData","createTreeNode","id","name","children","level","toString","trim","loadNodeChildren","node","url","response","fetch","data","json","map","item","nombre","getNextLevel","error","console","handleNodeToggle","event","nodeIds","length","expandingNodeId","nodeIndex","findIndex","newNode","index","fetchData","nodes","rei_id","rei_nombre","renderTree","nodeId","Array","isArray","fileName","_jsxFileName","lineNumber","columnNumber","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","_c","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n    components: {\n        MuiTreeItem: {\n            styleOverrides: {\n                label: {\n                    color: '#000000',\n                },\n                iconContainer: {\n                    color: '#000000',\n                },\n            },\n        },\n    },\n});\n\nfunction TaxonomyTree() {\n    const [treeData, setTreeData] = useState([]);\n\n    function createTreeNode(id, name, children, level) {\n        return { id: id.toString(), name: name.trim(), children, level };\n    }\n\n    async function loadNodeChildren(node) {\n        const level = node.level;\n        let url = '';\n\n        switch (level) {\n            case 'reino':\n                url = `http://localhost:4000/filos/${node.id}`;\n                break;\n            case 'filo':\n                url = `http://localhost:4000/clases/${node.id}`;\n                break;\n            case 'clase':\n                url = `http://localhost:4000/ordenes/${node.id}`;\n                break;\n            case 'orden':\n                url = `http://localhost:4000/familias/${node.id}`;\n                break;\n            case 'familia':\n                url = `http://localhost:4000/generos/${node.id}`;\n                break;\n            case 'genero':\n                url = `http://localhost:4000/especies/${node.id}`;\n                break;\n            default:\n                break;\n        }\n\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            return { ...node, children: data.map(item => createTreeNode(item.id, item.nombre, [], getNextLevel(level))) };\n        } catch (error) {\n            console.error('Error fetching data: ', error);\n            return node;\n        }\n    }\n\n    const handleNodeToggle = async (event, nodeIds) => {\n        if (nodeIds.length === 0) return;\n        const expandingNodeId = nodeIds[nodeIds.length - 1];\n        const nodeIndex = treeData.findIndex(node => node.id === expandingNodeId);\n        if (nodeIndex === -1) return;\n        const newNode = await loadNodeChildren(treeData[nodeIndex]);\n        setTreeData(treeData.map((node, index) => index === nodeIndex ? newNode : node));\n    };\n\n    async function fetchData() {\n        try {\n            const response = await fetch('http://localhost:4000/reinos');\n            const data = await response.json();\n\n            const nodes = data.map(item => createTreeNode(item.rei_id, item.rei_nombre, [], 'reino'));\n            setTreeData(nodes);\n        } catch (error) {\n            console.error('Error fetching data: ', error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const renderTree = (nodes) => nodes.map((node) => (\n        <TreeItem key={node.id} nodeId={node.id} label={node.name}>\n            {Array.isArray(node.children) ? renderTree(node.children) : null}\n        </TreeItem>\n    ));\n\n    return (\n        <ThemeProvider theme={theme}>\n            <TreeView\n                defaultCollapseIcon={<ExpandMoreIcon />}\n                defaultExpandIcon={<ChevronRightIcon />}\n                onNodeToggle={handleNodeToggle}\n            >\n                {renderTree(treeData)}\n            </TreeView>\n        </ThemeProvider>\n    );\n}\n\nexport default TaxonomyTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}