{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaxonomyTree() {\n  _s();\n  const [data, setData] = useState([]);\n\n  // Obtener los datos al montar el componente\n  useEffect(() => {\n    fetch('http://localhost:4000/taxonTree').then(response => response.json()).then(setData);\n  }, []);\n\n  // Una funci칩n para construir recursivamente los nodos del 치rbol a partir de los datos\n  const buildTreeItems = (items, idKey, nameKey, childrenKey) => {\n    return items.map(item => /*#__PURE__*/_jsxDEV(TreeItem, {\n      nodeId: item[idKey].toString(),\n      label: item[nameKey],\n      children: item[childrenKey] && buildTreeItems(item[childrenKey], idKey, nameKey, childrenKey)\n    }, item[idKey], false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }, this),\n    defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 26\n    }, this),\n    children: buildTreeItems(data, 'rei_id', 'rei_nombre', 'filos')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TaxonomyTree, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = TaxonomyTree;\nvar _c;\n$RefreshReg$(_c, \"TaxonomyTree\");","map":{"version":3,"names":["React","useEffect","useState","TreeView","TreeItem","ExpandMoreIcon","ChevronRightIcon","jsxDEV","_jsxDEV","TaxonomyTree","_s","data","setData","fetch","then","response","json","buildTreeItems","items","idKey","nameKey","childrenKey","map","item","nodeId","toString","label","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultCollapseIcon","defaultExpandIcon","_c","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nexport default function TaxonomyTree() {\n  const [data, setData] = useState([]);\n\n  // Obtener los datos al montar el componente\n  useEffect(() => {\n    fetch('http://localhost:4000/taxonTree')\n      .then(response => response.json())\n      .then(setData);\n  }, []);\n\n  // Una funci칩n para construir recursivamente los nodos del 치rbol a partir de los datos\n  const buildTreeItems = (items, idKey, nameKey, childrenKey) => {\n    return items.map(item => (\n      <TreeItem key={item[idKey]} nodeId={item[idKey].toString()} label={item[nameKey]}>\n        {item[childrenKey] && buildTreeItems(item[childrenKey], idKey, nameKey, childrenKey)}\n      </TreeItem>\n    ));\n  };\n\n  return (\n    <TreeView\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      {buildTreeItems(data, 'rei_id', 'rei_nombre', 'filos')}\n    </TreeView>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,gBAAgB,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACF,OAAO,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,cAAc,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,WAAW,KAAK;IAC7D,OAAOH,KAAK,CAACI,GAAG,CAACC,IAAI,iBACnBf,OAAA,CAACJ,QAAQ;MAAmBoB,MAAM,EAAED,IAAI,CAACJ,KAAK,CAAC,CAACM,QAAQ,CAAC,CAAE;MAACC,KAAK,EAAEH,IAAI,CAACH,OAAO,CAAE;MAAAO,QAAA,EAC9EJ,IAAI,CAACF,WAAW,CAAC,IAAIJ,cAAc,CAACM,IAAI,CAACF,WAAW,CAAC,EAAEF,KAAK,EAAEC,OAAO,EAAEC,WAAW;IAAC,GADvEE,IAAI,CAACJ,KAAK,CAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhB,CACX,CAAC;EACJ,CAAC;EAED,oBACEvB,OAAA,CAACL,QAAQ;IACP6B,mBAAmB,eAAExB,OAAA,CAACH,cAAc;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IACxCE,iBAAiB,eAAEzB,OAAA,CAACF,gBAAgB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IAAAJ,QAAA,EAEvCV,cAAc,CAACN,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO;EAAC;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEf;AAACrB,EAAA,CA3BuBD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}