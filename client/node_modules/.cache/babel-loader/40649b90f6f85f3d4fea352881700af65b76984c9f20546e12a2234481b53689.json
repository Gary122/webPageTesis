{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  components: {\n    MuiTreeItem: {\n      styleOverrides: {\n        label: {\n          color: '#000000'\n        },\n        iconContainer: {\n          color: '#000000'\n        }\n      }\n    }\n  }\n});\nfunction TaxonomyTree() {\n  _s();\n  const [treeData, setTreeData] = useState([]);\n  function createTreeNode(id, name, children, level, hasInfo) {\n    return {\n      id: id.toString(),\n      name: name.trim(),\n      children,\n      level,\n      hasInfo\n    };\n  }\n  function getNextLevel(currentLevel) {\n    switch (currentLevel) {\n      case 'reino':\n        return 'filo';\n      case 'filo':\n        return 'clase';\n      case 'clase':\n        return 'orden';\n      case 'orden':\n        return 'familia';\n      case 'familia':\n        return 'genero';\n      case 'genero':\n        return 'especie';\n      default:\n        return '';\n    }\n  }\n  async function loadNodeChildren(node) {\n    const level = node.level;\n    const nextLevel = getNextLevel(level);\n    let url = `http://localhost:4000/${nextLevel}s/${node.id}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const childNodes = data.map(item => createTreeNode(item.id, item.nombre, [], nextLevel, false));\n      return {\n        ...node,\n        children: childNodes\n      };\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n      return node;\n    }\n  }\n  async function fetchData() {\n    try {\n      const response = await fetch('http://localhost:4000/reinos', {\n        headers: {\n          'Cache-Control': 'no-cache'\n        }\n      });\n      const data = await response.json();\n      const nodes = data.map(item => createTreeNode(item.rei_id, item.rei_nombre, [], 'reino', true));\n      setTreeData(nodes);\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleNodeToggle = async (event, nodeIds) => {\n    const nodeId = nodeIds[nodeIds.length - 1];\n    const nodeIndex = treeData.findIndex(node => node.id === nodeId);\n    if (nodeIndex !== -1 && !treeData[nodeIndex].children.length) {\n      const updatedTreeData = [...treeData];\n      const node = updatedTreeData[nodeIndex];\n      const updatedNode = await loadNodeChildren(node);\n      node.children = updatedNode.children; // Actualizar los hijos del nodo\n      setTreeData(updatedTreeData);\n    }\n  };\n  const renderTree = nodes => {\n    return nodes.map(node => /*#__PURE__*/_jsxDEV(TreeItem, {\n      nodeId: node.id,\n      label: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [node.name, node.hasInfo && /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this),\n      onToggle: handleNodeToggle,\n      children: Array.isArray(node.children) && node.children.length > 0 ? renderTree(node.children) : null\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(TreeView, {\n      defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 30\n      }, this),\n      defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 28\n      }, this),\n      children: renderTree(treeData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(TaxonomyTree, \"beijQgCEr4PaHJnyDg4mOCdZI4w=\");\n_c = TaxonomyTree;\nexport default TaxonomyTree;\nvar _c;\n$RefreshReg$(_c, \"TaxonomyTree\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","TreeItem","ExpandMoreIcon","ChevronRightIcon","createTheme","ThemeProvider","jsxDEV","_jsxDEV","theme","components","MuiTreeItem","styleOverrides","label","color","iconContainer","TaxonomyTree","_s","treeData","setTreeData","createTreeNode","id","name","children","level","hasInfo","toString","trim","getNextLevel","currentLevel","loadNodeChildren","node","nextLevel","url","response","fetch","data","json","childNodes","map","item","nombre","error","console","fetchData","headers","nodes","rei_id","rei_nombre","handleNodeToggle","event","nodeIds","nodeId","length","nodeIndex","findIndex","updatedTreeData","updatedNode","renderTree","fileName","_jsxFileName","lineNumber","columnNumber","onToggle","Array","isArray","defaultCollapseIcon","defaultExpandIcon","_c","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  components: {\n    MuiTreeItem: {\n      styleOverrides: {\n        label: {\n          color: '#000000',\n        },\n        iconContainer: {\n          color: '#000000',\n        },\n      },\n    },\n  },\n});\n\nfunction TaxonomyTree() {\n  const [treeData, setTreeData] = useState([]);\n\n  function createTreeNode(id, name, children, level, hasInfo) {\n    return { id: id.toString(), name: name.trim(), children, level, hasInfo };\n  }\n\n  function getNextLevel(currentLevel) {\n    switch (currentLevel) {\n      case 'reino':\n        return 'filo';\n      case 'filo':\n        return 'clase';\n      case 'clase':\n        return 'orden';\n      case 'orden':\n        return 'familia';\n      case 'familia':\n        return 'genero';\n      case 'genero':\n        return 'especie';\n      default:\n        return '';\n    }\n  }\n\n  async function loadNodeChildren(node) {\n    const level = node.level;\n    const nextLevel = getNextLevel(level);\n    let url = `http://localhost:4000/${nextLevel}s/${node.id}`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const childNodes = data.map((item) =>\n        createTreeNode(item.id, item.nombre, [], nextLevel, false)\n      );\n      return { ...node, children: childNodes };\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n      return node;\n    }\n  }\n\n  async function fetchData() {\n    try {\n      const response = await fetch('http://localhost:4000/reinos', {\n        headers: {\n          'Cache-Control': 'no-cache',\n        },\n      });\n      const data = await response.json();\n      const nodes = data.map((item) =>\n        createTreeNode(item.rei_id, item.rei_nombre, [], 'reino', true)\n      );\n      setTreeData(nodes);\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleNodeToggle = async (event, nodeIds) => {\n    const nodeId = nodeIds[nodeIds.length - 1];\n    const nodeIndex = treeData.findIndex((node) => node.id === nodeId);\n    if (nodeIndex !== -1 && !treeData[nodeIndex].children.length) {\n      const updatedTreeData = [...treeData];\n      const node = updatedTreeData[nodeIndex];\n      const updatedNode = await loadNodeChildren(node);\n      node.children = updatedNode.children; // Actualizar los hijos del nodo\n      setTreeData(updatedTreeData);\n    }\n  };\n\n  const renderTree = (nodes) => {\n    return nodes.map((node) => (\n      <TreeItem\n        key={node.id}\n        nodeId={node.id}\n        label={\n          <div>\n            {node.name}\n            {node.hasInfo && <ChevronRightIcon />}\n          </div>\n        }\n        onToggle={handleNodeToggle}\n      >\n        {Array.isArray(node.children) && node.children.length > 0 ? renderTree(node.children) : null}\n      </TreeItem>\n    ));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <TreeView\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n      >\n        {renderTree(treeData)}\n      </TreeView>\n    </ThemeProvider>\n  );\n}\n\nexport default TaxonomyTree;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}