{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTreeItem = styled(TreeItem)(_ref => {\n  let {\n    rootNode,\n    hasData\n  } = _ref;\n  const borderColor = \"gray\";\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -16,\n      top: 12,\n      borderBottom: !rootNode ? `1px dashed ${borderColor}` : \"none\"\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 18,\n      borderLeft: `1px dashed ${borderColor}`\n    },\n    \"& .MuiTreeItem-content\": {\n      color: hasData ? \"black\" : \"inherit\",\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      textDecoration: hasData ? \"underline\" : \"none\" // Nuevo estilo para subrayar las opciones con datos\n    },\n\n    \"& .MuiTreeItem-iconContainer\": {\n      color: hasData ? \"black\" : \"inherit\"\n    }\n  };\n});\n_c = StyledTreeItem;\nexport default function FileSystemNavigator() {\n  _s();\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Verificar si cada reino tiene datos y establecer el estado hasData en consecuencia\n      const reinosWithData = reinosData.filter(reino => {\n        return filos.some(filo => filo.rei_id === reino.rei_id);\n      });\n      const updatedReinos = reinosData.map(reino => ({\n        ...reino,\n        hasData: reinosWithData.some(reinoData => reinoData.rei_id === reino.rei_id)\n      }));\n      setReinos(updatedReinos);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n  const fetchFilos = async reinoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n      // Obtener los ID de los reinos con filos que tienen datos\n      const reinosWithData = filosData.map(filo => filo.rei_id);\n      const updatedFilos = filosData.map(filo => ({\n        ...filo,\n        hasData: true // Establecer hasData como verdadero para todos los filos\n      }));\n\n      setFilos(updatedFilos);\n      setReinos(reinos.map(reino => ({\n        ...reino,\n        hasData: reinosWithData.includes(reino.rei_id) // Establecer hasData para los reinos\n      })));\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n  const fetchClases = async filoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      setClases(response.data);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n  const fetchOrdenes = async claseId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      setOrdenes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n  const fetchFamilias = async ordenId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      setFamilias(response.data);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n  const fetchGeneros = async familiaId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      setGeneros(response.data);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n  const fetchEspecies = async generoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      setEspecies(response.data);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find(reino => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        setFilos(filos.filter(filo => filo.rei_id === reinoId));\n        setClases([]);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find(filo => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find(clase => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find(orden => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find(familia => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find(genero => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n  const renderReinos = () => {\n    return reinos.map(reino => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `reino-${reino.rei_id}`,\n      label: reino.rei_nombre.trim(),\n      onClick: event => handleReinoClick(event, `reino-${reino.rei_id}`),\n      hasData: reino.hasData,\n      style: {\n        color: reino.hasData ? \"black\" : \"inherit\",\n        fontWeight: reino.hasData ? \"bold\" : \"inherit\"\n      },\n      children: renderFilos(reino.rei_id)\n    }, reino.rei_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFilos = reinoId => {\n    const filosOfReino = filos.filter(filo => filo.rei_id === reinoId);\n    return filosOfReino.map(filo => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `filo-${filo.fil_id}`,\n      label: filo.fil_nombre.trim(),\n      onClick: event => handleFiloClick(event, `filo-${filo.fil_id}`),\n      hasData: clases.some(clase => clase.fil_id === filo.fil_id),\n      children: renderClases(filo.fil_id)\n    }, filo.fil_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this));\n  };\n  const renderClases = filoId => {\n    const clasesOfFilo = clases.filter(clase => clase.fil_id === filoId);\n    return clasesOfFilo.map(clase => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `clase-${clase.cla_id}`,\n      label: clase.cla_nombre.trim(),\n      onClick: event => handleClaseClick(event, `clase-${clase.cla_id}`),\n      hasData: ordenes.some(orden => orden.cla_id === clase.cla_id),\n      children: renderOrdenes(clase.cla_id)\n    }, clase.cla_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this));\n  };\n  const renderOrdenes = claseId => {\n    const ordenesOfClase = ordenes.filter(orden => orden.cla_id === claseId);\n    return ordenesOfClase.map(orden => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `orden-${orden.ord_id}`,\n      label: orden.ord_nombre.trim(),\n      onClick: event => handleOrdenClick(event, `orden-${orden.ord_id}`),\n      hasData: familias.some(familia => familia.ord_id === orden.ord_id),\n      children: renderFamilias(orden.ord_id)\n    }, orden.ord_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFamilias = ordenId => {\n    const familiasOfOrden = familias.filter(familia => familia.ord_id === ordenId);\n    return familiasOfOrden.map(familia => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `familia-${familia.fam_id}`,\n      label: familia.gen_nombre.trim(),\n      onClick: event => handleFamiliaClick(event, `familia-${familia.fam_id}`),\n      hasData: generos.some(genero => genero.fam_id === familia.fam_id),\n      children: renderGeneros(familia.fam_id)\n    }, familia.fam_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this));\n  };\n  const renderGeneros = familiaId => {\n    const generosOfFamilia = generos.filter(genero => genero.fam_id === familiaId);\n    return generosOfFamilia.map(genero => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `genero-${genero.gen_id}`,\n      label: genero.gen_nombre.trim(),\n      onClick: event => handleGeneroClick(event, `genero-${genero.gen_id}`),\n      hasData: especies.some(especie => especie.gen_id === genero.gen_id),\n      children: renderEspecies(genero.gen_id)\n    }, genero.gen_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this));\n  };\n  const renderEspecies = generoId => {\n    const especiesOfGenero = especies.filter(especie => especie.gen_id === generoId);\n    return especiesOfGenero.map(especie => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `especie-${especie.esp_id}`,\n      label: especie.esp_nombre.trim()\n    }, especie.esp_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          border: 1,\n          borderColor: \"#333333\",\n          p: 2,\n          borderRadius: 2,\n          minHeight: \"100vh\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(TreeView, {\n                defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 40\n                }, this),\n                defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 38\n                }, this),\n                sx: {\n                  height: 240,\n                  flexGrow: 1\n                },\n                children: renderReinos()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n}\n_s(FileSystemNavigator, \"Qr7tXFAegoZuR8dToHmMoHuDu9s=\");\n_c2 = FileSystemNavigator;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledTreeItem\");\n$RefreshReg$(_c2, \"FileSystemNavigator\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","styled","ExpandMoreIcon","ChevronRightIcon","TreeItem","treeItemClasses","Grid","Typography","Box","SearchIcon","axios","jsxDEV","_jsxDEV","StyledTreeItem","_ref","rootNode","hasData","borderColor","position","pointerEvents","content","width","left","top","borderBottom","group","marginLeft","paddingLeft","borderLeft","color","fontWeight","textDecoration","_c","FileSystemNavigator","_s","reinos","setReinos","filos","setFilos","clases","setClases","ordenes","setOrdenes","familias","setFamilias","generos","setGeneros","especies","setEspecies","fetchReinos","response","get","reinosData","data","reinosWithData","filter","reino","some","filo","rei_id","updatedReinos","map","reinoData","error","console","fetchFilos","reinoId","filosData","updatedFilos","includes","fetchClases","filoId","fetchOrdenes","claseId","fetchFamilias","ordenId","fetchGeneros","familiaId","fetchEspecies","generoId","handleReinoClick","event","nodeId","split","find","toString","handleFiloClick","fil_id","handleClaseClick","clase","cla_id","handleOrdenClick","orden","ord_id","handleFamiliaClick","familia","fam_id","handleGeneroClick","genero","gen_id","renderReinos","label","rei_nombre","trim","onClick","style","children","renderFilos","fileName","_jsxFileName","lineNumber","columnNumber","filosOfReino","fil_nombre","renderClases","clasesOfFilo","cla_nombre","renderOrdenes","ordenesOfClase","ord_nombre","renderFamilias","familiasOfOrden","gen_nombre","renderGeneros","generosOfFamilia","especie","renderEspecies","especiesOfGenero","esp_id","esp_nombre","container","spacing","item","xs","border","p","borderRadius","minHeight","display","flexDirection","defaultCollapseIcon","defaultExpandIcon","sx","height","flexGrow","_c2","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\n\nconst StyledTreeItem = styled(TreeItem)(({ rootNode, hasData }) => {\n  const borderColor = \"gray\";\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -16,\n      top: 12,\n      borderBottom: !rootNode ? `1px dashed ${borderColor}` : \"none\",\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 18,\n      borderLeft: `1px dashed ${borderColor}`,\n    },\n    \"& .MuiTreeItem-content\": {\n      color: hasData ? \"black\" : \"inherit\",\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      textDecoration: hasData ? \"underline\" : \"none\", // Nuevo estilo para subrayar las opciones con datos\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: hasData ? \"black\" : \"inherit\",\n    },\n  };\n});\n\nexport default function FileSystemNavigator() {\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n\n\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Verificar si cada reino tiene datos y establecer el estado hasData en consecuencia\n      const reinosWithData = reinosData.filter((reino) => {\n        return filos.some((filo) => filo.rei_id === reino.rei_id);\n      });\n\n      const updatedReinos = reinosData.map((reino) => ({\n        ...reino,\n        hasData: reinosWithData.some((reinoData) => reinoData.rei_id === reino.rei_id),\n      }));\n\n      setReinos(updatedReinos);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n\n\n  const fetchFilos = async (reinoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n      // Obtener los ID de los reinos con filos que tienen datos\n      const reinosWithData = filosData.map((filo) => filo.rei_id);\n\n      const updatedFilos = filosData.map((filo) => ({\n        ...filo,\n        hasData: true, // Establecer hasData como verdadero para todos los filos\n      }));\n\n      setFilos(updatedFilos);\n      setReinos(reinos.map((reino) => ({\n        ...reino,\n        hasData: reinosWithData.includes(reino.rei_id), // Establecer hasData para los reinos\n      })));\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n\n  const fetchClases = async (filoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      setClases(response.data);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n\n  const fetchOrdenes = async (claseId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      setOrdenes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n\n  const fetchFamilias = async (ordenId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      setFamilias(response.data);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n\n  const fetchGeneros = async (familiaId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      setGeneros(response.data);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n\n  const fetchEspecies = async (generoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      setEspecies(response.data);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find((reino) => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        setFilos(filos.filter((filo) => filo.rei_id === reinoId));\n        setClases([]);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n\n\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find((filo) => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find((clase) => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find((orden) => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find((familia) => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find((genero) => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n\n  const renderReinos = () => {\n    return reinos.map((reino) => (\n      <StyledTreeItem\n        key={reino.rei_id}\n        nodeId={`reino-${reino.rei_id}`}\n        label={reino.rei_nombre.trim()}\n        onClick={(event) => handleReinoClick(event, `reino-${reino.rei_id}`)}\n        hasData={reino.hasData}\n        style={{ color: reino.hasData ? \"black\" : \"inherit\", fontWeight: reino.hasData ? \"bold\" : \"inherit\" }}\n      >\n        {/* Renderizar los filos */}\n        {renderFilos(reino.rei_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n\n  const renderFilos = (reinoId) => {\n    const filosOfReino = filos.filter((filo) => filo.rei_id === reinoId);\n\n    return filosOfReino.map((filo) => (\n      <StyledTreeItem\n        key={filo.fil_id}\n        nodeId={`filo-${filo.fil_id}`}\n        label={filo.fil_nombre.trim()}\n        onClick={(event) => handleFiloClick(event, `filo-${filo.fil_id}`)}\n        hasData={clases.some((clase) => clase.fil_id === filo.fil_id)}\n      >\n        {/* Renderizar las clases */}\n        {renderClases(filo.fil_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n  const renderClases = (filoId) => {\n    const clasesOfFilo = clases.filter((clase) => clase.fil_id === filoId);\n\n    return clasesOfFilo.map((clase) => (\n      <StyledTreeItem\n        key={clase.cla_id}\n        nodeId={`clase-${clase.cla_id}`}\n        label={clase.cla_nombre.trim()}\n        onClick={(event) => handleClaseClick(event, `clase-${clase.cla_id}`)}\n        hasData={ordenes.some((orden) => orden.cla_id === clase.cla_id)}\n      >\n        {/* Renderizar las órdenes */}\n        {renderOrdenes(clase.cla_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n  const renderOrdenes = (claseId) => {\n    const ordenesOfClase = ordenes.filter((orden) => orden.cla_id === claseId);\n\n    return ordenesOfClase.map((orden) => (\n      <StyledTreeItem\n        key={orden.ord_id}\n        nodeId={`orden-${orden.ord_id}`}\n        label={orden.ord_nombre.trim()}\n        onClick={(event) => handleOrdenClick(event, `orden-${orden.ord_id}`)}\n        hasData={familias.some((familia) => familia.ord_id === orden.ord_id)}\n      >\n        {/* Renderizar las familias */}\n        {renderFamilias(orden.ord_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n  const renderFamilias = (ordenId) => {\n    const familiasOfOrden = familias.filter((familia) => familia.ord_id === ordenId);\n\n    return familiasOfOrden.map((familia) => (\n      <StyledTreeItem\n        key={familia.fam_id}\n        nodeId={`familia-${familia.fam_id}`}\n        label={familia.gen_nombre.trim()}\n        onClick={(event) => handleFamiliaClick(event, `familia-${familia.fam_id}`)}\n        hasData={generos.some((genero) => genero.fam_id === familia.fam_id)}\n      >\n        {/* Renderizar los géneros */}\n        {renderGeneros(familia.fam_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n  const renderGeneros = (familiaId) => {\n    const generosOfFamilia = generos.filter((genero) => genero.fam_id === familiaId);\n\n    return generosOfFamilia.map((genero) => (\n      <StyledTreeItem\n        key={genero.gen_id}\n        nodeId={`genero-${genero.gen_id}`}\n        label={genero.gen_nombre.trim()}\n        onClick={(event) => handleGeneroClick(event, `genero-${genero.gen_id}`)}\n        hasData={especies.some((especie) => especie.gen_id === genero.gen_id)}\n      >\n        {/* Renderizar las especies */}\n        {renderEspecies(genero.gen_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n  const renderEspecies = (generoId) => {\n    const especiesOfGenero = especies.filter((especie) => especie.gen_id === generoId);\n\n    return especiesOfGenero.map((especie) => (\n      <StyledTreeItem\n        key={especie.esp_id}\n        nodeId={`especie-${especie.esp_id}`}\n        label={especie.esp_nombre.trim()}\n      />\n    ));\n  };\n\n  return (\n    <Box>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          {/* Contenedor del Árbol y Trabajo académico */}\n          <Box\n            border={1}\n            borderColor=\"#333333\"\n            p={2}\n            borderRadius={2}\n            minHeight=\"100vh\"\n            display=\"flex\"\n            flexDirection=\"column\"\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                {/* Árbol filogenético */}\n                <TreeView\n                  defaultCollapseIcon={<ExpandMoreIcon />}\n                  defaultExpandIcon={<ChevronRightIcon />}\n                  sx={{ height: 240, flexGrow: 1 }}\n                >\n                  {/* Renderizar los reinos */}\n                  {renderReinos()}\n                </TreeView>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}