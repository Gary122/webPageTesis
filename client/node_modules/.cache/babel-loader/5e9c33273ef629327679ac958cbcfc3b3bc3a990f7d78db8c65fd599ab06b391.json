{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  components: {\n    MuiTreeItem: {\n      styleOverrides: {\n        label: {\n          color: '#000000'\n        },\n        iconContainer: {\n          color: '#000000'\n        }\n      }\n    }\n  }\n});\nfunction TaxonomyTree() {\n  _s();\n  const [treeData, setTreeData] = useState([]);\n  const [expandedNodes, setExpandedNodes] = useState([]);\n  function createTreeNode(id, name, children, level) {\n    return {\n      id: id.toString(),\n      name: name.trim(),\n      children,\n      level\n    };\n  }\n  function getNextLevel(currentLevel) {\n    switch (currentLevel) {\n      case 'reino':\n        return 'filo';\n      case 'filo':\n        return 'clase';\n      case 'clase':\n        return 'orden';\n      case 'orden':\n        return 'familia';\n      case 'familia':\n        return 'genero';\n      case 'genero':\n        return 'especie';\n      default:\n        return '';\n    }\n  }\n  async function loadNodeChildren(node) {\n    const level = node.level;\n    const nextLevel = getNextLevel(level);\n    let url = `http://localhost:4000/${nextLevel}s/${node.id}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const childNodes = data.map(item => createTreeNode(item.id, item.nombre, [], nextLevel));\n      return {\n        ...node,\n        children: childNodes\n      };\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n      return node;\n    }\n  }\n  async function fetchData() {\n    try {\n      const response = await fetch('http://localhost:4000/reinos', {\n        headers: {\n          'Cache-Control': 'no-cache'\n        }\n      });\n      const data = await response.json();\n      const nodes = data.map(item => createTreeNode(item.rei_id, item.rei_nombre, [], 'reino'));\n      setTreeData(nodes);\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleNodeToggle = async (event, nodeIds) => {\n    const nodeId = nodeIds[nodeIds.length - 1];\n    const nodeIndex = treeData.findIndex(node => node.id === nodeId);\n    if (nodeIndex !== -1) {\n      const node = treeData[nodeIndex];\n      if (!node.children.length) {\n        const updatedNode = await loadNodeChildren(node);\n        node.children = updatedNode.children;\n        setTreeData([...treeData]); // Actualizar el árbol completo\n\n        // Agregar o eliminar el nodo de los nodos expandidos\n        if (expandedNodes.includes(nodeId)) {\n          setExpandedNodes(expandedNodes.filter(id => id !== nodeId));\n        } else {\n          setExpandedNodes([...expandedNodes, nodeId]);\n        }\n      } else {\n        // Si el nodo ya tiene hijos, solo agregar o eliminar el nodo de los nodos expandidos\n        if (expandedNodes.includes(nodeId)) {\n          setExpandedNodes(expandedNodes.filter(id => id !== nodeId));\n        } else {\n          setExpandedNodes([...expandedNodes, nodeId]);\n        }\n      }\n    }\n  };\n  const renderTree = nodes => {\n    return nodes.map(node => /*#__PURE__*/_jsxDEV(TreeItem, {\n      nodeId: node.id,\n      label: node.name,\n      onToggle: handleNodeToggle,\n      expanded: expandedNodes.includes(node.id).toString(),\n      children: Array.isArray(node.children) && node.children.length > 0 ? renderTree(node.children) : null\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(TreeView, {\n      defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 30\n      }, this),\n      defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 28\n      }, this),\n      children: renderTree(treeData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(TaxonomyTree, \"5WzQzWFn394CTGcNwxGAX6J4wp8=\");\n_c = TaxonomyTree;\nexport default TaxonomyTree;\nvar _c;\n$RefreshReg$(_c, \"TaxonomyTree\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","TreeItem","ExpandMoreIcon","ChevronRightIcon","createTheme","ThemeProvider","jsxDEV","_jsxDEV","theme","components","MuiTreeItem","styleOverrides","label","color","iconContainer","TaxonomyTree","_s","treeData","setTreeData","expandedNodes","setExpandedNodes","createTreeNode","id","name","children","level","toString","trim","getNextLevel","currentLevel","loadNodeChildren","node","nextLevel","url","response","fetch","data","json","childNodes","map","item","nombre","error","console","fetchData","headers","nodes","rei_id","rei_nombre","handleNodeToggle","event","nodeIds","nodeId","length","nodeIndex","findIndex","updatedNode","includes","filter","renderTree","onToggle","expanded","Array","isArray","fileName","_jsxFileName","lineNumber","columnNumber","defaultCollapseIcon","defaultExpandIcon","_c","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  components: {\n    MuiTreeItem: {\n      styleOverrides: {\n        label: {\n          color: '#000000',\n        },\n        iconContainer: {\n          color: '#000000',\n        },\n      },\n    },\n  },\n});\n\nfunction TaxonomyTree() {\n  const [treeData, setTreeData] = useState([]);\n  const [expandedNodes, setExpandedNodes] = useState([]);\n\n  function createTreeNode(id, name, children, level) {\n    return { id: id.toString(), name: name.trim(), children, level };\n  }\n\n  function getNextLevel(currentLevel) {\n    switch (currentLevel) {\n      case 'reino':\n        return 'filo';\n      case 'filo':\n        return 'clase';\n      case 'clase':\n        return 'orden';\n      case 'orden':\n        return 'familia';\n      case 'familia':\n        return 'genero';\n      case 'genero':\n        return 'especie';\n      default:\n        return '';\n    }\n  }\n\n  async function loadNodeChildren(node) {\n    const level = node.level;\n    const nextLevel = getNextLevel(level);\n    let url = `http://localhost:4000/${nextLevel}s/${node.id}`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const childNodes = data.map((item) =>\n        createTreeNode(item.id, item.nombre, [], nextLevel)\n      );\n      return { ...node, children: childNodes };\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n      return node;\n    }\n  }\n\n  async function fetchData() {\n    try {\n      const response = await fetch('http://localhost:4000/reinos', {\n        headers: {\n          'Cache-Control': 'no-cache',\n        },\n      });\n      const data = await response.json();\n      const nodes = data.map((item) =>\n        createTreeNode(item.rei_id, item.rei_nombre, [], 'reino')\n      );\n      setTreeData(nodes);\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleNodeToggle = async (event, nodeIds) => {\n    const nodeId = nodeIds[nodeIds.length - 1];\n    const nodeIndex = treeData.findIndex((node) => node.id === nodeId);\n    if (nodeIndex !== -1) {\n      const node = treeData[nodeIndex];\n      if (!node.children.length) {\n        const updatedNode = await loadNodeChildren(node);\n        node.children = updatedNode.children;\n        setTreeData([...treeData]); // Actualizar el árbol completo\n\n        // Agregar o eliminar el nodo de los nodos expandidos\n        if (expandedNodes.includes(nodeId)) {\n          setExpandedNodes(expandedNodes.filter((id) => id !== nodeId));\n        } else {\n          setExpandedNodes([...expandedNodes, nodeId]);\n        }\n      } else {\n        // Si el nodo ya tiene hijos, solo agregar o eliminar el nodo de los nodos expandidos\n        if (expandedNodes.includes(nodeId)) {\n          setExpandedNodes(expandedNodes.filter((id) => id !== nodeId));\n        } else {\n          setExpandedNodes([...expandedNodes, nodeId]);\n        }\n      }\n    }\n  };\n\n  const renderTree = (nodes) => {\n    return nodes.map((node) => (\n      <TreeItem\n        key={node.id}\n        nodeId={node.id}\n        label={node.name}\n        onToggle={handleNodeToggle}\n        expanded={expandedNodes.includes(node.id).toString()}\n      >\n        {Array.isArray(node.children) && node.children.length > 0\n          ? renderTree(node.children)\n          : null}\n      </TreeItem>\n    ));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <TreeView\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n      >\n        {renderTree(treeData)}\n      </TreeView>\n    </ThemeProvider>\n  );\n}\n\nexport default TaxonomyTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}