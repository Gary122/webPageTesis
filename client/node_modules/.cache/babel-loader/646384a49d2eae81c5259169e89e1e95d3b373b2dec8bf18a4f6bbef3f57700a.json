{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\Georeference.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'; // Importa los componentes de react-leaflet\nimport 'leaflet/dist/leaflet.css'; // Importa el CSS de Leaflet\n\nimport { styled } from \"@mui/system\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Typography } from '@mui/material';\nimport bannerImage from '../imagenes/bannerInicio.jpg'; // Asegúrate de cambiar esto a la ruta correcta de tu imagen\nimport { Box, FormControl, InputLabel, Select, MenuItem, Typograph } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledBannerImage = styled('div')({\n  backgroundImage: `url(${bannerImage})`,\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center center',\n  height: '600px',\n  width: '100%',\n  opacity: 0.7,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: '0 20px',\n  color: '#FFFFFF',\n  margin: '0 auto'\n});\nconst StyledForm = styled('form')({\n  background: 'rgba(255, 255, 255, 1)',\n  // Un fondo blanco con opacidad del 70%.\n  padding: '20px',\n  borderRadius: '10px',\n  // Bordes redondeados.\n  boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n  // Sombra para darle un poco de profundidad.\n  opacity: 0.8\n});\n_c = StyledForm;\nconst ContentContainer = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '100%',\n  '@media (max-width:600px)': {\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n});\n_c2 = ContentContainer;\nconst StyledTableCell = styled(TableCell)({\n  padding: '4px'\n});\n_c3 = StyledTableCell;\nconst StyledTableHeaderCell = styled(TableCell)({\n  padding: '8px',\n  backgroundColor: '#3f51b5',\n  // Color de fondo del encabezado\n  color: '#fff',\n  // Color del texto del encabezado\n  fontSize: '1.1em' // Tamaño de la fuente del encabezado\n});\n_c4 = StyledTableHeaderCell;\nconst StyledTableRow = styled(TableRow)({\n  '&:nth-of-type(odd)': {\n    backgroundColor: '#f4f6f8' // Puedes cambiar a cualquier color que te guste.\n  },\n\n  '&:hover': {\n    backgroundColor: 'lightgray'\n  }\n});\n_c5 = StyledTableRow;\nconst StyledTableContainer = styled(TableContainer)({\n  borderRadius: '10px',\n  // Puedes ajustar el valor a tu gusto.\n  boxShadow: '0px 0px 10px 0px rgba(0,0,0,0.2)',\n  // Sombra alrededor de la tabla.\n  overflow: 'auto',\n  // Permite el desplazamiento cuando el contenido supera la altura máxima.\n  maxHeight: '400px' // Ajusta esto a la altura que desees.\n});\n_c6 = StyledTableContainer;\nexport default function TaskList() {\n  _s();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [provinces, setProvinces] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [isTableVisible, setIsTableVisible] = useState(false);\n  const loadTasks = async province => {\n    const response = await fetch(`http://localhost:4000/consult/${province}`);\n    const data = await response.json();\n    if (data.message) {\n      setOpenDialog(true);\n      setIsTableVisible(false); // Ocultar la tabla si se abre el diálogo\n    } else {\n      setTasks(data);\n      setIsTableVisible(data.length > 0);\n    }\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setIsTableVisible(false); // Ocultar la tabla cuando se cierra el diálogo\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:4000/country').then(response => response.json()).then(data => setCountries(data)).catch(error => console.error('Error:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedCountry !== '') {\n      fetch(`http://localhost:4000/stateByCountry/${selectedCountry}`).then(response => response.json()).then(data => setProvinces(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedCountry]);\n  useEffect(() => {\n    if (selectedProvince) {\n      loadTasks(selectedProvince);\n    }\n  }, [selectedProvince]);\n  const handleCountryChange = event => {\n    setSelectedCountry(event.target.value);\n    setProvinces([]);\n    setSelectedProvince('');\n  };\n  const handleProvinceChange = event => {\n    setSelectedProvince(event.target.value);\n  };\n  const handleSearch = () => {\n    if (selectedProvince) {\n      loadTasks(selectedProvince);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '45%'\n          },\n          fontSize: '1.2em',\n          margin: '0 10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(StyledForm, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h\",\n            color: \"#000080\",\n            gutterBottom: true,\n            component: \"div\",\n            children: \"Fitrar por provincias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              sx: {\n                minWidth: 120,\n                margin: '0 10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"country-select-label\",\n                children: \"Pa\\xEDs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"country-select-label\",\n                value: selectedCountry,\n                onChange: handleCountryChange,\n                children: countries.map((country, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: country.pas_nombre.trim(),\n                  children: country.pas_nombre.trim()\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              sx: {\n                minWidth: 120,\n                margin: '0 10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"province-select-label\",\n                children: \"Provincia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"province-select-label\",\n                value: selectedProvince,\n                onChange: handleProvinceChange,\n                children: provinces && provinces.length > 0 ? provinces.map((province, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: province.pro_nombre.trim(),\n                  children: province.pro_nombre.trim()\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 45\n                }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"No hay provincias disponibles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                open: openDialog,\n                onClose: handleCloseDialog,\n                \"aria-labelledby\": \"alert-dialog-title\",\n                \"aria-describedby\": \"alert-dialog-description\",\n                children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                  id: \"alert-dialog-title\",\n                  children: \"Advertencia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                  children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                    id: \"alert-dialog-description\",\n                    children: \"No se encontraron datos para la provincia seleccionada.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: handleCloseDialog,\n                    color: \"primary\",\n                    autoFocus: true,\n                    children: \"Aceptar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleSearch,\n              children: \"Buscar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: {\n            xs: '100%',\n            sm: '45%'\n          },\n          fontSize: '1.2em',\n          margin: '0 10px',\n          height: '600px'\n        },\n        children: tasks.length > 0 && /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [tasks[0].loc_latitud, tasks[0].loc_longitud],\n          zoom: 13,\n          style: {\n            height: \"100%\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Marker, {\n            position: [task.loc_latitud, task.loc_longitud],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: task.esp_nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), isTableVisible && (tasks.length > 0 ? /*#__PURE__*/_jsxDEV(StyledTableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        stickyHeader: true,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"Especie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"Sexo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"Parque Nacional \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"Provincia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"Identificador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"A\\xF1o identificado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"Colector\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"Fecha colectado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"Metodo colectar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n              children: \"Destino\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: task.esp_nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: task.esp_sexo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: task.loc_parque_nacional\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: task.pro_nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: task.ide_apellido\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: task.ide_anio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: task.col_apellido\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: task.col_fecha\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: task.col_metodo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: task.col_destino\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 41\n            }, this)]\n          }, task.esp_nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true);\n}\n_s(TaskList, \"eEcADIcLEHPLzl1AQTgiYHtydUQ=\");\n_c7 = TaskList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"ContentContainer\");\n$RefreshReg$(_c3, \"StyledTableCell\");\n$RefreshReg$(_c4, \"StyledTableHeaderCell\");\n$RefreshReg$(_c5, \"StyledTableRow\");\n$RefreshReg$(_c6, \"StyledTableContainer\");\n$RefreshReg$(_c7, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","styled","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Typography","bannerImage","Box","FormControl","InputLabel","Select","MenuItem","Typograph","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledBannerImage","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","height","width","opacity","display","flexDirection","justifyContent","alignItems","padding","color","margin","StyledForm","background","borderRadius","boxShadow","_c","ContentContainer","_c2","StyledTableCell","_c3","StyledTableHeaderCell","backgroundColor","fontSize","_c4","StyledTableRow","_c5","StyledTableContainer","overflow","maxHeight","_c6","TaskList","_s","openDialog","setOpenDialog","tasks","setTasks","countries","setCountries","selectedCountry","setSelectedCountry","provinces","setProvinces","selectedProvince","setSelectedProvince","isTableVisible","setIsTableVisible","loadTasks","province","response","fetch","data","json","message","length","handleCloseDialog","then","catch","error","console","handleCountryChange","event","target","value","handleProvinceChange","handleSearch","children","sx","xs","sm","variant","gutterBottom","component","fileName","_jsxFileName","lineNumber","columnNumber","minWidth","id","labelId","onChange","map","country","index","pas_nombre","trim","pro_nombre","open","onClose","onClick","autoFocus","center","loc_latitud","loc_longitud","zoom","style","url","attribution","task","position","esp_nombre","stickyHeader","scope","esp_sexo","loc_parque_nacional","ide_apellido","ide_anio","col_apellido","col_fecha","col_metodo","col_destino","_c7","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/Georeference.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'; // Importa los componentes de react-leaflet\r\nimport 'leaflet/dist/leaflet.css'; // Importa el CSS de Leaflet\r\n\r\nimport { styled } from \"@mui/system\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Typography } from '@mui/material';\r\nimport bannerImage from '../imagenes/bannerInicio.jpg';  // Asegúrate de cambiar esto a la ruta correcta de tu imagen\r\nimport { Box, FormControl, InputLabel, Select, MenuItem, Typograph } from '@mui/material';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StyledBannerImage = styled('div')({\r\n    backgroundImage: `url(${bannerImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center center',\r\n    height: '600px',\r\n    width: '100%',\r\n    opacity: 0.7,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '0 20px',\r\n    color: '#FFFFFF',\r\n    margin: '0 auto',\r\n});\r\n\r\nconst StyledForm = styled('form')({\r\n    background: 'rgba(255, 255, 255, 1)',  // Un fondo blanco con opacidad del 70%.\r\n    padding: '20px',\r\n    borderRadius: '10px',  // Bordes redondeados.\r\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',  // Sombra para darle un poco de profundidad.\r\n    opacity: 0.8\r\n\r\n});\r\n\r\n\r\nconst ContentContainer = styled('div')({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    '@media (max-width:600px)': {\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\n\r\nconst StyledTableCell = styled(TableCell)({\r\n    padding: '4px',\r\n});\r\n\r\nconst StyledTableHeaderCell = styled(TableCell)({\r\n    padding: '8px',\r\n    backgroundColor: '#3f51b5', // Color de fondo del encabezado\r\n    color: '#fff', // Color del texto del encabezado\r\n    fontSize: '1.1em', // Tamaño de la fuente del encabezado\r\n});\r\n\r\nconst StyledTableRow = styled(TableRow)({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: '#f4f6f8', // Puedes cambiar a cualquier color que te guste.\r\n    },\r\n    '&:hover': {\r\n        backgroundColor: 'lightgray',\r\n    },\r\n});\r\n\r\nconst StyledTableContainer = styled(TableContainer)({\r\n    borderRadius: '10px',  // Puedes ajustar el valor a tu gusto.\r\n    boxShadow: '0px 0px 10px 0px rgba(0,0,0,0.2)', // Sombra alrededor de la tabla.\r\n    overflow: 'auto', // Permite el desplazamiento cuando el contenido supera la altura máxima.\r\n    maxHeight: '400px', // Ajusta esto a la altura que desees.\r\n});\r\n\r\nexport default function TaskList() {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [selectedProvince, setSelectedProvince] = useState('');\r\n    const [isTableVisible, setIsTableVisible] = useState(false);\r\n\r\n\r\n    const loadTasks = async (province) => {\r\n        const response = await fetch(`http://localhost:4000/consult/${province}`);\r\n        const data = await response.json();\r\n        if (data.message) {\r\n            setOpenDialog(true);\r\n            setIsTableVisible(false); // Ocultar la tabla si se abre el diálogo\r\n        } else {\r\n            setTasks(data);\r\n            setIsTableVisible(data.length > 0);\r\n        }\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n        setIsTableVisible(false); // Ocultar la tabla cuando se cierra el diálogo\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/country')\r\n            .then(response => response.json())\r\n            .then(data => setCountries(data))\r\n            .catch(error => console.error('Error:', error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedCountry !== '') {\r\n            fetch(`http://localhost:4000/stateByCountry/${selectedCountry}`)\r\n                .then(response => response.json())\r\n                .then(data => setProvinces(data))\r\n                .catch(error => console.error('Error:', error));\r\n        }\r\n    }, [selectedCountry]);\r\n\r\n    useEffect(() => {\r\n        if (selectedProvince) {\r\n            loadTasks(selectedProvince);\r\n        }\r\n    }, [selectedProvince]);\r\n\r\n    const handleCountryChange = (event) => {\r\n        setSelectedCountry(event.target.value);\r\n        setProvinces([]);\r\n        setSelectedProvince('');\r\n    };\r\n\r\n    const handleProvinceChange = (event) => {\r\n        setSelectedProvince(event.target.value);\r\n    };\r\n\r\n    const handleSearch = () => {\r\n        if (selectedProvince) {\r\n            loadTasks(selectedProvince);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <ContentContainer>\r\n\r\n                <Box sx={{ width: { xs: '100%', sm: '45%' }, fontSize: '1.2em', margin: '0 10px' }}>\r\n\r\n\r\n                    <StyledForm>\r\n                        <Typography variant=\"h\" color=\"#000080\" gutterBottom component=\"div\">\r\n                            Fitrar por provincias\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <FormControl variant=\"filled\" sx={{ minWidth: 120, margin: '0 10px' }}>\r\n                                <InputLabel id=\"country-select-label\">País</InputLabel>\r\n                                <Select\r\n                                    labelId=\"country-select-label\"\r\n                                    value={selectedCountry}\r\n                                    onChange={handleCountryChange}\r\n                                >\r\n                                    {/* Aquí es donde mapeas los países para generar los elementos de menú */}\r\n                                    {countries.map((country, index) => (\r\n                                        <MenuItem key={index} value={country.pas_nombre.trim()}>\r\n                                            {country.pas_nombre.trim()}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"filled\" sx={{ minWidth: 120, margin: '0 10px' }}>\r\n                                <InputLabel id=\"province-select-label\">Provincia</InputLabel>\r\n                                <Select\r\n                                    labelId=\"province-select-label\"\r\n                                    value={selectedProvince}\r\n                                    onChange={handleProvinceChange}\r\n                                >\r\n                                    {/* Y aquí es donde mapeas las provincias para generar los elementos de menú */}\r\n                                    {provinces && provinces.length > 0 ? (\r\n                                        provinces.map((province, index) => (\r\n                                            <MenuItem key={index} value={province.pro_nombre.trim()}>\r\n                                                {province.pro_nombre.trim()}\r\n                                            </MenuItem>\r\n                                        ))\r\n                                    ) : (\r\n                                        <MenuItem value=\"\">No hay provincias disponibles</MenuItem>\r\n                                    )}\r\n                                </Select>\r\n                                <Dialog\r\n                                    open={openDialog}\r\n                                    onClose={handleCloseDialog}\r\n                                    aria-labelledby=\"alert-dialog-title\"\r\n                                    aria-describedby=\"alert-dialog-description\"\r\n                                >\r\n                                    <DialogTitle id=\"alert-dialog-title\">{\"Advertencia\"}</DialogTitle>\r\n                                    <DialogContent>\r\n                                        <DialogContentText id=\"alert-dialog-description\">\r\n                                            No se encontraron datos para la provincia seleccionada.\r\n                                        </DialogContentText>\r\n                                    </DialogContent>\r\n                                    <DialogActions>\r\n                                        <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n                                            Aceptar\r\n                                        </Button>\r\n                                    </DialogActions>\r\n                                </Dialog>\r\n\r\n                            </FormControl>\r\n                            <Button variant=\"contained\" onClick={handleSearch}>Buscar</Button>\r\n                        </Box>\r\n\r\n                    </StyledForm>\r\n                </Box>\r\n\r\n                <Box sx={{ width: { xs: '100%', sm: '45%' }, fontSize: '1.2em', margin: '0 10px', height: '600px' }}>\r\n                    {tasks.length > 0 && (\r\n                        <MapContainer center={[tasks[0].loc_latitud, tasks[0].loc_longitud]} zoom={13} style={{ height: \"100%\", width: \"100%\" }}>\r\n                            <TileLayer\r\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            />\r\n                            {tasks.map((task, index) => (\r\n                                <Marker key={index} position={[task.loc_latitud, task.loc_longitud]}>\r\n\r\n                                    <Popup>\r\n                                        {task.esp_nombre}\r\n                                    </Popup>\r\n                                </Marker>\r\n                            ))}\r\n                        </MapContainer>\r\n                    )}\r\n                </Box>\r\n\r\n\r\n            </ContentContainer>\r\n\r\n            {isTableVisible && (\r\n                tasks.length > 0 ? (\r\n                    <StyledTableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\" stickyHeader>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableHeaderCell>Especie</StyledTableHeaderCell>\r\n                                    <StyledTableHeaderCell>Sexo</StyledTableHeaderCell>\r\n                                    <StyledTableHeaderCell>Parque Nacional </StyledTableHeaderCell>\r\n                                    <StyledTableHeaderCell>Provincia</StyledTableHeaderCell>\r\n                                    <StyledTableHeaderCell>Identificador</StyledTableHeaderCell>\r\n                                    <StyledTableHeaderCell>Año identificado</StyledTableHeaderCell>\r\n                                    <StyledTableHeaderCell>Colector</StyledTableHeaderCell>\r\n                                    <StyledTableHeaderCell>Fecha colectado</StyledTableHeaderCell>\r\n                                    <StyledTableHeaderCell>Metodo colectar</StyledTableHeaderCell>\r\n                                    <StyledTableHeaderCell>Destino</StyledTableHeaderCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {tasks.map((task) => (\r\n                                    <StyledTableRow key={task.esp_nombre}>\r\n                                        <StyledTableCell component=\"th\" scope=\"row\">{task.esp_nombre}</StyledTableCell>\r\n                                        <StyledTableCell>{task.esp_sexo}</StyledTableCell>\r\n                                        <StyledTableCell>{task.loc_parque_nacional}</StyledTableCell>\r\n                                        <StyledTableCell>{task.pro_nombre}</StyledTableCell>\r\n                                        <StyledTableCell>{task.ide_apellido}</StyledTableCell>\r\n                                        <StyledTableCell>{task.ide_anio}</StyledTableCell>\r\n                                        <StyledTableCell>{task.col_apellido}</StyledTableCell>\r\n                                        <StyledTableCell>{task.col_fecha}</StyledTableCell>\r\n                                        <StyledTableCell>{task.col_metodo}</StyledTableCell>\r\n                                        <StyledTableCell>{task.col_destino}</StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </StyledTableContainer>\r\n                ) : (\r\n                    <Typography variant=\"h6\" color=\"error\"></Typography>\r\n                )\r\n            )}\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}