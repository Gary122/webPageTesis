{"ast":null,"code":"import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport AnimatedText from '../../Typography/AnimatedText';\nconst LabelBackground = _ref => {\n  let {\n    labeled,\n    labelLayoutWidth,\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    label,\n    backgroundColor,\n    roundness,\n    labelStyle,\n    maxFontSizeMultiplier\n  } = _ref;\n  const opacity = labeled.interpolate({\n    inputRange: [0, 0.6],\n    outputRange: [1, 0]\n  });\n  const labelTranslationX = {\n    translateX: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0]\n    })\n  };\n  const labelTextScaleY = {\n    scaleY: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1]\n    })\n  };\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n  const isRounded = roundness > 6;\n  const roundedEdgeCover = isRounded ? /*#__PURE__*/React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      bottom: Math.max(roundness, 2),\n      transform: [labelTranslationX],\n      opacity\n    }]\n  }) : null;\n  return [roundedEdgeCover, /*#__PURE__*/React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {\n      top: topPosition + 1,\n      width: labelLayoutWidth - placeholderStyle.paddingHorizontal,\n      backgroundColor,\n      opacity,\n      transform: labelTextTransform\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)];\n};\nexport default LabelBackground;\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  outlinedLabel: {\n    position: 'absolute',\n    left: 8,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  }\n});","map":{"version":3,"names":["React","Animated","StyleSheet","AnimatedText","LabelBackground","_ref","labeled","labelLayoutWidth","placeholderStyle","baseLabelTranslateX","topPosition","label","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","opacity","interpolate","inputRange","outputRange","labelTranslationX","translateX","labelTextScaleY","scaleY","labelTextTransform","transform","isRounded","roundedEdgeCover","createElement","View","key","pointerEvents","style","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","top","width","paddingHorizontal","numberOfLines","create","position","left","color"],"sources":["C:\\Users\\Cristobal\\Desktop\\proyectoTesis\\client\\node_modules\\react-native-paper\\src\\components\\TextInput\\Label\\LabelBackground.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  labeled,\n  labelLayoutWidth,\n  placeholderStyle,\n  baseLabelTranslateX,\n  topPosition,\n  label,\n  backgroundColor,\n  roundness,\n  labelStyle,\n  maxFontSizeMultiplier,\n}: LabelBackgroundProps) => {\n  const opacity = labeled.interpolate({\n    inputRange: [0, 0.6],\n    outputRange: [1, 0],\n  });\n\n  const labelTranslationX = {\n    translateX: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0],\n    }),\n  };\n\n  const labelTextScaleY = {\n    scaleY: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1],\n    }),\n  };\n\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n\n  const isRounded = roundness > 6;\n  const roundedEdgeCover = isRounded ? (\n    <Animated.View\n      key=\"labelBackground-view\"\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        styles.view,\n        {\n          backgroundColor,\n          maxHeight: Math.max(roundness / 3, 2),\n          bottom: Math.max(roundness, 2),\n          transform: [labelTranslationX],\n          opacity,\n        },\n      ]}\n    />\n  ) : null;\n\n  return [\n    roundedEdgeCover,\n    <AnimatedText\n      key=\"labelBackground-text\"\n      style={[\n        placeholderStyle,\n        labelStyle,\n        styles.outlinedLabel,\n        {\n          top: topPosition + 1,\n          width: labelLayoutWidth - placeholderStyle.paddingHorizontal,\n          backgroundColor,\n          opacity,\n          transform: labelTextTransform,\n        },\n      ]}\n      numberOfLines={1}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n    >\n      {label}\n    </AnimatedText>,\n  ];\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  outlinedLabel: {\n    position: 'absolute',\n    left: 8,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,UAAU,QAAQ,cAAc;AAEnD,OAAOC,YAAY,MAAM,+BAA+B;AAGxD,MAAMC,eAAe,GAAGC,IAAA,IAWI;EAAA,IAXH;IACvBC,OAAO;IACPC,gBAAgB;IAChBC,gBAAgB;IAChBC,mBAAmB;IACnBC,WAAW;IACXC,KAAK;IACLC,eAAe;IACfC,SAAS;IACTC,UAAU;IACVC;EACoB,CAAC,GAAAV,IAAA;EACrB,MAAMW,OAAO,GAAGV,OAAO,CAACW,WAAW,CAAC;IAClCC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;EACpB,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAG;IACxBC,UAAU,EAAEf,OAAO,CAACW,WAAW,CAAC;MAC9BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,CAACV,mBAAmB,EAAE,CAAC;IACvC,CAAC;EACH,CAAC;EAED,MAAMa,eAAe,GAAG;IACtBC,MAAM,EAAEjB,OAAO,CAACW,WAAW,CAAC;MAC1BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;IACtB,CAAC;EACH,CAAC;EAED,MAAMK,kBAAkB,GAAG,CAAC,GAAGV,UAAU,CAACW,SAAS,EAAEH,eAAe,CAAC;EAErE,MAAMI,SAAS,GAAGb,SAAS,GAAG,CAAC;EAC/B,MAAMc,gBAAgB,GAAGD,SAAS,gBAChC1B,KAAA,CAAA4B,aAAA,CAAC3B,QAAQ,CAAC4B,IAAI;IACZC,GAAG,EAAC,sBAAsB;IAC1BC,aAAa,EAAC,MAAM;IACpBC,KAAK,EAAE,CACL9B,UAAU,CAAC+B,YAAY,EACvBC,MAAM,CAACC,IAAI,EACX;MACEvB,eAAe;MACfwB,SAAS,EAAEC,IAAI,CAACC,GAAG,CAACzB,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;MACrC0B,MAAM,EAAEF,IAAI,CAACC,GAAG,CAACzB,SAAS,EAAE,CAAC,CAAC;MAC9BY,SAAS,EAAE,CAACL,iBAAiB,CAAC;MAC9BJ;IACF,CAAC;EACD,EACF,GACA,IAAI;EAER,OAAO,CACLW,gBAAgB,eAChB3B,KAAA,CAAA4B,aAAA,CAACzB,YAAY;IACX2B,GAAG,EAAC,sBAAsB;IAC1BE,KAAK,EAAE,CACLxB,gBAAgB,EAChBM,UAAU,EACVoB,MAAM,CAACM,aAAa,EACpB;MACEC,GAAG,EAAE/B,WAAW,GAAG,CAAC;MACpBgC,KAAK,EAAEnC,gBAAgB,GAAGC,gBAAgB,CAACmC,iBAAiB;MAC5D/B,eAAe;MACfI,OAAO;MACPS,SAAS,EAAED;IACb,CAAC,CACD;IACFoB,aAAa,EAAE,CAAE;IACjB7B,qBAAqB,EAAEA;EAAsB,GAE5CJ,KAAK,CACO,CAChB;AACH,CAAC;AAED,eAAeP,eAAe;AAE9B,MAAM8B,MAAM,GAAGhC,UAAU,CAAC2C,MAAM,CAAC;EAC/BV,IAAI,EAAE;IACJW,QAAQ,EAAE,UAAU;IACpBL,GAAG,EAAE,CAAC;IACNM,IAAI,EAAE,EAAE;IACRL,KAAK,EAAE;EACT,CAAC;EACD;EACAF,aAAa,EAAE;IACbM,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,CAAC;IACPJ,iBAAiB,EAAE,CAAC;IACpBK,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}