{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\Insertar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { styled } from \"@mui/system\";\nimport { Button, Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledForm = styled('form')({\n  background: 'rgba(255, 255, 255, 1)',\n  padding: '100px',\n  // Ajusta el padding según tus necesidades\n  borderRadius: '10px',\n  boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n  opacity: 0.8,\n  width: '400px',\n  // Ancho deseado\n  margin: '0 auto',\n  // Esto centrará el formulario horizontalmente\n  display: 'flex',\n  flexDirection: 'column',\n  // Para que los elementos estén en una disposición vertical\n  gap: '10px' // Espacio vertical entre elementos\n});\n_c = StyledForm;\nexport default function TaxonomicList() {\n  _s();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [setTaxonomic] = useState([]);\n\n  // Reino\n  const [reino, setReino] = useState([]);\n  const [selectedReino, setSelectedReino] = useState('');\n\n  // Filo\n  const [filos, setFilos] = useState([]);\n  const [selectedFilos, setSelectedFilos] = useState('');\n\n  // Clase\n  const [clases, setClases] = useState([]);\n  const [selectedClase, setSelectedClase] = useState('');\n\n  // Orden\n  const [ordenes, setOrdenes] = useState([]);\n  const [selectedOrden, setSelectedOrden] = useState('');\n\n  // Familia\n  const [familias, setFamilias] = useState([]);\n  const [selectedFamilia, setSelectedFamilia] = useState('');\n\n  // Genero\n  const [generos, setGeneros] = useState([]);\n  const [selectedGenero, setSelectedGenero] = useState('');\n\n  // Especie\n  const [especies, setEspecies] = useState([]);\n  const [selectedEspecie, setSelectedEspecie] = useState('');\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  useEffect(() => {\n    fetch('http://localhost:4000/taxonReino').then(response => response.json()).then(data => setReino(data)).catch(error => console.error('Error:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedReino !== '') {\n      fetch(`http://localhost:4000/taxonFiloByReino/${selectedReino}`).then(response => response.json()).then(data => setFilos(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedReino]);\n  useEffect(() => {\n    if (selectedFilos !== '') {\n      fetch(`http://localhost:4000/taxonClaseByFilo/${selectedFilos}`).then(response => response.json()).then(data => setClases(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedFilos]);\n  useEffect(() => {\n    if (selectedClase !== '') {\n      fetch(`http://localhost:4000/taxonOrdenByClase/${selectedClase}`).then(response => response.json()).then(data => setOrdenes(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedClase]);\n  useEffect(() => {\n    if (selectedOrden !== '') {\n      fetch(`http://localhost:4000/taxonFamiliaByOrden/${selectedOrden}`).then(response => response.json()).then(data => setFamilias(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedOrden]);\n  useEffect(() => {\n    if (selectedFamilia !== '') {\n      fetch(`http://localhost:4000/taxonGeneroByFamilia/${selectedFamilia}`).then(response => response.json()).then(data => setGeneros(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedFamilia]);\n  useEffect(() => {\n    if (selectedGenero !== '') {\n      fetch(`http://localhost:4000/taxonEspecieByGenero/${selectedGenero}`).then(response => response.json()).then(data => setEspecies(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedGenero]);\n  const handleReinoChange = event => {\n    setSelectedReino(event.target.value);\n    setFilos([]);\n    setSelectedFilos('');\n    setClases([]);\n    setSelectedClase('');\n    setOrdenes([]);\n    setSelectedOrden('');\n    setFamilias([]);\n    setSelectedFamilia('');\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleFiloChange = event => {\n    setSelectedFilos(event.target.value);\n    setClases([]);\n    setSelectedClase('');\n    setOrdenes([]);\n    setSelectedOrden('');\n    setFamilias([]);\n    setSelectedFamilia('');\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleClaseChange = event => {\n    setSelectedClase(event.target.value);\n    setOrdenes([]);\n    setSelectedOrden('');\n    setFamilias([]);\n    setSelectedFamilia('');\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleOrdenChange = event => {\n    setSelectedOrden(event.target.value);\n    setFamilias([]);\n    setSelectedFamilia('');\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleFamiliaChange = event => {\n    setSelectedFamilia(event.target.value);\n    setGeneros([]);\n    setSelectedGenero('');\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleGeneroChange = event => {\n    setSelectedGenero(event.target.value);\n    setEspecies([]);\n    setSelectedEspecie('');\n  };\n  const handleEspecieChange = event => {\n    setSelectedEspecie(event.target.value);\n  };\n\n  // Variable para almacenar las opciones seleccionadas en una cadena\n  const [selectedOptions, setSelectedOptions] = useState('');\n\n  // ...\n\n  const handleSearch = () => {\n    // Concatenar las opciones seleccionadas en una cadena\n    const concatenatedOptions = [selectedReino, selectedFilos, selectedClase, selectedOrden, selectedFamilia, selectedGenero, selectedEspecie].filter(option => option !== '').join(', ');\n\n    // Actualizar la variable de estado con las opciones seleccionadas\n    setSelectedOptions(concatenatedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledForm, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h\",\n        color: \"#000080\",\n        gutterBottom: true,\n        component: \"div\",\n        children: \"Filtrar por provincias\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"reino-select-label\",\n            children: \"Reino\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"reino-select-label\",\n            value: selectedReino,\n            onChange: handleReinoChange,\n            children: reino.map((reino, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: reino.rei_nombre.trim(),\n              children: reino.rei_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"filo-select-label\",\n            children: \"Filo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"filo-select-label\",\n            value: selectedFilos,\n            onChange: handleFiloChange,\n            children: filos && filos.length > 0 ? filos.map((filo, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: filo.fil_nombre.trim(),\n              children: filo.fil_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay filos disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"clase-select-label\",\n            children: \"Clase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"clase-select-label\",\n            value: selectedClase,\n            onChange: handleClaseChange,\n            children: clases && clases.length > 0 ? clases.map((clase, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: clase.cla_nombre.trim(),\n              children: clase.cla_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay clases disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"orden-select-label\",\n            children: \"Orden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"orden-select-label\",\n            value: selectedOrden,\n            onChange: handleOrdenChange,\n            children: ordenes && ordenes.length > 0 ? ordenes.map((orden, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: orden.ord_nombre.trim(),\n              children: orden.ord_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay ordenes disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"familia-select-label\",\n            children: \"Familia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"familia-select-label\",\n            value: selectedFamilia,\n            onChange: handleFamiliaChange,\n            children: familias && familias.length > 0 ? familias.map((familia, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: familia.gen_nombre.trim(),\n              children: familia.gen_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay familias disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"genero-select-label\",\n            children: \"Genero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"genero-select-label\",\n            value: selectedGenero,\n            onChange: handleGeneroChange,\n            children: generos && generos.length > 0 ? generos.map((genero, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: genero.gen_nombre.trim(),\n              children: genero.gen_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay provincias disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"especie-select-label\",\n            children: \"Especie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"especie-select-label\",\n            value: selectedEspecie,\n            onChange: handleEspecieChange,\n            children: especies && especies.length > 0 ? especies.map((especie, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: especie.esp_nombre.trim(),\n              children: especie.esp_nombre.trim()\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"No hay especies disponibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSearch,\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      children: [\"Opciones seleccionadas: \", selectedOptions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TaxonomicList, \"a6J0XknPACXXwqCS4SnjN8LscfQ=\");\n_c2 = TaxonomicList;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"TaxonomicList\");","map":{"version":3,"names":["React","useEffect","useState","styled","Button","Typography","Box","FormControl","InputLabel","Select","MenuItem","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledForm","background","padding","borderRadius","boxShadow","opacity","width","margin","display","flexDirection","gap","_c","TaxonomicList","_s","openDialog","setOpenDialog","setTaxonomic","reino","setReino","selectedReino","setSelectedReino","filos","setFilos","selectedFilos","setSelectedFilos","clases","setClases","selectedClase","setSelectedClase","ordenes","setOrdenes","selectedOrden","setSelectedOrden","familias","setFamilias","selectedFamilia","setSelectedFamilia","generos","setGeneros","selectedGenero","setSelectedGenero","especies","setEspecies","selectedEspecie","setSelectedEspecie","handleCloseDialog","fetch","then","response","json","data","catch","error","console","handleReinoChange","event","target","value","handleFiloChange","handleClaseChange","handleOrdenChange","handleFamiliaChange","handleGeneroChange","handleEspecieChange","selectedOptions","setSelectedOptions","handleSearch","concatenatedOptions","filter","option","join","children","variant","color","gutterBottom","component","fileName","_jsxFileName","lineNumber","columnNumber","style","id","labelId","onChange","map","index","rei_nombre","trim","length","filo","fil_nombre","clase","cla_nombre","orden","ord_nombre","familia","gen_nombre","genero","especie","esp_nombre","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/Insertar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport { Button, Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst StyledForm = styled('form')({\r\n  background: 'rgba(255, 255, 255, 1)',\r\n  padding: '100px', // Ajusta el padding según tus necesidades\r\n  borderRadius: '10px',\r\n  boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\r\n  opacity: 0.8,\r\n  width: '400px', // Ancho deseado\r\n  margin: '0 auto', // Esto centrará el formulario horizontalmente\r\n  display: 'flex',\r\n  flexDirection: 'column', // Para que los elementos estén en una disposición vertical\r\n  gap: '10px', // Espacio vertical entre elementos\r\n});\r\n\r\nexport default function TaxonomicList() {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [setTaxonomic] = useState([]);\r\n\r\n  // Reino\r\n  const [reino, setReino] = useState([]);\r\n  const [selectedReino, setSelectedReino] = useState('');\r\n\r\n  // Filo\r\n  const [filos, setFilos] = useState([]);\r\n  const [selectedFilos, setSelectedFilos] = useState('');\r\n\r\n  // Clase\r\n  const [clases, setClases] = useState([]);\r\n  const [selectedClase, setSelectedClase] = useState('');\r\n\r\n  // Orden\r\n  const [ordenes, setOrdenes] = useState([]);\r\n  const [selectedOrden, setSelectedOrden] = useState('');\r\n\r\n  // Familia\r\n  const [familias, setFamilias] = useState([]);\r\n  const [selectedFamilia, setSelectedFamilia] = useState('');\r\n\r\n  // Genero\r\n  const [generos, setGeneros] = useState([]);\r\n  const [selectedGenero, setSelectedGenero] = useState('');\r\n\r\n  // Especie\r\n  const [especies, setEspecies] = useState([]);\r\n  const [selectedEspecie, setSelectedEspecie] = useState('');\r\n\r\n  \r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/taxonReino')\r\n      .then(response => response.json())\r\n      .then(data => setReino(data))\r\n      .catch(error => console.error('Error:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedReino !== '') {\r\n      fetch(`http://localhost:4000/taxonFiloByReino/${selectedReino}`)\r\n        .then(response => response.json())\r\n        .then(data => setFilos(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedReino]);\r\n\r\n  useEffect(() => {\r\n    if (selectedFilos !== '') {\r\n      fetch(`http://localhost:4000/taxonClaseByFilo/${selectedFilos}`)\r\n        .then(response => response.json())\r\n        .then(data => setClases(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedFilos]);\r\n\r\n  useEffect(() => {\r\n    if (selectedClase !== '') {\r\n      fetch(`http://localhost:4000/taxonOrdenByClase/${selectedClase}`)\r\n        .then(response => response.json())\r\n        .then(data => setOrdenes(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedClase]);\r\n\r\n  useEffect(() => {\r\n    if (selectedOrden !== '') {\r\n      fetch(`http://localhost:4000/taxonFamiliaByOrden/${selectedOrden}`)\r\n        .then(response => response.json())\r\n        .then(data => setFamilias(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedOrden]);\r\n\r\n  useEffect(() => {\r\n    if (selectedFamilia !== '') {\r\n      fetch(`http://localhost:4000/taxonGeneroByFamilia/${selectedFamilia}`)\r\n        .then(response => response.json())\r\n        .then(data => setGeneros(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedFamilia]);\r\n\r\n  useEffect(() => {\r\n    if (selectedGenero !== '') {\r\n      fetch(`http://localhost:4000/taxonEspecieByGenero/${selectedGenero}`)\r\n        .then(response => response.json())\r\n        .then(data => setEspecies(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }\r\n  }, [selectedGenero]);\r\n\r\n  \r\n\r\n  const handleReinoChange = (event) => {\r\n    setSelectedReino(event.target.value);\r\n    setFilos([]);\r\n    setSelectedFilos('');\r\n    setClases([]);\r\n    setSelectedClase('');\r\n    setOrdenes([]);\r\n    setSelectedOrden('');\r\n    setFamilias([]);\r\n    setSelectedFamilia('');\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleFiloChange = (event) => {\r\n    setSelectedFilos(event.target.value);\r\n    setClases([]);\r\n    setSelectedClase('');\r\n    setOrdenes([]);\r\n    setSelectedOrden('');\r\n    setFamilias([]);\r\n    setSelectedFamilia('');\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleClaseChange = (event) => {\r\n    setSelectedClase(event.target.value);\r\n    setOrdenes([]);\r\n    setSelectedOrden('');\r\n    setFamilias([]);\r\n    setSelectedFamilia('');\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleOrdenChange = (event) => {\r\n    setSelectedOrden(event.target.value);\r\n    setFamilias([]);\r\n    setSelectedFamilia('');\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleFamiliaChange = (event) => {\r\n    setSelectedFamilia(event.target.value);\r\n    setGeneros([]);\r\n    setSelectedGenero('');\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleGeneroChange = (event) => {\r\n    setSelectedGenero(event.target.value);\r\n    setEspecies([]);\r\n    setSelectedEspecie('');\r\n  };\r\n\r\n  const handleEspecieChange = (event) => {\r\n    setSelectedEspecie(event.target.value);\r\n  };\r\n\r\n  \r\n  // Variable para almacenar las opciones seleccionadas en una cadena\r\n  const [selectedOptions, setSelectedOptions] = useState('');\r\n\r\n  // ...\r\n\r\n  const handleSearch = () => {\r\n    // Concatenar las opciones seleccionadas en una cadena\r\n    const concatenatedOptions = [\r\n      selectedReino,\r\n      selectedFilos,\r\n      selectedClase,\r\n      selectedOrden,\r\n      selectedFamilia,\r\n      selectedGenero,\r\n      selectedEspecie,\r\n    ].filter(option => option !== '').join(', ');\r\n\r\n    // Actualizar la variable de estado con las opciones seleccionadas\r\n    setSelectedOptions(concatenatedOptions);\r\n\r\n    \r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <StyledForm>\r\n        <Typography variant=\"h\" color=\"#000080\" gutterBottom component=\"div\">\r\n          Filtrar por provincias\r\n        </Typography>\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n          {/* Reino */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"reino-select-label\">Reino</InputLabel>\r\n            <Select\r\n              labelId=\"reino-select-label\"\r\n              value={selectedReino}\r\n              onChange={handleReinoChange}\r\n            >\r\n              {reino.map((reino, index) => (\r\n                <MenuItem key={index} value={reino.rei_nombre.trim()}>\r\n                  {reino.rei_nombre.trim()}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Filo */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"filo-select-label\">Filo</InputLabel>\r\n            <Select\r\n              labelId=\"filo-select-label\"\r\n              value={selectedFilos}\r\n              onChange={handleFiloChange}\r\n            >\r\n              {filos && filos.length > 0 ? (\r\n                filos.map((filo, index) => (\r\n                  <MenuItem key={index} value={filo.fil_nombre.trim()}>\r\n                    {filo.fil_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay filos disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Clase */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"clase-select-label\">Clase</InputLabel>\r\n            <Select\r\n              labelId=\"clase-select-label\"\r\n              value={selectedClase}\r\n              onChange={handleClaseChange}\r\n            >\r\n              {clases && clases.length > 0 ? (\r\n                clases.map((clase, index) => (\r\n                  <MenuItem key={index} value={clase.cla_nombre.trim()}>\r\n                    {clase.cla_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay clases disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Orden */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"orden-select-label\">Orden</InputLabel>\r\n            <Select\r\n              labelId=\"orden-select-label\"\r\n              value={selectedOrden}\r\n              onChange={handleOrdenChange}\r\n            >\r\n              {ordenes && ordenes.length > 0 ? (\r\n                ordenes.map((orden, index) => (\r\n                  <MenuItem key={index} value={orden.ord_nombre.trim()}>\r\n                    {orden.ord_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay ordenes disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Familia */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"familia-select-label\">Familia</InputLabel>\r\n            <Select\r\n              labelId=\"familia-select-label\"\r\n              value={selectedFamilia}\r\n              onChange={handleFamiliaChange}\r\n            >\r\n              {familias && familias.length > 0 ? (\r\n                familias.map((familia, index) => (\r\n                  <MenuItem key={index} value={familia.gen_nombre.trim()}>\r\n                    {familia.gen_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay familias disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Genero */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"genero-select-label\">Genero</InputLabel>\r\n            <Select\r\n              labelId=\"genero-select-label\"\r\n              value={selectedGenero}\r\n              onChange={handleGeneroChange}\r\n            >\r\n              {generos && generos.length > 0 ? (\r\n                generos.map((genero, index) => (\r\n                  <MenuItem key={index} value={genero.gen_nombre.trim()}>\r\n                    {genero.gen_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay provincias disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Especie */}\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel id=\"especie-select-label\">Especie</InputLabel>\r\n            <Select\r\n              labelId=\"especie-select-label\"\r\n              value={selectedEspecie}\r\n              onChange={handleEspecieChange}\r\n            >\r\n              {especies && especies.length > 0 ? (\r\n                especies.map((especie, index) => (\r\n                  <MenuItem key={index} value={especie.esp_nombre.trim()}>\r\n                    {especie.esp_nombre.trim()}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value=\"\">No hay especies disponibles</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\r\n          Buscar\r\n        </Button>\r\n      </StyledForm>\r\n\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        Opciones seleccionadas: {selectedOptions}\r\n      </Typography>\r\n\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}