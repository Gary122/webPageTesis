{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\Inicio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Autocomplete } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTreeItem = styled(TreeItem)(_ref => {\n  let {\n    rootNode,\n    hasData\n  } = _ref;\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\"\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\"\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\"\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\"\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\"\n    }\n  };\n});\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"600px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n\nexport default function FileSystemNavigator() {\n  _s();\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchTextCountry, setSearchTextCountry] = useState(\"\");\n  const [showContent, setShowContent] = useState(false);\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n  const [noticias, setNoticias] = useState([]);\n  const [countryOptions, setCountryOptions] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [noInvestigacionesMessage, setNoInvestigacionesMessage] = useState(\"\");\n  const [speciesOptions, setSpeciesOptions] = useState([]);\n  const colorNivel = \"#00000073\";\n  const colorItem = \"#1890FF\";\n  const tamanoNivel = \"14px\";\n  const tamanoItem = \"12px\";\n  const tipoLetra = \"Helvetica Neue\";\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n    fetchCountries();\n  }, []);\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Asignar el nivel \"Reino\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const reino of reinosData) {\n        coloresNiveles[reino.rei_id] = colorNivel; // Color gris para el nivel \"Reino\"\n        coloresItems[reino.rei_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada reino\n      const elementCounts = {};\n      for (const reino of reinosData) {\n        const response = await axios.get(`http://localhost:4000/filos/${reino.rei_id}`);\n        const filosData = response.data;\n        elementCounts[reino.rei_id] = filosData.length;\n      }\n      setReinos(reinosData);\n      setReinoElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n  const fetchFilos = async reinoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n      // Asignar el nivel \"Filo\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const filo of filosData) {\n        coloresNiveles[filo.fil_id] = colorNivel;\n        coloresItems[filo.fil_id] = colorItem;\n      }\n\n      // Obtener el número de elementos de cada filo\n      const elementCounts = {};\n      for (const filo of filosData) {\n        const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n        const clasesData = response.data;\n        elementCounts[filo.fil_id] = clasesData.length;\n      }\n      setFilos(filosData);\n      setFiloElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n  const fetchClases = async filoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      const clasesData = response.data;\n\n      // Asignar el nivel \"Clase\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const clase of clasesData) {\n        coloresNiveles[clase.cla_id] = colorNivel; // Color gris para el nivel \"Clase\"\n        coloresItems[clase.cla_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada clase\n      const elementCounts = {};\n      for (const clase of clasesData) {\n        const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n        const ordenesData = response.data;\n        elementCounts[clase.cla_id] = ordenesData.length;\n      }\n      setClases(clasesData);\n      setClaseElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n  const fetchOrdenes = async claseId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      const ordenesData = response.data;\n\n      // Asignar el nivel \"Orden\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const orden of ordenesData) {\n        coloresNiveles[orden.ord_id] = colorNivel; // Color gris para el nivel \"Orden\"\n        coloresItems[orden.ord_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada orden\n      const elementCounts = {};\n      for (const orden of ordenesData) {\n        const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n        const familiasData = response.data;\n        elementCounts[orden.ord_id] = familiasData.length;\n      }\n      setOrdenes(ordenesData);\n      setOrdenElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n  const fetchFamilias = async ordenId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      const familiasData = response.data;\n\n      // Asignar el nivel \"Familia\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const familia of familiasData) {\n        coloresNiveles[familia.fam_id] = colorNivel; // Color gris para el nivel \"Familia\"\n        coloresItems[familia.fam_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada familia\n      const elementCounts = {};\n      for (const familia of familiasData) {\n        const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n        const generosData = response.data;\n        elementCounts[familia.fam_id] = generosData.length;\n      }\n      setFamilias(familiasData);\n      setFamiliaElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n  const fetchGeneros = async familiaId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      const generosData = response.data;\n\n      // Asignar el nivel \"Género\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const genero of generosData) {\n        coloresNiveles[genero.gen_id] = colorNivel; // Color gris para el nivel \"Género\"\n        coloresItems[genero.gen_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada género\n      const elementCounts = {};\n      for (const genero of generosData) {\n        const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n        const especiesData = response.data;\n        elementCounts[genero.gen_id] = especiesData.length;\n      }\n      setGeneros(generosData);\n      setGeneroElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n  const fetchEspecies = async generoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      const especiesData = response.data;\n\n      // Asignar el nivel \"Especie\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const especie of especiesData) {\n        coloresNiveles[especie.esp_id] = colorNivel; // Color gris para el nivel \"Especie\"\n        coloresItems[especie.esp_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      setEspecies(especiesData);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n  const fetchCountries = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/countries\");\n      const countriesData = response.data;\n      setCountryOptions(countriesData);\n    } catch (error) {\n      console.error(\"Error fetching countries data: \", error);\n    }\n  };\n  const handleSearchTextChange = event => {\n    setSearchText(event.target.value);\n  };\n  const handleSearchTextCountryChange = event => {\n    setSearchTextCountry(event.target.value);\n  };\n  const handleCountrySelectionChange = (event, value) => {\n    setSelectedCountry(value);\n  };\n  const handleSearch = async () => {\n    try {\n      if (!selectedCountry) {\n        setNoInvestigacionesMessage(\"Please select a country.\");\n        setNoticias([]);\n        return;\n      }\n      const response = await axios.get(`http://localhost:4000/noticias?country=${selectedCountry.countryCode}&q=${searchTextCountry}`);\n      const noticiasData = response.data;\n      setNoticias(noticiasData);\n      setNoInvestigacionesMessage(noticiasData.length === 0 ? \"No investigations found.\" : \"\");\n    } catch (error) {\n      console.error(\"Error searching noticias: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Taxonom\\xEDa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: \"16px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Search:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchText,\n            onChange: handleSearchTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Search by country:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n            options: countryOptions,\n            getOptionLabel: option => option.name,\n            onChange: handleCountrySelectionChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              variant: \"outlined\",\n              value: searchTextCountry,\n              onChange: handleSearchTextCountryChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"16px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Investigations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: noInvestigacionesMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: noticias.map(noticia => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: noticia.title\n          }, noticia.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reinos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reinos.map(reino => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorNiveles[reino.rei_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: reino.rei_nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[reino.rei_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [\" (\", reinoElementCounts[reino.rei_id], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchFilos(reino.rei_id),\n          children: \"Expandir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this)]\n      }, reino.rei_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Filos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filos.map(filo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorNiveles[filo.fil_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: filo.fil_nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[filo.fil_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [\" (\", filoElementCounts[filo.fil_id], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchClases(filo.fil_id),\n          children: \"Expandir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, filo.fil_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Clases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clases.map(clase => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorNiveles[clase.cla_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: clase.cla_nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[clase.cla_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [\" (\", claseElementCounts[clase.cla_id], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchOrdenes(clase.cla_id),\n          children: \"Expandir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this)]\n      }, clase.cla_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\xD3rdenes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ordenes.map(orden => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorNiveles[orden.ord_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: orden.ord_nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[orden.ord_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [\" (\", ordenElementCounts[orden.ord_id], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchFamilias(orden.ord_id),\n          children: \"Expandir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this)]\n      }, orden.ord_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Familias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: familias.map(familia => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorNiveles[familia.fam_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: familia.fam_nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[familia.fam_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [\" (\", familiaElementCounts[familia.fam_id], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchGeneros(familia.fam_id),\n          children: \"Expandir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this)]\n      }, familia.fam_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"G\\xE9neros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: generos.map(genero => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorNiveles[genero.gen_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: genero.gen_nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[genero.gen_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [\" (\", generoElementCounts[genero.gen_id], \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchEspecies(genero.gen_id),\n          children: \"Expandir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this)]\n      }, genero.gen_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Especies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: especies.map(especie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorNiveles[especie.esp_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: especie.esp_nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[especie.esp_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [\" (\", especie.esp_id, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this)]\n      }, especie.esp_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n}\n_s(FileSystemNavigator, \"8+C1nnpSmR8Fx8YRfBElxVgfVAc=\");\n_c = FileSystemNavigator;\nvar _c;\n$RefreshReg$(_c, \"FileSystemNavigator\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","styled","ExpandMoreIcon","ChevronRightIcon","TreeItem","treeItemClasses","Grid","Typography","Box","TextField","IconButton","SearchIcon","axios","Link","Autocomplete","jsxDEV","_jsxDEV","StyledTreeItem","_ref","rootNode","hasData","borderColor","nivelColor","itemColor","position","pointerEvents","content","width","left","top","borderBottom","group","marginLeft","paddingLeft","borderLeft","color","fontWeight","fontSize","whiteSpace","cursor","userSelect","display","StyledBox","margin","textAlign","fontFamily","maxWidth","FileSystemNavigator","_s","searchText","setSearchText","searchTextCountry","setSearchTextCountry","showContent","setShowContent","colorNiveles","setColorNiveles","colorItems","setColorItems","reinos","setReinos","filos","setFilos","clases","setClases","ordenes","setOrdenes","familias","setFamilias","generos","setGeneros","especies","setEspecies","reinoElementCounts","setReinoElementCounts","filoElementCounts","setFiloElementCounts","claseElementCounts","setClaseElementCounts","ordenElementCounts","setOrdenElementCounts","familiaElementCounts","setFamiliaElementCounts","generoElementCounts","setGeneroElementCounts","noticias","setNoticias","countryOptions","setCountryOptions","selectedCountry","setSelectedCountry","noInvestigacionesMessage","setNoInvestigacionesMessage","speciesOptions","setSpeciesOptions","colorNivel","colorItem","tamanoNivel","tamanoItem","tipoLetra","fetchReinos","fetchCountries","response","get","reinosData","data","coloresNiveles","coloresItems","reino","rei_id","elementCounts","filosData","length","error","console","fetchFilos","reinoId","filo","fil_id","clasesData","fetchClases","filoId","clase","cla_id","ordenesData","fetchOrdenes","claseId","orden","ord_id","familiasData","fetchFamilias","ordenId","familia","fam_id","generosData","fetchGeneros","familiaId","genero","gen_id","especiesData","fetchEspecies","generoId","especie","esp_id","countriesData","handleSearchTextChange","event","target","value","handleSearchTextCountryChange","handleCountrySelectionChange","handleSearch","countryCode","noticiasData","children","fileName","_jsxFileName","lineNumber","columnNumber","style","alignItems","marginRight","type","onChange","options","getOptionLabel","option","name","renderInput","params","variant","Button","onClick","marginTop","map","noticia","title","id","rei_nombre","fil_nombre","cla_nombre","ord_nombre","fam_nombre","gen_nombre","esp_nombre","_c","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/Inicio.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Autocomplete } from '@mui/lab';\n\nconst StyledTreeItem = styled(TreeItem)(({ rootNode, hasData }) => {\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\",\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`,\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\",\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor,\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\",\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\",\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\",\n    },\n  };\n});\n\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"600px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n\nexport default function FileSystemNavigator() {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchTextCountry, setSearchTextCountry] = useState(\"\");\n\n  const [showContent, setShowContent] = useState(false);\n\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n\n  const [noticias, setNoticias] = useState([]);\n\n  const [countryOptions, setCountryOptions] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [noInvestigacionesMessage, setNoInvestigacionesMessage] = useState(\"\");\n  const [speciesOptions, setSpeciesOptions] = useState([]);\n\n  const colorNivel = \"#00000073\";\n  const colorItem = \"#1890FF\";\n  const tamanoNivel = \"14px\";\n  const tamanoItem = \"12px\";\n  const tipoLetra = \"Helvetica Neue\";\n\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n    fetchCountries();\n  }, []);\n\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Asignar el nivel \"Reino\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const reino of reinosData) {\n        coloresNiveles[reino.rei_id] = colorNivel; // Color gris para el nivel \"Reino\"\n        coloresItems[reino.rei_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada reino\n      const elementCounts = {};\n\n      for (const reino of reinosData) {\n        const response = await axios.get(`http://localhost:4000/filos/${reino.rei_id}`);\n        const filosData = response.data;\n        elementCounts[reino.rei_id] = filosData.length;\n      }\n\n      setReinos(reinosData);\n      setReinoElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n\n  const fetchFilos = async (reinoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n      // Asignar el nivel \"Filo\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const filo of filosData) {\n        coloresNiveles[filo.fil_id] = colorNivel;\n        coloresItems[filo.fil_id] = colorItem;\n      }\n\n      // Obtener el número de elementos de cada filo\n      const elementCounts = {};\n\n      for (const filo of filosData) {\n        const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n        const clasesData = response.data;\n        elementCounts[filo.fil_id] = clasesData.length;\n      }\n\n      setFilos(filosData);\n      setFiloElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n\n  const fetchClases = async (filoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      const clasesData = response.data;\n\n      // Asignar el nivel \"Clase\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const clase of clasesData) {\n        coloresNiveles[clase.cla_id] = colorNivel; // Color gris para el nivel \"Clase\"\n        coloresItems[clase.cla_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada clase\n      const elementCounts = {};\n\n      for (const clase of clasesData) {\n        const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n        const ordenesData = response.data;\n        elementCounts[clase.cla_id] = ordenesData.length;\n      }\n\n      setClases(clasesData);\n      setClaseElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n\n  const fetchOrdenes = async (claseId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      const ordenesData = response.data;\n\n      // Asignar el nivel \"Orden\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const orden of ordenesData) {\n        coloresNiveles[orden.ord_id] = colorNivel; // Color gris para el nivel \"Orden\"\n        coloresItems[orden.ord_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada orden\n      const elementCounts = {};\n\n      for (const orden of ordenesData) {\n        const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n        const familiasData = response.data;\n        elementCounts[orden.ord_id] = familiasData.length;\n      }\n\n      setOrdenes(ordenesData);\n      setOrdenElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n\n  const fetchFamilias = async (ordenId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      const familiasData = response.data;\n\n      // Asignar el nivel \"Familia\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const familia of familiasData) {\n        coloresNiveles[familia.fam_id] = colorNivel; // Color gris para el nivel \"Familia\"\n        coloresItems[familia.fam_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada familia\n      const elementCounts = {};\n\n      for (const familia of familiasData) {\n        const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n        const generosData = response.data;\n        elementCounts[familia.fam_id] = generosData.length;\n      }\n\n      setFamilias(familiasData);\n      setFamiliaElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n\n  const fetchGeneros = async (familiaId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      const generosData = response.data;\n\n      // Asignar el nivel \"Género\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const genero of generosData) {\n        coloresNiveles[genero.gen_id] = colorNivel; // Color gris para el nivel \"Género\"\n        coloresItems[genero.gen_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada género\n      const elementCounts = {};\n\n      for (const genero of generosData) {\n        const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n        const especiesData = response.data;\n        elementCounts[genero.gen_id] = especiesData.length;\n      }\n\n      setGeneros(generosData);\n      setGeneroElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n\n  const fetchEspecies = async (generoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      const especiesData = response.data;\n\n      // Asignar el nivel \"Especie\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const especie of especiesData) {\n        coloresNiveles[especie.esp_id] = colorNivel; // Color gris para el nivel \"Especie\"\n        coloresItems[especie.esp_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      setEspecies(especiesData);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n\n  const fetchCountries = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/countries\");\n      const countriesData = response.data;\n\n      setCountryOptions(countriesData);\n    } catch (error) {\n      console.error(\"Error fetching countries data: \", error);\n    }\n  };\n\n  const handleSearchTextChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const handleSearchTextCountryChange = (event) => {\n    setSearchTextCountry(event.target.value);\n  };\n\n  const handleCountrySelectionChange = (event, value) => {\n    setSelectedCountry(value);\n  };\n\n  const handleSearch = async () => {\n    try {\n      if (!selectedCountry) {\n        setNoInvestigacionesMessage(\"Please select a country.\");\n        setNoticias([]);\n        return;\n      }\n\n      const response = await axios.get(\n        `http://localhost:4000/noticias?country=${selectedCountry.countryCode}&q=${searchTextCountry}`\n      );\n      const noticiasData = response.data;\n\n      setNoticias(noticiasData);\n      setNoInvestigacionesMessage(\n        noticiasData.length === 0 ? \"No investigations found.\" : \"\"\n      );\n    } catch (error) {\n      console.error(\"Error searching noticias: \", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Taxonomía</h2>\n      <div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <div style={{ marginRight: \"16px\" }}>\n            <h4>Search:</h4>\n            <input\n              type=\"text\"\n              value={searchText}\n              onChange={handleSearchTextChange}\n            />\n          </div>\n          <div>\n            <h4>Search by country:</h4>\n            <Autocomplete\n              options={countryOptions}\n              getOptionLabel={(option) => option.name}\n              onChange={handleCountrySelectionChange}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  value={searchTextCountry}\n                  onChange={handleSearchTextCountryChange}\n                />\n              )}\n            />\n          </div>\n          <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSearch}>\n              Search\n            </Button>\n          </div>\n        </div>\n        <div style={{ marginTop: \"16px\" }}>\n          <h4>Investigations:</h4>\n          <div>{noInvestigacionesMessage}</div>\n          <ul>\n            {noticias.map((noticia) => (\n              <li key={noticia.id}>{noticia.title}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <h3>Reinos</h3>\n      <ul>\n        {reinos.map((reino) => (\n          <li key={reino.rei_id}>\n            <span\n              style={{\n                color: colorNiveles[reino.rei_id],\n                fontSize: tamanoNivel,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {reino.rei_nombre}\n            </span>\n            <span\n              style={{\n                color: colorItems[reino.rei_id],\n                fontSize: tamanoItem,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {\" (\"}\n              {reinoElementCounts[reino.rei_id]}\n              {\")\"}\n            </span>\n            <button onClick={() => fetchFilos(reino.rei_id)}>Expandir</button>\n          </li>\n        ))}\n      </ul>\n      <h3>Filos</h3>\n      <ul>\n        {filos.map((filo) => (\n          <li key={filo.fil_id}>\n            <span\n              style={{\n                color: colorNiveles[filo.fil_id],\n                fontSize: tamanoNivel,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {filo.fil_nombre}\n            </span>\n            <span\n              style={{\n                color: colorItems[filo.fil_id],\n                fontSize: tamanoItem,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {\" (\"}\n              {filoElementCounts[filo.fil_id]}\n              {\")\"}\n            </span>\n            <button onClick={() => fetchClases(filo.fil_id)}>Expandir</button>\n          </li>\n        ))}\n      </ul>\n      <h3>Clases</h3>\n      <ul>\n        {clases.map((clase) => (\n          <li key={clase.cla_id}>\n            <span\n              style={{\n                color: colorNiveles[clase.cla_id],\n                fontSize: tamanoNivel,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {clase.cla_nombre}\n            </span>\n            <span\n              style={{\n                color: colorItems[clase.cla_id],\n                fontSize: tamanoItem,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {\" (\"}\n              {claseElementCounts[clase.cla_id]}\n              {\")\"}\n            </span>\n            <button onClick={() => fetchOrdenes(clase.cla_id)}>Expandir</button>\n          </li>\n        ))}\n      </ul>\n      <h3>Órdenes</h3>\n      <ul>\n        {ordenes.map((orden) => (\n          <li key={orden.ord_id}>\n            <span\n              style={{\n                color: colorNiveles[orden.ord_id],\n                fontSize: tamanoNivel,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {orden.ord_nombre}\n            </span>\n            <span\n              style={{\n                color: colorItems[orden.ord_id],\n                fontSize: tamanoItem,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {\" (\"}\n              {ordenElementCounts[orden.ord_id]}\n              {\")\"}\n            </span>\n            <button onClick={() => fetchFamilias(orden.ord_id)}>Expandir</button>\n          </li>\n        ))}\n      </ul>\n      <h3>Familias</h3>\n      <ul>\n        {familias.map((familia) => (\n          <li key={familia.fam_id}>\n            <span\n              style={{\n                color: colorNiveles[familia.fam_id],\n                fontSize: tamanoNivel,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {familia.fam_nombre}\n            </span>\n            <span\n              style={{\n                color: colorItems[familia.fam_id],\n                fontSize: tamanoItem,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {\" (\"}\n              {familiaElementCounts[familia.fam_id]}\n              {\")\"}\n            </span>\n            <button onClick={() => fetchGeneros(familia.fam_id)}>Expandir</button>\n          </li>\n        ))}\n      </ul>\n      <h3>Géneros</h3>\n      <ul>\n        {generos.map((genero) => (\n          <li key={genero.gen_id}>\n            <span\n              style={{\n                color: colorNiveles[genero.gen_id],\n                fontSize: tamanoNivel,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {genero.gen_nombre}\n            </span>\n            <span\n              style={{\n                color: colorItems[genero.gen_id],\n                fontSize: tamanoItem,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {\" (\"}\n              {generoElementCounts[genero.gen_id]}\n              {\")\"}\n            </span>\n            <button onClick={() => fetchEspecies(genero.gen_id)}>Expandir</button>\n          </li>\n        ))}\n      </ul>\n      <h3>Especies</h3>\n      <ul>\n        {especies.map((especie) => (\n          <li key={especie.esp_id}>\n            <span\n              style={{\n                color: colorNiveles[especie.esp_id],\n                fontSize: tamanoNivel,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {especie.esp_nombre}\n            </span>\n            <span\n              style={{\n                color: colorItems[especie.esp_id],\n                fontSize: tamanoItem,\n                fontFamily: tipoLetra,\n              }}\n            >\n              {\" (\"}\n              {especie.esp_id}\n              {\")\"}\n            </span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}