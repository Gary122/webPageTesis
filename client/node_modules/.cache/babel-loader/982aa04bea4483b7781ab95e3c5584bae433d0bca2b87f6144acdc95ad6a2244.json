{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\Inicio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTreeItem = styled(TreeItem)(_ref => {\n  let {\n    rootNode,\n    hasData\n  } = _ref;\n  const borderColor = \"gray\";\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -16,\n      top: 12,\n      borderBottom: !rootNode ? `1px dashed ${borderColor}` : \"none\"\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 18,\n      borderLeft: `1px dashed ${borderColor}`\n    },\n    \"& .MuiTreeItem-content\": {\n      color: hasData ? \"black\" : \"inherit\",\n      fontWeight: hasData ? \"bold\" : \"inherit\"\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: hasData ? \"black\" : \"inherit\"\n    }\n  };\n});\n_c = StyledTreeItem;\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"350px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n_c2 = StyledBox;\nexport default function FileSystemNavigator() {\n  _s();\n  const [searchText, setSearchText] = useState(\"\");\n  const handleSearchChange = event => {\n    setSearchText(event.target.value);\n  };\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Asignar el nivel \"Reino\" y su color correspondiente\n      const niveles = {};\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const reino of reinosData) {\n        niveles[reino.rei_id] = \"Reino\";\n        coloresNiveles[reino.rei_id] = \"#808080\"; // Color gris para el nivel \"Reino\"\n        coloresItems[reino.rei_id] = \"#00BFFF\"; // Color azul celeste para el nombre del elemento\n      }\n\n      setReinos(reinosData);\n      setNivelElementos(niveles);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n  const fetchFilos = async reinoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n      // Obtener el número de elementos de cada filo\n      const elementCounts = {};\n      for (const filo of filosData) {\n        const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n        const clasesData = response.data;\n        elementCounts[filo.fil_id] = clasesData.length;\n      }\n      setFilos(filosData);\n      setFiloElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n  const fetchClases = async filoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      const clasesData = response.data;\n\n      // Obtener el número de elementos de cada clase\n      const elementCounts = {};\n      for (const clase of clasesData) {\n        const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n        const ordenesData = response.data;\n        elementCounts[clase.cla_id] = ordenesData.length;\n      }\n      setClases(clasesData);\n      setClaseElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n  const fetchOrdenes = async claseId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      const ordenesData = response.data;\n\n      // Obtener el número de elementos de cada orden\n      const elementCounts = {};\n      for (const orden of ordenesData) {\n        const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n        const familiasData = response.data;\n        elementCounts[orden.ord_id] = familiasData.length;\n      }\n      setOrdenes(ordenesData);\n      setOrdenElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n  const fetchFamilias = async ordenId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      const familiasData = response.data;\n\n      // Obtener el número de elementos de cada familia\n      const elementCounts = {};\n      for (const familia of familiasData) {\n        const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n        const generosData = response.data;\n        elementCounts[familia.fam_id] = generosData.length;\n      }\n      setFamilias(familiasData);\n      setFamiliaElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n  const fetchGeneros = async familiaId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      const generosData = response.data;\n\n      // Obtener el número de elementos de cada género\n      const elementCounts = {};\n      for (const genero of generosData) {\n        const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n        const especiesData = response.data;\n        elementCounts[genero.gen_id] = especiesData.length;\n      }\n      setGeneros(generosData);\n      setGeneroElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n  const fetchEspecies = async generoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      setEspecies(response.data);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find(reino => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find(filo => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find(clase => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find(orden => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find(familia => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find(genero => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n  const renderReinos = () => {\n    return reinos.map(reino => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `reino-${reino.rei_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[reino.rei_id]\n          },\n          children: \"Reino:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[reino.rei_id]\n          },\n          children: reino.rei_nombre.trim()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleReinoClick(event, `reino-${reino.rei_id}`),\n      hasData: filos.some(filo => filo.rei_id === reino.rei_id),\n      children: renderFilos(reino.rei_id)\n    }, reino.rei_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Repite el mismo patrón para las otras funciones de renderizado\n\n  const renderFilos = reinoId => {\n    const filosOfReino = filos.filter(filo => filo.rei_id === reinoId);\n    return filosOfReino.map(filo => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `filo-${filo.fil_id}`,\n      label: `${filo.fil_nombre.trim()} (${filoElementCounts[filo.fil_id] || 0})`,\n      onClick: event => handleFiloClick(event, `filo-${filo.fil_id}`),\n      hasData: clases.some(clase => clase.fil_id === filo.fil_id),\n      children: renderClases(filo.fil_id)\n    }, filo.fil_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this));\n  };\n  const renderClases = filoId => {\n    const clasesOfFilo = clases.filter(clase => clase.fil_id === filoId);\n    return clasesOfFilo.map(clase => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `clase-${clase.cla_id}`,\n      label: `${clase.cla_nombre.trim()} (${claseElementCounts[clase.cla_id] || 0})`,\n      onClick: event => handleClaseClick(event, `clase-${clase.cla_id}`),\n      hasData: ordenes.some(orden => orden.cla_id === clase.cla_id),\n      children: renderOrdenes(clase.cla_id)\n    }, clase.cla_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this));\n  };\n  const renderOrdenes = claseId => {\n    const ordenesOfClase = ordenes.filter(orden => orden.cla_id === claseId);\n    return ordenesOfClase.map(orden => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `orden-${orden.ord_id}`,\n      label: `${orden.ord_nombre.trim()} (${ordenElementCounts[orden.ord_id] || 0})`,\n      onClick: event => handleOrdenClick(event, `orden-${orden.ord_id}`),\n      hasData: familias.some(familia => familia.ord_id === orden.ord_id),\n      children: renderFamilias(orden.ord_id)\n    }, orden.ord_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFamilias = ordenId => {\n    const familiasOfOrden = familias.filter(familia => familia.ord_id === ordenId);\n    return familiasOfOrden.map(familia => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `familia-${familia.fam_id}`,\n      label: `${familia.gen_nombre.trim()} (${familiaElementCounts[familia.fam_id] || 0})`,\n      onClick: event => handleFamiliaClick(event, `familia-${familia.fam_id}`),\n      hasData: generos.some(genero => genero.fam_id === familia.fam_id),\n      children: renderGeneros(familia.fam_id)\n    }, familia.fam_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this));\n  };\n  const renderGeneros = familiaId => {\n    const generosOfFamilia = generos.filter(genero => genero.fam_id === familiaId);\n    return generosOfFamilia.map(genero => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `genero-${genero.gen_id}`,\n      label: `${genero.gen_nombre.trim()} (${generoElementCounts[genero.gen_id] || 0})`,\n      onClick: event => handleGeneroClick(event, `genero-${genero.gen_id}`),\n      hasData: especies.some(especie => especie.gen_id === genero.gen_id),\n      children: renderEspecies(genero.gen_id)\n    }, genero.gen_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this));\n  };\n  const renderEspecies = generoId => {\n    const especiesOfGenero = especies.filter(especie => especie.gen_id === generoId);\n    return especiesOfGenero.map(especie => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `especie-${especie.esp_id}`,\n      label: especie.esp_nombre.trim()\n    }, especie.esp_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(StyledBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            fontFamily: \"Helvetica Neue\",\n            children: \"Nuestro sitio web es una plataforma dise\\xF1ada para facilitar la georreferenciaci\\xF3n de datos de especies. Con su interfaz f\\xE1cil de usar y su funcionalidad avanzada, permite a los investigadores, administradores y usuarios administrar y analizar de manera eficiente la informaci\\xF3n sobre especies.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(StyledBox, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"\\xC1rbol filogen\\xE9tico\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: searchText,\n                onChange: handleSearchChange,\n                placeholder: \"Buscar...\",\n                variant: \"outlined\",\n                size: \"small\",\n                fullWidth: true,\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TreeView, {\n              defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 38\n              }, this),\n              defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 36\n              }, this),\n              sx: {\n                height: 240,\n                flexGrow: 1\n              },\n              children: renderReinos()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n}\n_s(FileSystemNavigator, \"fscdz+sjwFnbiX+GBgCN/VlIPCQ=\");\n_c3 = FileSystemNavigator;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTreeItem\");\n$RefreshReg$(_c2, \"StyledBox\");\n$RefreshReg$(_c3, \"FileSystemNavigator\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","styled","ExpandMoreIcon","ChevronRightIcon","TreeItem","treeItemClasses","Grid","Typography","Box","TextField","IconButton","SearchIcon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledTreeItem","_ref","rootNode","hasData","borderColor","position","pointerEvents","content","width","left","top","borderBottom","group","marginLeft","paddingLeft","borderLeft","color","fontWeight","_c","StyledBox","fontSize","margin","textAlign","fontFamily","maxWidth","_c2","FileSystemNavigator","_s","searchText","setSearchText","handleSearchChange","event","target","value","colorNiveles","setColorNiveles","colorItems","setColorItems","reinos","setReinos","filos","setFilos","clases","setClases","ordenes","setOrdenes","familias","setFamilias","generos","setGeneros","especies","setEspecies","reinoElementCounts","setReinoElementCounts","filoElementCounts","setFiloElementCounts","claseElementCounts","setClaseElementCounts","ordenElementCounts","setOrdenElementCounts","familiaElementCounts","setFamiliaElementCounts","generoElementCounts","setGeneroElementCounts","fetchReinos","response","get","reinosData","data","niveles","coloresNiveles","coloresItems","reino","rei_id","setNivelElementos","error","console","fetchFilos","reinoId","filosData","elementCounts","filo","fil_id","clasesData","length","fetchClases","filoId","clase","cla_id","ordenesData","fetchOrdenes","claseId","orden","ord_id","familiasData","fetchFamilias","ordenId","familia","fam_id","generosData","fetchGeneros","familiaId","genero","gen_id","especiesData","fetchEspecies","generoId","handleReinoClick","nodeId","split","find","toString","handleFiloClick","handleClaseClick","handleOrdenClick","handleFamiliaClick","handleGeneroClick","renderReinos","map","label","children","component","style","fileName","_jsxFileName","lineNumber","columnNumber","rei_nombre","trim","onClick","some","renderFilos","filosOfReino","filter","fil_nombre","renderClases","clasesOfFilo","cla_nombre","renderOrdenes","ordenesOfClase","ord_nombre","renderFamilias","familiasOfOrden","gen_nombre","renderGeneros","generosOfFamilia","especie","renderEspecies","especiesOfGenero","esp_id","esp_nombre","container","spacing","item","xs","variant","onChange","placeholder","size","fullWidth","InputProps","endAdornment","defaultCollapseIcon","defaultExpandIcon","sx","height","flexGrow","_c3","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/Inicio.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\n\nconst StyledTreeItem = styled(TreeItem)(({ rootNode, hasData }) => {\n  const borderColor = \"gray\";\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -16,\n      top: 12,\n      borderBottom: !rootNode ? `1px dashed ${borderColor}` : \"none\",\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 18,\n      borderLeft: `1px dashed ${borderColor}`,\n    },\n    \"& .MuiTreeItem-content\": {\n      color: hasData ? \"black\" : \"inherit\",\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: hasData ? \"black\" : \"inherit\",\n    },\n  };\n});\n\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"350px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n\nexport default function FileSystemNavigator() {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleSearchChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n\n\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n\n\n\n\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Asignar el nivel \"Reino\" y su color correspondiente\n      const niveles = {};\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const reino of reinosData) {\n        niveles[reino.rei_id] = \"Reino\";\n        coloresNiveles[reino.rei_id] = \"#808080\"; // Color gris para el nivel \"Reino\"\n        coloresItems[reino.rei_id] = \"#00BFFF\"; // Color azul celeste para el nombre del elemento\n      }\n\n      setReinos(reinosData);\n      setNivelElementos(niveles);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n\n\n\n\n  const fetchFilos = async (reinoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n      // Obtener el número de elementos de cada filo\n      const elementCounts = {};\n\n      for (const filo of filosData) {\n        const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n        const clasesData = response.data;\n        elementCounts[filo.fil_id] = clasesData.length;\n      }\n\n      setFilos(filosData);\n      setFiloElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n\n\n  const fetchClases = async (filoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      const clasesData = response.data;\n\n      // Obtener el número de elementos de cada clase\n      const elementCounts = {};\n\n      for (const clase of clasesData) {\n        const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n        const ordenesData = response.data;\n        elementCounts[clase.cla_id] = ordenesData.length;\n      }\n\n      setClases(clasesData);\n      setClaseElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n\n\n  const fetchOrdenes = async (claseId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      const ordenesData = response.data;\n\n      // Obtener el número de elementos de cada orden\n      const elementCounts = {};\n\n      for (const orden of ordenesData) {\n        const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n        const familiasData = response.data;\n        elementCounts[orden.ord_id] = familiasData.length;\n      }\n\n      setOrdenes(ordenesData);\n      setOrdenElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n\n\n  const fetchFamilias = async (ordenId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      const familiasData = response.data;\n\n      // Obtener el número de elementos de cada familia\n      const elementCounts = {};\n\n      for (const familia of familiasData) {\n        const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n        const generosData = response.data;\n        elementCounts[familia.fam_id] = generosData.length;\n      }\n\n      setFamilias(familiasData);\n      setFamiliaElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n\n  const fetchGeneros = async (familiaId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      const generosData = response.data;\n\n      // Obtener el número de elementos de cada género\n      const elementCounts = {};\n\n      for (const genero of generosData) {\n        const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n        const especiesData = response.data;\n        elementCounts[genero.gen_id] = especiesData.length;\n      }\n\n      setGeneros(generosData);\n      setGeneroElementCounts(elementCounts);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n\n\n  const fetchEspecies = async (generoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      setEspecies(response.data);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find((reino) => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find((filo) => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find((clase) => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find((orden) => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find((familia) => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find((genero) => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n\n  const renderReinos = () => {\n    return reinos.map((reino) => (\n      <StyledTreeItem\n        key={reino.rei_id}\n        nodeId={`reino-${reino.rei_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[reino.rei_id] }}>\n              Reino:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[reino.rei_id] }}>{reino.rei_nombre.trim()}</span>\n          </>\n        }\n        onClick={(event) => handleReinoClick(event, `reino-${reino.rei_id}`)}\n        hasData={filos.some((filo) => filo.rei_id === reino.rei_id)}\n      >\n        {/* Renderizar los filos */}\n        {renderFilos(reino.rei_id)}\n      </StyledTreeItem>\n    ));\n  }\n\n  // Repite el mismo patrón para las otras funciones de renderizado\n\n\n\n  const renderFilos = (reinoId) => {\n    const filosOfReino = filos.filter((filo) => filo.rei_id === reinoId);\n\n    return filosOfReino.map((filo) => (\n      <StyledTreeItem\n        key={filo.fil_id}\n        nodeId={`filo-${filo.fil_id}`}\n        label={`${filo.fil_nombre.trim()} (${filoElementCounts[filo.fil_id] || 0})`}\n        onClick={(event) => handleFiloClick(event, `filo-${filo.fil_id}`)}\n        hasData={clases.some((clase) => clase.fil_id === filo.fil_id)}\n      >\n        {/* Renderizar las clases */}\n        {renderClases(filo.fil_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderClases = (filoId) => {\n    const clasesOfFilo = clases.filter((clase) => clase.fil_id === filoId);\n\n    return clasesOfFilo.map((clase) => (\n      <StyledTreeItem\n        key={clase.cla_id}\n        nodeId={`clase-${clase.cla_id}`}\n        label={`${clase.cla_nombre.trim()} (${claseElementCounts[clase.cla_id] || 0})`}\n        onClick={(event) => handleClaseClick(event, `clase-${clase.cla_id}`)}\n        hasData={ordenes.some((orden) => orden.cla_id === clase.cla_id)}\n      >\n        {/* Renderizar las órdenes */}\n        {renderOrdenes(clase.cla_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderOrdenes = (claseId) => {\n    const ordenesOfClase = ordenes.filter((orden) => orden.cla_id === claseId);\n\n    return ordenesOfClase.map((orden) => (\n      <StyledTreeItem\n        key={orden.ord_id}\n        nodeId={`orden-${orden.ord_id}`}\n        label={`${orden.ord_nombre.trim()} (${ordenElementCounts[orden.ord_id] || 0})`}\n        onClick={(event) => handleOrdenClick(event, `orden-${orden.ord_id}`)}\n        hasData={familias.some((familia) => familia.ord_id === orden.ord_id)}\n      >\n        {/* Renderizar las familias */}\n        {renderFamilias(orden.ord_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderFamilias = (ordenId) => {\n    const familiasOfOrden = familias.filter((familia) => familia.ord_id === ordenId);\n\n    return familiasOfOrden.map((familia) => (\n      <StyledTreeItem\n        key={familia.fam_id}\n        nodeId={`familia-${familia.fam_id}`}\n        label={`${familia.gen_nombre.trim()} (${familiaElementCounts[familia.fam_id] || 0})`}\n        onClick={(event) => handleFamiliaClick(event, `familia-${familia.fam_id}`)}\n        hasData={generos.some((genero) => genero.fam_id === familia.fam_id)}\n      >\n        {/* Renderizar los géneros */}\n        {renderGeneros(familia.fam_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderGeneros = (familiaId) => {\n    const generosOfFamilia = generos.filter((genero) => genero.fam_id === familiaId);\n\n    return generosOfFamilia.map((genero) => (\n      <StyledTreeItem\n        key={genero.gen_id}\n        nodeId={`genero-${genero.gen_id}`}\n        label={`${genero.gen_nombre.trim()} (${generoElementCounts[genero.gen_id] || 0})`}\n        onClick={(event) => handleGeneroClick(event, `genero-${genero.gen_id}`)}\n        hasData={especies.some((especie) => especie.gen_id === genero.gen_id)}\n      >\n        {/* Renderizar las especies */}\n        {renderEspecies(genero.gen_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderEspecies = (generoId) => {\n    const especiesOfGenero = especies.filter((especie) => especie.gen_id === generoId);\n\n    return especiesOfGenero.map((especie) => (\n      <StyledTreeItem\n        key={especie.esp_id}\n        nodeId={`especie-${especie.esp_id}`}\n        label={especie.esp_nombre.trim()}\n      />\n    ));\n  };\n\n\n\n  return (\n    <Box >\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          {/* Descripción */}\n          <StyledBox>\n            <Typography variant=\"h5\">Descripción</Typography>\n            <Typography variant=\"body1\" fontFamily=\"Helvetica Neue\">\n              Nuestro sitio web es una plataforma diseñada para facilitar la\n              georreferenciación de datos de especies. Con su interfaz fácil de usar\n              y su funcionalidad avanzada, permite a los investigadores,\n              administradores y usuarios administrar y analizar de manera eficiente\n              la información sobre especies.\n            </Typography>\n          </StyledBox>\n        </Grid>\n        <Grid item xs={12}>\n          {/* Contenedor del Árbol y Trabajo académico */}\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <StyledBox>\n                <Typography variant=\"h6\">Árbol filogenético</Typography>\n                <TextField\n                  value={searchText}\n                  onChange={handleSearchChange}\n                  placeholder=\"Buscar...\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  InputProps={{\n                    endAdornment: (\n                      <IconButton>\n                        <SearchIcon />\n                      </IconButton>\n                    )\n                  }}\n                />\n              </StyledBox>\n              {/* Árbol filogenético */}\n              <TreeView\n                defaultCollapseIcon={<ExpandMoreIcon />}\n                defaultExpandIcon={<ChevronRightIcon />}\n                sx={{ height: 240, flexGrow: 1 }}\n              >\n                {/* Renderizar los reinos */}\n                {renderReinos()}\n              </TreeView>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}