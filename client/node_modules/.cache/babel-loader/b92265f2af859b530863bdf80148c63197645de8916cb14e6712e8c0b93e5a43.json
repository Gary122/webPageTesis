{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\Inicio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton, Button } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTreeItem = styled(TreeItem)(_ref => {\n  let {\n    rootNode,\n    hasData\n  } = _ref;\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\"\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\"\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\"\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\"\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\"\n    }\n  };\n});\n_c = StyledTreeItem;\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"350px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n_c2 = StyledBox;\nexport default function FileSystemNavigator() {\n  _s();\n  const [searchText, setSearchText] = useState(\"\");\n  const [showContent, setShowContent] = useState(false);\n  const handleButtonClick = () => {\n    setShowContent(!showContent);\n  };\n  const handleSearchChange = event => {\n    setSearchText(event.target.value);\n  };\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n  const colorNivel = \"#00000073\";\n  const colorItem = \"#1890FF\";\n  const tamanoNivel = \"14px\";\n  const tamanoItem = \"12px\";\n  const tipoLetra = \"Helvetica Neue\";\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find(reino => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find(filo => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find(clase => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find(orden => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find(familia => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find(genero => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n  const renderReinos = () => {\n    return reinos.map(reino => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `reino-${reino.rei_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[reino.rei_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Reino:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[reino.rei_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [reino.rei_nombre.trim(), \" (\", reinoElementCounts[reino.rei_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleReinoClick(event, `reino-${reino.rei_id}`),\n      hasData: filos.some(filo => filo.rei_id === reino.rei_id),\n      children: renderFilos(reino.rei_id)\n    }, reino.rei_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFilos = reinoId => {\n    const filosOfReino = filos.filter(filo => filo.rei_id === reinoId);\n    return filosOfReino.map(filo => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `filo-${filo.fil_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[filo.fil_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Filo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[filo.fil_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [filo.fil_nombre.trim(), \" (\", filoElementCounts[filo.fil_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleFiloClick(event, `filo-${filo.fil_id}`),\n      hasData: clases.some(clase => clase.fil_id === filo.fil_id),\n      children: renderClases(filo.fil_id)\n    }, filo.fil_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this));\n  };\n  const renderClases = filoId => {\n    const clasesOfFilo = clases.filter(clase => clase.fil_id === filoId);\n    return clasesOfFilo.map(clase => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `clase-${clase.cla_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[clase.cla_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Clase:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[clase.cla_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [clase.cla_nombre.trim(), \" (\", claseElementCounts[clase.cla_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleClaseClick(event, `clase-${clase.cla_id}`),\n      hasData: ordenes.some(orden => orden.cla_id === clase.cla_id),\n      children: renderOrdenes(clase.cla_id)\n    }, clase.cla_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this));\n  };\n  const renderOrdenes = claseId => {\n    const ordenesOfClase = ordenes.filter(orden => orden.cla_id === claseId);\n    return ordenesOfClase.map(orden => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `orden-${orden.ord_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[orden.ord_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Orden:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[orden.ord_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [orden.ord_nombre.trim(), \" (\", ordenElementCounts[orden.ord_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleOrdenClick(event, `orden-${orden.ord_id}`),\n      hasData: familias.some(familia => familia.ord_id === orden.ord_id),\n      children: renderFamilias(orden.ord_id)\n    }, orden.ord_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFamilias = ordenId => {\n    const familiasOfOrden = familias.filter(familia => familia.ord_id === ordenId);\n    return familiasOfOrden.map(familia => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `familia-${familia.fam_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[familia.fam_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Familia:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[familia.fam_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [familia.gen_nombre.trim(), \"  (\", familiaElementCounts[familia.fam_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleFamiliaClick(event, `familia-${familia.fam_id}`),\n      hasData: generos.some(genero => genero.fam_id === familia.fam_id),\n      children: renderGeneros(familia.fam_id)\n    }, familia.fam_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this));\n  };\n  const renderGeneros = familiaId => {\n    const generosOfFamilia = generos.filter(genero => genero.fam_id === familiaId);\n    return generosOfFamilia.map(genero => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `genero-${genero.gen_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[genero.gen_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"G\\xE9nero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[genero.gen_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [genero.gen_nombre.trim(), \" (\", generoElementCounts[genero.gen_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleGeneroClick(event, `genero-${genero.gen_id}`),\n      hasData: especies.some(especie => especie.gen_id === genero.gen_id),\n      children: renderEspecies(genero.gen_id)\n    }, genero.gen_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this));\n  };\n  const renderEspecies = generoId => {\n    const especiesOfGenero = especies.filter(especie => especie.gen_id === generoId);\n    return especiesOfGenero.map(especie => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `especie-${especie.esp_id}`,\n      label: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            style: {\n              color: colorNiveles[especie.esp_id],\n              fontSize: tamanoNivel,\n              fontFamily: tipoLetra\n            },\n            children: \"Especie:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `https://doi.org/${especie.ref_doi.trim()}`,\n            target: \"_blank\",\n            style: {\n              color: colorItems[especie.esp_id],\n              fontSize: tamanoItem,\n              fontFamily: tipoLetra\n            },\n            children: especie.esp_nombre.trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doi-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            style: {\n              color: colorNiveles[especie.esp_id],\n              fontSize: tamanoNivel,\n              fontFamily: tipoLetra\n            },\n            children: \"DOI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"doi-text\",\n            style: {\n              color: colorItems[especie.esp_id],\n              fontSize: tamanoItem,\n              fontFamily: tipoLetra\n            },\n            children: especie.ref_doi.trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)\n    }, especie.esp_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(StyledBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            fontFamily: \"Helvetica Neue\",\n            children: \"Nuestro sitio web es una plataforma dise\\xF1ada para facilitar la georreferenciaci\\xF3n de datos de especies. Con su interfaz f\\xE1cil de usar y su funcionalidad avanzada, permite a los investigadores, administradores y usuarios administrar y analizar de manera eficiente la informaci\\xF3n sobre especies.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(StyledBox, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"\\xC1rbol filogen\\xE9tico\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: searchText,\n                onChange: handleSearchChange,\n                placeholder: \"Buscar...\",\n                variant: \"outlined\",\n                size: \"small\",\n                fullWidth: true,\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 23\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TreeView, {\n              defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 38\n              }, this),\n              defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 36\n              }, this),\n              sx: {\n                height: 240,\n                flexGrow: 1,\n                marginLeft: \"60px\"\n              },\n              children: renderReinos()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(StyledBox, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Investigaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  children: \"Mi bot\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 5\n  }, this);\n}\n_s(FileSystemNavigator, \"tZegXy9kSNMy9M0eXeDlqfGyJFI=\");\n_c3 = FileSystemNavigator;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTreeItem\");\n$RefreshReg$(_c2, \"StyledBox\");\n$RefreshReg$(_c3, \"FileSystemNavigator\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","styled","ExpandMoreIcon","ChevronRightIcon","TreeItem","treeItemClasses","Grid","Typography","Box","TextField","IconButton","Button","SearchIcon","axios","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledTreeItem","_ref","rootNode","hasData","borderColor","nivelColor","itemColor","position","pointerEvents","content","width","left","top","borderBottom","group","marginLeft","paddingLeft","borderLeft","color","fontWeight","fontSize","whiteSpace","cursor","userSelect","display","_c","StyledBox","margin","textAlign","fontFamily","maxWidth","_c2","FileSystemNavigator","_s","searchText","setSearchText","showContent","setShowContent","handleButtonClick","handleSearchChange","event","target","value","colorNiveles","setColorNiveles","colorItems","setColorItems","reinos","setReinos","filos","setFilos","clases","setClases","ordenes","setOrdenes","familias","setFamilias","generos","setGeneros","especies","setEspecies","reinoElementCounts","setReinoElementCounts","filoElementCounts","setFiloElementCounts","claseElementCounts","setClaseElementCounts","ordenElementCounts","setOrdenElementCounts","familiaElementCounts","setFamiliaElementCounts","generoElementCounts","setGeneroElementCounts","colorNivel","colorItem","tamanoNivel","tamanoItem","tipoLetra","fetchReinos","handleReinoClick","nodeId","reinoId","split","reino","find","rei_id","toString","fetchFilos","handleFiloClick","filoId","filo","fil_id","fetchClases","handleClaseClick","claseId","clase","cla_id","fetchOrdenes","handleOrdenClick","ordenId","orden","ord_id","fetchFamilias","handleFamiliaClick","familiaId","familia","fam_id","fetchGeneros","handleGeneroClick","generoId","genero","gen_id","fetchEspecies","renderReinos","map","label","children","component","style","fileName","_jsxFileName","lineNumber","columnNumber","rei_nombre","trim","onClick","some","renderFilos","filosOfReino","filter","fil_nombre","renderClases","clasesOfFilo","cla_nombre","renderOrdenes","ordenesOfClase","ord_nombre","renderFamilias","familiasOfOrden","gen_nombre","renderGeneros","generosOfFamilia","especie","renderEspecies","especiesOfGenero","esp_id","to","ref_doi","esp_nombre","className","container","spacing","item","xs","variant","onChange","placeholder","size","fullWidth","InputProps","endAdornment","defaultCollapseIcon","defaultExpandIcon","sx","height","flexGrow","_c3","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/Inicio.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton, Button } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\n\n\nconst StyledTreeItem = styled(TreeItem)(({ rootNode, hasData }) => {\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\",\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`,\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\",\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor,\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\",\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\",\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\",\n    },\n  };\n});\n\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"350px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n\n\nexport default function FileSystemNavigator() {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const [showContent, setShowContent] = useState(false);\n\n  const handleButtonClick = () => {\n    setShowContent(!showContent);\n  };\n  \n\n  const handleSearchChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n\n\n\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n\n  const colorNivel = \"#00000073\"\n  const colorItem = \"#1890FF\"\n  const tamanoNivel = \"14px\"\n  const tamanoItem = \"12px\"\n  const tipoLetra = \"Helvetica Neue\"\n\n\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n\n \n\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find((reino) => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find((filo) => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find((clase) => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find((orden) => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find((familia) => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find((genero) => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n\n  const renderReinos = () => {\n    return reinos.map((reino) => (\n      <StyledTreeItem\n        key={reino.rei_id}\n        nodeId={`reino-${reino.rei_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[reino.rei_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Reino:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[reino.rei_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{reino.rei_nombre.trim()} ({reinoElementCounts[reino.rei_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleReinoClick(event, `reino-${reino.rei_id}`)}\n        hasData={filos.some((filo) => filo.rei_id === reino.rei_id)}\n      >\n        {/* Renderizar los filos */}\n        {renderFilos(reino.rei_id)}\n      </StyledTreeItem>\n    ));\n  }\n\n  const renderFilos = (reinoId) => {\n    const filosOfReino = filos.filter((filo) => filo.rei_id === reinoId);\n\n    return filosOfReino.map((filo) => (\n      <StyledTreeItem\n        key={filo.fil_id}\n        nodeId={`filo-${filo.fil_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[filo.fil_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Filo:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[filo.fil_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{filo.fil_nombre.trim()} ({filoElementCounts[filo.fil_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleFiloClick(event, `filo-${filo.fil_id}`)}\n        hasData={clases.some((clase) => clase.fil_id === filo.fil_id)}\n      >\n        {/* Renderizar las clases */}\n        {renderClases(filo.fil_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n\n  const renderClases = (filoId) => {\n    const clasesOfFilo = clases.filter((clase) => clase.fil_id === filoId);\n\n    return clasesOfFilo.map((clase) => (\n      <StyledTreeItem\n        key={clase.cla_id}\n        nodeId={`clase-${clase.cla_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[clase.cla_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Clase:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[clase.cla_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{clase.cla_nombre.trim()} ({claseElementCounts[clase.cla_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleClaseClick(event, `clase-${clase.cla_id}`)}\n        hasData={ordenes.some((orden) => orden.cla_id === clase.cla_id)}\n      >\n        {/* Renderizar las órdenes */}\n        {renderOrdenes(clase.cla_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n\n  const renderOrdenes = (claseId) => {\n    const ordenesOfClase = ordenes.filter((orden) => orden.cla_id === claseId);\n\n    return ordenesOfClase.map((orden) => (\n      <StyledTreeItem\n        key={orden.ord_id}\n        nodeId={`orden-${orden.ord_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[orden.ord_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Orden:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[orden.ord_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{orden.ord_nombre.trim()} ({ordenElementCounts[orden.ord_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleOrdenClick(event, `orden-${orden.ord_id}`)}\n        hasData={familias.some((familia) => familia.ord_id === orden.ord_id)}\n      >\n        {/* Renderizar las familias */}\n        {renderFamilias(orden.ord_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderFamilias = (ordenId) => {\n    const familiasOfOrden = familias.filter((familia) => familia.ord_id === ordenId);\n\n    return familiasOfOrden.map((familia) => (\n      <StyledTreeItem\n        key={familia.fam_id}\n        nodeId={`familia-${familia.fam_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[familia.fam_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Familia:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[familia.fam_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{familia.gen_nombre.trim()}  ({familiaElementCounts[familia.fam_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleFamiliaClick(event, `familia-${familia.fam_id}`)}\n        hasData={generos.some((genero) => genero.fam_id === familia.fam_id)}\n      >\n        {/* Renderizar los géneros */}\n        {renderGeneros(familia.fam_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderGeneros = (familiaId) => {\n    const generosOfFamilia = generos.filter((genero) => genero.fam_id === familiaId);\n\n    return generosOfFamilia.map((genero) => (\n      <StyledTreeItem\n        key={genero.gen_id}\n        nodeId={`genero-${genero.gen_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[genero.gen_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Género:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[genero.gen_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{genero.gen_nombre.trim()} ({generoElementCounts[genero.gen_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleGeneroClick(event, `genero-${genero.gen_id}`)}\n        hasData={especies.some((especie) => especie.gen_id === genero.gen_id)}\n      >\n        {/* Renderizar las especies */}\n        {renderEspecies(genero.gen_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderEspecies = (generoId) => {\n    const especiesOfGenero = especies.filter((especie) => especie.gen_id === generoId);\n\n    return especiesOfGenero.map((especie) => (\n      <StyledTreeItem\n        key={especie.esp_id}\n        nodeId={`especie-${especie.esp_id}`}\n        label={\n          <div>\n            <div>\n              <Typography component=\"span\" style={{ color: colorNiveles[especie.esp_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n                Especie:\n              </Typography>{\" \"}\n              <Link\n                to={`https://doi.org/${especie.ref_doi.trim()}`}\n                target=\"_blank\"\n                style={{ color: colorItems[especie.esp_id], fontSize: tamanoItem, fontFamily: tipoLetra }}\n              >\n                {especie.esp_nombre.trim()}\n              </Link>\n            </div>\n            <div className=\"doi-row\">\n              <Typography component=\"span\" style={{ color: colorNiveles[especie.esp_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n                DOI:\n              </Typography>{\" \"}\n              <span className=\"doi-text\" style={{ color: colorItems[especie.esp_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{especie.ref_doi.trim()}</span>\n            </div>\n          </div>\n        }\n      />\n    ));\n\n  };\n\n\n\n\n  return (\n    <Box >\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          {/* Descripción */}\n          <StyledBox>\n            <Typography variant=\"h5\">Descripción</Typography>\n            <Typography variant=\"body1\" fontFamily=\"Helvetica Neue\">\n              Nuestro sitio web es una plataforma diseñada para facilitar la\n              georreferenciación de datos de especies. Con su interfaz fácil de usar\n              y su funcionalidad avanzada, permite a los investigadores,\n              administradores y usuarios administrar y analizar de manera eficiente\n              la información sobre especies.\n            </Typography>\n          </StyledBox>\n        </Grid>\n        <Grid item xs={12}>\n          {/* Contenedor del Árbol y Trabajo académico */}\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <StyledBox>\n                <Typography variant=\"h6\">Árbol filogenético</Typography>\n                <TextField\n                  value={searchText}\n                  onChange={handleSearchChange}\n                  placeholder=\"Buscar...\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  InputProps={{\n                    endAdornment: (\n                      <IconButton>\n                        <SearchIcon />\n                      </IconButton>\n                    )\n                  }}\n                />\n              </StyledBox>\n              {/* Árbol filogenético */}\n              <TreeView\n                defaultCollapseIcon={<ExpandMoreIcon />}\n                defaultExpandIcon={<ChevronRightIcon />}\n                sx={{ height: 240, flexGrow: 1, marginLeft: \"60px\" }}\n              >\n                {/* Renderizar los reinos */}\n                {renderReinos()}\n              </TreeView>\n            </Grid>\n            <Grid item xs={8}>\n              {/* Trabajo académico */}\n              <Box >\n                <StyledBox>\n                  <Typography variant=\"h6\">Investigaciones</Typography>\n                  {/* Contenido del trabajo académico */}\n                  <Button variant=\"contained\" color=\"primary\">\n                    Mi botón\n                  </Button>\n                </StyledBox>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n\n      </Grid>\n    </Box>\n  );\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}