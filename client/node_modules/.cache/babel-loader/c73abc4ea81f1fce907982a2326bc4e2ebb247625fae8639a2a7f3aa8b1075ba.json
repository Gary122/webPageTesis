{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\Inicio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton, Button } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTreeItem = styled(TreeItem)(_ref => {\n  let {\n    rootNode,\n    hasData\n  } = _ref;\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\"\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\"\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\"\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\"\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\"\n    }\n  };\n});\n_c = StyledTreeItem;\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"350px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n_c2 = StyledBox;\nconst fetchReinos = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:4000/reinos\");\n    const reinosData = response.data;\n\n    // Asignar el nivel \"Reino\" y su color correspondiente\n    const coloresNiveles = {};\n    const coloresItems = {};\n    for (const reino of reinosData) {\n      coloresNiveles[reino.rei_id] = colorNivel; // Color gris para el nivel \"Reino\"\n      coloresItems[reino.rei_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    // Obtener el número de elementos de cada reino\n    const elementCounts = {};\n    for (const reino of reinosData) {\n      const response = await axios.get(`http://localhost:4000/filos/${reino.rei_id}`);\n      const filosData = response.data;\n      elementCounts[reino.rei_id] = filosData.length;\n    }\n    setReinos(reinosData);\n    setReinoElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching reinos data: \", error);\n  }\n};\nconst fetchFilos = async reinoId => {\n  try {\n    const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n    const filosData = response.data;\n\n    // Asignar el nivel \"Filo\" y su color correspondiente\n    const coloresNiveles = {};\n    const coloresItems = {};\n    for (const filo of filosData) {\n      coloresNiveles[filo.fil_id] = colorNivel;\n      coloresItems[filo.fil_id] = colorItem;\n    }\n\n    // Obtener el número de elementos de cada filo\n    const elementCounts = {};\n    for (const filo of filosData) {\n      const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n      const clasesData = response.data;\n      elementCounts[filo.fil_id] = clasesData.length;\n    }\n    setFilos(filosData);\n    setFiloElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching filos data: \", error);\n  }\n};\nconst fetchClases = async filoId => {\n  try {\n    const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n    const clasesData = response.data;\n\n    // Asignar el nivel \"Clase\" y su color correspondiente\n    const coloresNiveles = {\n      ...colorNiveles\n    };\n    const coloresItems = {\n      ...colorItems\n    };\n    for (const clase of clasesData) {\n      coloresNiveles[clase.cla_id] = colorNivel; // Color gris para el nivel \"Clase\"\n      coloresItems[clase.cla_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    // Obtener el número de elementos de cada clase\n    const elementCounts = {};\n    for (const clase of clasesData) {\n      const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n      const ordenesData = response.data;\n      elementCounts[clase.cla_id] = ordenesData.length;\n    }\n    setClases(clasesData);\n    setClaseElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching clases data: \", error);\n  }\n};\nconst fetchOrdenes = async claseId => {\n  try {\n    const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n    const ordenesData = response.data;\n\n    // Asignar el nivel \"Orden\" y su color correspondiente\n    const coloresNiveles = {\n      ...colorNiveles\n    };\n    const coloresItems = {\n      ...colorItems\n    };\n    for (const orden of ordenesData) {\n      coloresNiveles[orden.ord_id] = colorNivel; // Color gris para el nivel \"Orden\"\n      coloresItems[orden.ord_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    // Obtener el número de elementos de cada orden\n    const elementCounts = {};\n    for (const orden of ordenesData) {\n      const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n      const familiasData = response.data;\n      elementCounts[orden.ord_id] = familiasData.length;\n    }\n    setOrdenes(ordenesData);\n    setOrdenElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching ordenes data: \", error);\n  }\n};\nconst fetchFamilias = async ordenId => {\n  try {\n    const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n    const familiasData = response.data;\n\n    // Asignar el nivel \"Familia\" y su color correspondiente\n    const coloresNiveles = {\n      ...colorNiveles\n    };\n    const coloresItems = {\n      ...colorItems\n    };\n    for (const familia of familiasData) {\n      coloresNiveles[familia.fam_id] = colorNivel; // Color gris para el nivel \"Familia\"\n      coloresItems[familia.fam_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    // Obtener el número de elementos de cada familia\n    const elementCounts = {};\n    for (const familia of familiasData) {\n      const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n      const generosData = response.data;\n      elementCounts[familia.fam_id] = generosData.length;\n    }\n    setFamilias(familiasData);\n    setFamiliaElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching familias data: \", error);\n  }\n};\nconst fetchGeneros = async familiaId => {\n  try {\n    const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n    const generosData = response.data;\n\n    // Asignar el nivel \"Género\" y su color correspondiente\n    const coloresNiveles = {\n      ...colorNiveles\n    };\n    const coloresItems = {\n      ...colorItems\n    };\n    for (const genero of generosData) {\n      coloresNiveles[genero.gen_id] = colorNivel; // Color gris para el nivel \"Género\"\n      coloresItems[genero.gen_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n    // Obtener el número de elementos de cada género\n    const elementCounts = {};\n    for (const genero of generosData) {\n      const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n      const especiesData = response.data;\n      elementCounts[genero.gen_id] = especiesData.length;\n    }\n    setGeneros(generosData);\n    setGeneroElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching generos data: \", error);\n  }\n};\nconst fetchEspecies = async generoId => {\n  try {\n    const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n    const especiesData = response.data;\n    // Asignar el nivel \"Especie\" y su color correspondiente\n    const coloresNiveles = {\n      ...colorNiveles\n    };\n    const coloresItems = {\n      ...colorItems\n    };\n    for (const especie of especiesData) {\n      coloresNiveles[especie.esp_id] = colorNivel; // Color gris para el nivel \"Especie\"\n      coloresItems[especie.esp_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    setEspecies(response.data);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching especies data: \", error);\n  }\n};\nexport default function FileSystemNavigator() {\n  _s();\n  const [searchText, setSearchText] = useState(\"\");\n  const [showContent, setShowContent] = useState(false);\n  const handleButtonClick = () => {\n    setShowContent(!showContent);\n  };\n  const handleSearchChange = event => {\n    setSearchText(event.target.value);\n  };\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n  const colorNivel = \"#00000073\";\n  const colorItem = \"#1890FF\";\n  const tamanoNivel = \"14px\";\n  const tamanoItem = \"12px\";\n  const tipoLetra = \"Helvetica Neue\";\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find(reino => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find(filo => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find(clase => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find(orden => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find(familia => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find(genero => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n  const renderReinos = () => {\n    return reinos.map(reino => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `reino-${reino.rei_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[reino.rei_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Reino:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[reino.rei_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [reino.rei_nombre.trim(), \" (\", reinoElementCounts[reino.rei_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleReinoClick(event, `reino-${reino.rei_id}`),\n      hasData: filos.some(filo => filo.rei_id === reino.rei_id),\n      children: renderFilos(reino.rei_id)\n    }, reino.rei_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFilos = reinoId => {\n    const filosOfReino = filos.filter(filo => filo.rei_id === reinoId);\n    return filosOfReino.map(filo => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `filo-${filo.fil_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[filo.fil_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Filo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[filo.fil_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [filo.fil_nombre.trim(), \" (\", filoElementCounts[filo.fil_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleFiloClick(event, `filo-${filo.fil_id}`),\n      hasData: clases.some(clase => clase.fil_id === filo.fil_id),\n      children: renderClases(filo.fil_id)\n    }, filo.fil_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this));\n  };\n  const renderClases = filoId => {\n    const clasesOfFilo = clases.filter(clase => clase.fil_id === filoId);\n    return clasesOfFilo.map(clase => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `clase-${clase.cla_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[clase.cla_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Clase:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[clase.cla_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [clase.cla_nombre.trim(), \" (\", claseElementCounts[clase.cla_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleClaseClick(event, `clase-${clase.cla_id}`),\n      hasData: ordenes.some(orden => orden.cla_id === clase.cla_id),\n      children: renderOrdenes(clase.cla_id)\n    }, clase.cla_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this));\n  };\n  const renderOrdenes = claseId => {\n    const ordenesOfClase = ordenes.filter(orden => orden.cla_id === claseId);\n    return ordenesOfClase.map(orden => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `orden-${orden.ord_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[orden.ord_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Orden:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[orden.ord_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [orden.ord_nombre.trim(), \" (\", ordenElementCounts[orden.ord_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleOrdenClick(event, `orden-${orden.ord_id}`),\n      hasData: familias.some(familia => familia.ord_id === orden.ord_id),\n      children: renderFamilias(orden.ord_id)\n    }, orden.ord_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFamilias = ordenId => {\n    const familiasOfOrden = familias.filter(familia => familia.ord_id === ordenId);\n    return familiasOfOrden.map(familia => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `familia-${familia.fam_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[familia.fam_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Familia:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[familia.fam_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [familia.gen_nombre.trim(), \"  (\", familiaElementCounts[familia.fam_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleFamiliaClick(event, `familia-${familia.fam_id}`),\n      hasData: generos.some(genero => genero.fam_id === familia.fam_id),\n      children: renderGeneros(familia.fam_id)\n    }, familia.fam_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this));\n  };\n  const renderGeneros = familiaId => {\n    const generosOfFamilia = generos.filter(genero => genero.fam_id === familiaId);\n    return generosOfFamilia.map(genero => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `genero-${genero.gen_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[genero.gen_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"G\\xE9nero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[genero.gen_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [genero.gen_nombre.trim(), \" (\", generoElementCounts[genero.gen_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleGeneroClick(event, `genero-${genero.gen_id}`),\n      hasData: especies.some(especie => especie.gen_id === genero.gen_id),\n      children: renderEspecies(genero.gen_id)\n    }, genero.gen_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this));\n  };\n  const renderEspecies = generoId => {\n    const especiesOfGenero = especies.filter(especie => especie.gen_id === generoId);\n    return especiesOfGenero.map(especie => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `especie-${especie.esp_id}`,\n      label: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            style: {\n              color: colorNiveles[especie.esp_id],\n              fontSize: tamanoNivel,\n              fontFamily: tipoLetra\n            },\n            children: \"Especie:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `https://doi.org/${especie.ref_doi.trim()}`,\n            target: \"_blank\",\n            style: {\n              color: colorItems[especie.esp_id],\n              fontSize: tamanoItem,\n              fontFamily: tipoLetra\n            },\n            children: especie.esp_nombre.trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doi-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            style: {\n              color: colorNiveles[especie.esp_id],\n              fontSize: tamanoNivel,\n              fontFamily: tipoLetra\n            },\n            children: \"DOI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"doi-text\",\n            style: {\n              color: colorItems[especie.esp_id],\n              fontSize: tamanoItem,\n              fontFamily: tipoLetra\n            },\n            children: especie.ref_doi.trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, this)\n    }, especie.esp_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(StyledBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            fontFamily: \"Helvetica Neue\",\n            children: \"Nuestro sitio web es una plataforma dise\\xF1ada para facilitar la georreferenciaci\\xF3n de datos de especies. Con su interfaz f\\xE1cil de usar y su funcionalidad avanzada, permite a los investigadores, administradores y usuarios administrar y analizar de manera eficiente la informaci\\xF3n sobre especies.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(StyledBox, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"\\xC1rbol filogen\\xE9tico\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: searchText,\n                onChange: handleSearchChange,\n                placeholder: \"Buscar...\",\n                variant: \"outlined\",\n                size: \"small\",\n                fullWidth: true,\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 628,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 23\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TreeView, {\n              defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 38\n              }, this),\n              defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 36\n              }, this),\n              sx: {\n                height: 240,\n                flexGrow: 1,\n                marginLeft: \"60px\"\n              },\n              children: renderReinos()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(StyledBox, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Investigaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  children: \"Mi bot\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 597,\n    columnNumber: 5\n  }, this);\n}\n_s(FileSystemNavigator, \"tZegXy9kSNMy9M0eXeDlqfGyJFI=\");\n_c3 = FileSystemNavigator;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTreeItem\");\n$RefreshReg$(_c2, \"StyledBox\");\n$RefreshReg$(_c3, \"FileSystemNavigator\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","styled","ExpandMoreIcon","ChevronRightIcon","TreeItem","treeItemClasses","Grid","Typography","Box","TextField","IconButton","Button","SearchIcon","axios","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledTreeItem","_ref","rootNode","hasData","borderColor","nivelColor","itemColor","position","pointerEvents","content","width","left","top","borderBottom","group","marginLeft","paddingLeft","borderLeft","color","fontWeight","fontSize","whiteSpace","cursor","userSelect","display","_c","StyledBox","margin","textAlign","fontFamily","maxWidth","_c2","fetchReinos","response","get","reinosData","data","coloresNiveles","coloresItems","reino","rei_id","colorNivel","colorItem","elementCounts","filosData","length","setReinos","setReinoElementCounts","setColorNiveles","setColorItems","error","console","fetchFilos","reinoId","filo","fil_id","clasesData","setFilos","setFiloElementCounts","fetchClases","filoId","colorNiveles","colorItems","clase","cla_id","ordenesData","setClases","setClaseElementCounts","fetchOrdenes","claseId","orden","ord_id","familiasData","setOrdenes","setOrdenElementCounts","fetchFamilias","ordenId","familia","fam_id","generosData","setFamilias","setFamiliaElementCounts","fetchGeneros","familiaId","genero","gen_id","especiesData","setGeneros","setGeneroElementCounts","fetchEspecies","generoId","especie","esp_id","setEspecies","FileSystemNavigator","_s","searchText","setSearchText","showContent","setShowContent","handleButtonClick","handleSearchChange","event","target","value","reinos","filos","clases","ordenes","familias","generos","especies","reinoElementCounts","filoElementCounts","claseElementCounts","ordenElementCounts","familiaElementCounts","generoElementCounts","tamanoNivel","tamanoItem","tipoLetra","handleReinoClick","nodeId","split","find","toString","handleFiloClick","handleClaseClick","handleOrdenClick","handleFamiliaClick","handleGeneroClick","renderReinos","map","label","children","component","style","fileName","_jsxFileName","lineNumber","columnNumber","rei_nombre","trim","onClick","some","renderFilos","filosOfReino","filter","fil_nombre","renderClases","clasesOfFilo","cla_nombre","renderOrdenes","ordenesOfClase","ord_nombre","renderFamilias","familiasOfOrden","gen_nombre","renderGeneros","generosOfFamilia","renderEspecies","especiesOfGenero","to","ref_doi","esp_nombre","className","container","spacing","item","xs","variant","onChange","placeholder","size","fullWidth","InputProps","endAdornment","defaultCollapseIcon","defaultExpandIcon","sx","height","flexGrow","_c3","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/Inicio.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton, Button } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\n\n\nconst StyledTreeItem = styled(TreeItem)(({ rootNode, hasData }) => {\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\",\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`,\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\",\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor,\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\",\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\",\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\",\n    },\n  };\n});\n\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"350px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n\n\nconst fetchReinos = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:4000/reinos\");\n    const reinosData = response.data;\n\n    // Asignar el nivel \"Reino\" y su color correspondiente\n    const coloresNiveles = {};\n    const coloresItems = {};\n    for (const reino of reinosData) {\n      coloresNiveles[reino.rei_id] = colorNivel; // Color gris para el nivel \"Reino\"\n      coloresItems[reino.rei_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    // Obtener el número de elementos de cada reino\n    const elementCounts = {};\n\n    for (const reino of reinosData) {\n      const response = await axios.get(`http://localhost:4000/filos/${reino.rei_id}`);\n      const filosData = response.data;\n      elementCounts[reino.rei_id] = filosData.length;\n    }\n\n\n    setReinos(reinosData);\n    setReinoElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching reinos data: \", error);\n  }\n};\n\nconst fetchFilos = async (reinoId) => {\n  try {\n    const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n    const filosData = response.data;\n\n\n    // Asignar el nivel \"Filo\" y su color correspondiente\n    const coloresNiveles = {};\n    const coloresItems = {};\n    for (const filo of filosData) {\n      coloresNiveles[filo.fil_id] = colorNivel;\n      coloresItems[filo.fil_id] = colorItem;\n    }\n\n\n    // Obtener el número de elementos de cada filo\n    const elementCounts = {};\n\n    for (const filo of filosData) {\n      const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n      const clasesData = response.data;\n      elementCounts[filo.fil_id] = clasesData.length;\n    }\n\n    setFilos(filosData);\n    setFiloElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching filos data: \", error);\n  }\n};\n\n\nconst fetchClases = async (filoId) => {\n  try {\n    const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n    const clasesData = response.data;\n\n\n    // Asignar el nivel \"Clase\" y su color correspondiente\n    const coloresNiveles = { ...colorNiveles };\n    const coloresItems = { ...colorItems };\n    for (const clase of clasesData) {\n      coloresNiveles[clase.cla_id] = colorNivel; // Color gris para el nivel \"Clase\"\n      coloresItems[clase.cla_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    // Obtener el número de elementos de cada clase\n    const elementCounts = {};\n\n    for (const clase of clasesData) {\n      const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n      const ordenesData = response.data;\n      elementCounts[clase.cla_id] = ordenesData.length;\n    }\n\n    setClases(clasesData);\n    setClaseElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching clases data: \", error);\n  }\n};\n\n\nconst fetchOrdenes = async (claseId) => {\n  try {\n    const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n    const ordenesData = response.data;\n\n\n    // Asignar el nivel \"Orden\" y su color correspondiente\n    const coloresNiveles = { ...colorNiveles };\n    const coloresItems = { ...colorItems };\n    for (const orden of ordenesData) {\n      coloresNiveles[orden.ord_id] = colorNivel; // Color gris para el nivel \"Orden\"\n      coloresItems[orden.ord_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    // Obtener el número de elementos de cada orden\n    const elementCounts = {};\n\n    for (const orden of ordenesData) {\n      const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n      const familiasData = response.data;\n      elementCounts[orden.ord_id] = familiasData.length;\n    }\n\n    setOrdenes(ordenesData);\n    setOrdenElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching ordenes data: \", error);\n  }\n};\n\n\nconst fetchFamilias = async (ordenId) => {\n  try {\n    const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n    const familiasData = response.data;\n\n    // Asignar el nivel \"Familia\" y su color correspondiente\n    const coloresNiveles = { ...colorNiveles };\n    const coloresItems = { ...colorItems };\n    for (const familia of familiasData) {\n      coloresNiveles[familia.fam_id] = colorNivel; // Color gris para el nivel \"Familia\"\n      coloresItems[familia.fam_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    // Obtener el número de elementos de cada familia\n    const elementCounts = {};\n\n    for (const familia of familiasData) {\n      const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n      const generosData = response.data;\n      elementCounts[familia.fam_id] = generosData.length;\n    }\n\n    setFamilias(familiasData);\n    setFamiliaElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching familias data: \", error);\n  }\n};\n\nconst fetchGeneros = async (familiaId) => {\n  try {\n    const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n    const generosData = response.data;\n\n    // Asignar el nivel \"Género\" y su color correspondiente\n    const coloresNiveles = { ...colorNiveles };\n    const coloresItems = { ...colorItems };\n    for (const genero of generosData) {\n      coloresNiveles[genero.gen_id] = colorNivel; // Color gris para el nivel \"Género\"\n      coloresItems[genero.gen_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n    // Obtener el número de elementos de cada género\n    const elementCounts = {};\n\n    for (const genero of generosData) {\n      const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n      const especiesData = response.data;\n      elementCounts[genero.gen_id] = especiesData.length;\n    }\n\n    setGeneros(generosData);\n    setGeneroElementCounts(elementCounts);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching generos data: \", error);\n  }\n};\n\n\nconst fetchEspecies = async (generoId) => {\n  try {\n    const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n    const especiesData = response.data;\n    // Asignar el nivel \"Especie\" y su color correspondiente\n    const coloresNiveles = { ...colorNiveles };\n    const coloresItems = { ...colorItems };\n    for (const especie of especiesData) {\n      coloresNiveles[especie.esp_id] = colorNivel; // Color gris para el nivel \"Especie\"\n      coloresItems[especie.esp_id] = colorItem; // Color azul celeste para el nombre del elemento\n    }\n\n    setEspecies(response.data);\n    setColorNiveles(coloresNiveles);\n    setColorItems(coloresItems);\n  } catch (error) {\n    console.error(\"Error fetching especies data: \", error);\n  }\n};\n\n\n\nexport default function FileSystemNavigator() {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const [showContent, setShowContent] = useState(false);\n\n  const handleButtonClick = () => {\n    setShowContent(!showContent);\n  };\n  \n\n  const handleSearchChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n\n\n\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n\n  const colorNivel = \"#00000073\"\n  const colorItem = \"#1890FF\"\n  const tamanoNivel = \"14px\"\n  const tamanoItem = \"12px\"\n  const tipoLetra = \"Helvetica Neue\"\n\n\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n\n \n\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find((reino) => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find((filo) => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find((clase) => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find((orden) => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find((familia) => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find((genero) => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n\n  const renderReinos = () => {\n    return reinos.map((reino) => (\n      <StyledTreeItem\n        key={reino.rei_id}\n        nodeId={`reino-${reino.rei_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[reino.rei_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Reino:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[reino.rei_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{reino.rei_nombre.trim()} ({reinoElementCounts[reino.rei_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleReinoClick(event, `reino-${reino.rei_id}`)}\n        hasData={filos.some((filo) => filo.rei_id === reino.rei_id)}\n      >\n        {/* Renderizar los filos */}\n        {renderFilos(reino.rei_id)}\n      </StyledTreeItem>\n    ));\n  }\n\n  const renderFilos = (reinoId) => {\n    const filosOfReino = filos.filter((filo) => filo.rei_id === reinoId);\n\n    return filosOfReino.map((filo) => (\n      <StyledTreeItem\n        key={filo.fil_id}\n        nodeId={`filo-${filo.fil_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[filo.fil_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Filo:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[filo.fil_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{filo.fil_nombre.trim()} ({filoElementCounts[filo.fil_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleFiloClick(event, `filo-${filo.fil_id}`)}\n        hasData={clases.some((clase) => clase.fil_id === filo.fil_id)}\n      >\n        {/* Renderizar las clases */}\n        {renderClases(filo.fil_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n\n  const renderClases = (filoId) => {\n    const clasesOfFilo = clases.filter((clase) => clase.fil_id === filoId);\n\n    return clasesOfFilo.map((clase) => (\n      <StyledTreeItem\n        key={clase.cla_id}\n        nodeId={`clase-${clase.cla_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[clase.cla_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Clase:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[clase.cla_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{clase.cla_nombre.trim()} ({claseElementCounts[clase.cla_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleClaseClick(event, `clase-${clase.cla_id}`)}\n        hasData={ordenes.some((orden) => orden.cla_id === clase.cla_id)}\n      >\n        {/* Renderizar las órdenes */}\n        {renderOrdenes(clase.cla_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n\n  const renderOrdenes = (claseId) => {\n    const ordenesOfClase = ordenes.filter((orden) => orden.cla_id === claseId);\n\n    return ordenesOfClase.map((orden) => (\n      <StyledTreeItem\n        key={orden.ord_id}\n        nodeId={`orden-${orden.ord_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[orden.ord_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Orden:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[orden.ord_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{orden.ord_nombre.trim()} ({ordenElementCounts[orden.ord_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleOrdenClick(event, `orden-${orden.ord_id}`)}\n        hasData={familias.some((familia) => familia.ord_id === orden.ord_id)}\n      >\n        {/* Renderizar las familias */}\n        {renderFamilias(orden.ord_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderFamilias = (ordenId) => {\n    const familiasOfOrden = familias.filter((familia) => familia.ord_id === ordenId);\n\n    return familiasOfOrden.map((familia) => (\n      <StyledTreeItem\n        key={familia.fam_id}\n        nodeId={`familia-${familia.fam_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[familia.fam_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Familia:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[familia.fam_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{familia.gen_nombre.trim()}  ({familiaElementCounts[familia.fam_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleFamiliaClick(event, `familia-${familia.fam_id}`)}\n        hasData={generos.some((genero) => genero.fam_id === familia.fam_id)}\n      >\n        {/* Renderizar los géneros */}\n        {renderGeneros(familia.fam_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderGeneros = (familiaId) => {\n    const generosOfFamilia = generos.filter((genero) => genero.fam_id === familiaId);\n\n    return generosOfFamilia.map((genero) => (\n      <StyledTreeItem\n        key={genero.gen_id}\n        nodeId={`genero-${genero.gen_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[genero.gen_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Género:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[genero.gen_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{genero.gen_nombre.trim()} ({generoElementCounts[genero.gen_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleGeneroClick(event, `genero-${genero.gen_id}`)}\n        hasData={especies.some((especie) => especie.gen_id === genero.gen_id)}\n      >\n        {/* Renderizar las especies */}\n        {renderEspecies(genero.gen_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderEspecies = (generoId) => {\n    const especiesOfGenero = especies.filter((especie) => especie.gen_id === generoId);\n\n    return especiesOfGenero.map((especie) => (\n      <StyledTreeItem\n        key={especie.esp_id}\n        nodeId={`especie-${especie.esp_id}`}\n        label={\n          <div>\n            <div>\n              <Typography component=\"span\" style={{ color: colorNiveles[especie.esp_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n                Especie:\n              </Typography>{\" \"}\n              <Link\n                to={`https://doi.org/${especie.ref_doi.trim()}`}\n                target=\"_blank\"\n                style={{ color: colorItems[especie.esp_id], fontSize: tamanoItem, fontFamily: tipoLetra }}\n              >\n                {especie.esp_nombre.trim()}\n              </Link>\n            </div>\n            <div className=\"doi-row\">\n              <Typography component=\"span\" style={{ color: colorNiveles[especie.esp_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n                DOI:\n              </Typography>{\" \"}\n              <span className=\"doi-text\" style={{ color: colorItems[especie.esp_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{especie.ref_doi.trim()}</span>\n            </div>\n          </div>\n        }\n      />\n    ));\n\n  };\n\n\n\n\n  return (\n    <Box >\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          {/* Descripción */}\n          <StyledBox>\n            <Typography variant=\"h5\">Descripción</Typography>\n            <Typography variant=\"body1\" fontFamily=\"Helvetica Neue\">\n              Nuestro sitio web es una plataforma diseñada para facilitar la\n              georreferenciación de datos de especies. Con su interfaz fácil de usar\n              y su funcionalidad avanzada, permite a los investigadores,\n              administradores y usuarios administrar y analizar de manera eficiente\n              la información sobre especies.\n            </Typography>\n          </StyledBox>\n        </Grid>\n        <Grid item xs={12}>\n          {/* Contenedor del Árbol y Trabajo académico */}\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <StyledBox>\n                <Typography variant=\"h6\">Árbol filogenético</Typography>\n                <TextField\n                  value={searchText}\n                  onChange={handleSearchChange}\n                  placeholder=\"Buscar...\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  InputProps={{\n                    endAdornment: (\n                      <IconButton>\n                        <SearchIcon />\n                      </IconButton>\n                    )\n                  }}\n                />\n              </StyledBox>\n              {/* Árbol filogenético */}\n              <TreeView\n                defaultCollapseIcon={<ExpandMoreIcon />}\n                defaultExpandIcon={<ChevronRightIcon />}\n                sx={{ height: 240, flexGrow: 1, marginLeft: \"60px\" }}\n              >\n                {/* Renderizar los reinos */}\n                {renderReinos()}\n              </TreeView>\n            </Grid>\n            <Grid item xs={8}>\n              {/* Trabajo académico */}\n              <Box >\n                <StyledBox>\n                  <Typography variant=\"h6\">Investigaciones</Typography>\n                  {/* Contenido del trabajo académico */}\n                  <Button variant=\"contained\" color=\"primary\">\n                    Mi botón\n                  </Button>\n                </StyledBox>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n\n      </Grid>\n    </Box>\n  );\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}