{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaxonomyTree() {\n  _s();\n  const [treeData, setTreeData] = useState([]);\n\n  // Crear un objeto de nodo\n  function createTreeNode(id, name, children, level) {\n    return {\n      id,\n      name,\n      children,\n      level\n    };\n  }\n\n  // Cargar hijos de un nodo\n  async function loadNodeChildren(node, level) {\n    let url = '';\n    let data = [];\n    switch (level) {\n      case 'reino':\n        url = `http://localhost:4000/filos/${node.id}`;\n        break;\n      case 'filo':\n        url = `http://localhost:4000/clases/${node.id}`;\n        break;\n      case 'clase':\n        url = `http://localhost:4000/ordenes/${node.id}`;\n        break;\n      case 'orden':\n        url = `http://localhost:4000/familias/${node.id}`;\n        break;\n      case 'familia':\n        url = `http://localhost:4000/generos/${node.id}`;\n        break;\n      case 'genero':\n        url = `http://localhost:4000/especies/${node.id}`;\n        break;\n      default:\n        break;\n    }\n    const response = await fetch(url);\n    data = await response.json();\n    const childNodes = data.map(item => {\n      const newNode = createTreeNode(item.id, item.nombre.trim(), [], level);\n      node.children.push(newNode);\n      return newNode;\n    });\n    return childNodes;\n  }\n\n  // Manejar evento de expansi칩n de nodo\n  const handleNodeToggle = async (nodeId, nodeState) => {\n    if (nodeState.expanded && !treeData[nodeId].children.length) {\n      const nodeLevel = treeData[nodeId].level;\n      await loadNodeChildren(treeData[nodeId], nodeLevel);\n      setTreeData({\n        ...treeData\n      });\n    }\n  };\n\n  // Obtener datos iniciales\n  async function fetchData() {\n    const response = await fetch('http://localhost:4000/reinos');\n    const data = await response.json();\n    const nodes = data.map(item => createTreeNode(item.rei_id, item.rei_nombre.trim(), [], 'reino'));\n    setTreeData(nodes);\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Renderizar los nodos del 치rbol de forma recursiva\n  const renderTree = nodes => {\n    return nodes.map(node => /*#__PURE__*/_jsxDEV(TreeItem, {\n      nodeId: node.id,\n      label: node.name,\n      onToggle: handleNodeToggle,\n      children: Array.isArray(node.children) ? renderTree(node.children) : null\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 34\n    }, this),\n    defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 32\n    }, this),\n    children: renderTree(treeData)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(TaxonomyTree, \"beijQgCEr4PaHJnyDg4mOCdZI4w=\");\n_c = TaxonomyTree;\nexport default TaxonomyTree;\nvar _c;\n$RefreshReg$(_c, \"TaxonomyTree\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","TreeItem","ExpandMoreIcon","ChevronRightIcon","jsxDEV","_jsxDEV","TaxonomyTree","_s","treeData","setTreeData","createTreeNode","id","name","children","level","loadNodeChildren","node","url","data","response","fetch","json","childNodes","map","item","newNode","nombre","trim","push","handleNodeToggle","nodeId","nodeState","expanded","length","nodeLevel","fetchData","nodes","rei_id","rei_nombre","renderTree","label","onToggle","Array","isArray","fileName","_jsxFileName","lineNumber","columnNumber","defaultCollapseIcon","defaultExpandIcon","_c","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nfunction TaxonomyTree() {\n    const [treeData, setTreeData] = useState([]);\n\n    // Crear un objeto de nodo\n    function createTreeNode(id, name, children, level) {\n        return { id, name, children, level };\n    }\n\n    // Cargar hijos de un nodo\n    async function loadNodeChildren(node, level) {\n        let url = '';\n        let data = [];\n\n        switch (level) {\n            case 'reino':\n                url = `http://localhost:4000/filos/${node.id}`;\n                break;\n            case 'filo':\n                url = `http://localhost:4000/clases/${node.id}`;\n                break;\n            case 'clase':\n                url = `http://localhost:4000/ordenes/${node.id}`;\n                break;\n            case 'orden':\n                url = `http://localhost:4000/familias/${node.id}`;\n                break;\n            case 'familia':\n                url = `http://localhost:4000/generos/${node.id}`;\n                break;\n            case 'genero':\n                url = `http://localhost:4000/especies/${node.id}`;\n                break;\n            default:\n                break;\n        }\n\n        const response = await fetch(url);\n        data = await response.json();\n\n        const childNodes = data.map((item) => {\n            const newNode = createTreeNode(item.id, item.nombre.trim(), [], level);\n            node.children.push(newNode);\n            return newNode;\n        });\n\n        return childNodes;\n    }\n\n    // Manejar evento de expansi칩n de nodo\n    const handleNodeToggle = async (nodeId, nodeState) => {\n        if (nodeState.expanded && !treeData[nodeId].children.length) {\n            const nodeLevel = treeData[nodeId].level;\n            await loadNodeChildren(treeData[nodeId], nodeLevel);\n            setTreeData({ ...treeData });\n        }\n    };\n\n    // Obtener datos iniciales\n    async function fetchData() {\n        const response = await fetch('http://localhost:4000/reinos');\n        const data = await response.json();\n        const nodes = data.map((item) => createTreeNode(item.rei_id, item.rei_nombre.trim(), [], 'reino'));\n        setTreeData(nodes);\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    // Renderizar los nodos del 치rbol de forma recursiva\n    const renderTree = (nodes) => {\n        return nodes.map((node) => (\n            <TreeItem key={node.id} nodeId={node.id} label={node.name} onToggle={handleNodeToggle}>\n                {Array.isArray(node.children) ? renderTree(node.children) : null}\n            </TreeItem>\n        ));\n    };\n\n    return (\n        <TreeView\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n        >\n            {renderTree(treeData)}\n        </TreeView>\n    );\n}\n\nexport default TaxonomyTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}