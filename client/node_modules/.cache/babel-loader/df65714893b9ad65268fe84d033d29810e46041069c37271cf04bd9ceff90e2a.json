{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\Inicio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton, Button } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTreeItem = styled(TreeItem)(_ref => {\n  let {\n    rootNode,\n    hasData\n  } = _ref;\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\"\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\"\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\"\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\"\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\"\n    }\n  };\n});\n_c = StyledTreeItem;\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"600px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n_c2 = StyledBox;\nexport default function FileSystemNavigator() {\n  _s();\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchTextCountry, setSearchTextCountry] = useState(\"\");\n  const [showContent, setShowContent] = useState(false);\n  const handleButtonClick = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/noticias/Ecuador\");\n      setNoticias(response.data);\n      setShowContent(!showContent);\n    } catch (error) {\n      console.error(\"Error fetching noticias data: \", error);\n    }\n  };\n  const handleSearchChange = event => {\n    setSearchText(event.target.value);\n  };\n  const handleSearchChangeCountry = event => {\n    setSearchTextCountry(event.target.value);\n  };\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n  const [noticias, setNoticias] = useState([]);\n  const colorNivel = \"#00000073\";\n  const colorItem = \"#1890FF\";\n  const tamanoNivel = \"14px\";\n  const tamanoItem = \"12px\";\n  const tipoLetra = \"Helvetica Neue\";\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Asignar el nivel \"Reino\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const reino of reinosData) {\n        coloresNiveles[reino.rei_id] = colorNivel; // Color gris para el nivel \"Reino\"\n        coloresItems[reino.rei_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada reino\n      const elementCounts = {};\n      for (const reino of reinosData) {\n        const response = await axios.get(`http://localhost:4000/filos/${reino.rei_id}`);\n        const filosData = response.data;\n        elementCounts[reino.rei_id] = filosData.length;\n      }\n      setReinos(reinosData);\n      setReinoElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n  const fetchFilos = async reinoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n      // Asignar el nivel \"Filo\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const filo of filosData) {\n        coloresNiveles[filo.fil_id] = colorNivel;\n        coloresItems[filo.fil_id] = colorItem;\n      }\n\n      // Obtener el número de elementos de cada filo\n      const elementCounts = {};\n      for (const filo of filosData) {\n        const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n        const clasesData = response.data;\n        elementCounts[filo.fil_id] = clasesData.length;\n      }\n      setFilos(filosData);\n      setFiloElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n  const fetchClases = async filoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      const clasesData = response.data;\n\n      // Asignar el nivel \"Clase\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const clase of clasesData) {\n        coloresNiveles[clase.cla_id] = colorNivel; // Color gris para el nivel \"Clase\"\n        coloresItems[clase.cla_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada clase\n      const elementCounts = {};\n      for (const clase of clasesData) {\n        const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n        const ordenesData = response.data;\n        elementCounts[clase.cla_id] = ordenesData.length;\n      }\n      setClases(clasesData);\n      setClaseElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n  const fetchOrdenes = async claseId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      const ordenesData = response.data;\n\n      // Asignar el nivel \"Orden\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const orden of ordenesData) {\n        coloresNiveles[orden.ord_id] = colorNivel; // Color gris para el nivel \"Orden\"\n        coloresItems[orden.ord_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada orden\n      const elementCounts = {};\n      for (const orden of ordenesData) {\n        const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n        const familiasData = response.data;\n        elementCounts[orden.ord_id] = familiasData.length;\n      }\n      setOrdenes(ordenesData);\n      setOrdenElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n  const fetchFamilias = async ordenId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      const familiasData = response.data;\n\n      // Asignar el nivel \"Familia\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const familia of familiasData) {\n        coloresNiveles[familia.fam_id] = colorNivel; // Color gris para el nivel \"Familia\"\n        coloresItems[familia.fam_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada familia\n      const elementCounts = {};\n      for (const familia of familiasData) {\n        const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n        const generosData = response.data;\n        elementCounts[familia.fam_id] = generosData.length;\n      }\n      setFamilias(familiasData);\n      setFamiliaElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n  const fetchGeneros = async familiaId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      const generosData = response.data;\n\n      // Asignar el nivel \"Género\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const genero of generosData) {\n        coloresNiveles[genero.gen_id] = colorNivel; // Color gris para el nivel \"Género\"\n        coloresItems[genero.gen_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n      // Obtener el número de elementos de cada género\n      const elementCounts = {};\n      for (const genero of generosData) {\n        const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n        const especiesData = response.data;\n        elementCounts[genero.gen_id] = especiesData.length;\n      }\n      setGeneros(generosData);\n      setGeneroElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n  const fetchEspecies = async generoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      const especiesData = response.data;\n      // Asignar el nivel \"Especie\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const especie of especiesData) {\n        coloresNiveles[especie.esp_id] = colorNivel; // Color gris para el nivel \"Especie\"\n        coloresItems[especie.esp_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      setEspecies(response.data);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find(reino => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find(filo => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find(clase => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find(orden => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find(familia => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find(genero => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n  const renderReinos = () => {\n    return reinos.map(reino => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `reino-${reino.rei_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[reino.rei_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Reino:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[reino.rei_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [reino.rei_nombre.trim(), \" (\", reinoElementCounts[reino.rei_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleReinoClick(event, `reino-${reino.rei_id}`),\n      hasData: filos.some(filo => filo.rei_id === reino.rei_id),\n      children: renderFilos(reino.rei_id)\n    }, reino.rei_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFilos = reinoId => {\n    const filosOfReino = filos.filter(filo => filo.rei_id === reinoId);\n    return filosOfReino.map(filo => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `filo-${filo.fil_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[filo.fil_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Filo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[filo.fil_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [filo.fil_nombre.trim(), \" (\", filoElementCounts[filo.fil_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleFiloClick(event, `filo-${filo.fil_id}`),\n      hasData: clases.some(clase => clase.fil_id === filo.fil_id),\n      children: renderClases(filo.fil_id)\n    }, filo.fil_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this));\n  };\n  const renderClases = filoId => {\n    const clasesOfFilo = clases.filter(clase => clase.fil_id === filoId);\n    return clasesOfFilo.map(clase => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `clase-${clase.cla_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[clase.cla_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Clase:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[clase.cla_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [clase.cla_nombre.trim(), \" (\", claseElementCounts[clase.cla_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleClaseClick(event, `clase-${clase.cla_id}`),\n      hasData: ordenes.some(orden => orden.cla_id === clase.cla_id),\n      children: renderOrdenes(clase.cla_id)\n    }, clase.cla_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this));\n  };\n  const renderOrdenes = claseId => {\n    const ordenesOfClase = ordenes.filter(orden => orden.cla_id === claseId);\n    return ordenesOfClase.map(orden => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `orden-${orden.ord_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[orden.ord_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Orden:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[orden.ord_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [orden.ord_nombre.trim(), \" (\", ordenElementCounts[orden.ord_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleOrdenClick(event, `orden-${orden.ord_id}`),\n      hasData: familias.some(familia => familia.ord_id === orden.ord_id),\n      children: renderFamilias(orden.ord_id)\n    }, orden.ord_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFamilias = ordenId => {\n    const familiasOfOrden = familias.filter(familia => familia.ord_id === ordenId);\n    return familiasOfOrden.map(familia => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `familia-${familia.fam_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[familia.fam_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Familia:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[familia.fam_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [familia.gen_nombre.trim(), \"  (\", familiaElementCounts[familia.fam_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleFamiliaClick(event, `familia-${familia.fam_id}`),\n      hasData: generos.some(genero => genero.fam_id === familia.fam_id),\n      children: renderGeneros(familia.fam_id)\n    }, familia.fam_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this));\n  };\n  const renderGeneros = familiaId => {\n    const generosOfFamilia = generos.filter(genero => genero.fam_id === familiaId);\n    return generosOfFamilia.map(genero => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `genero-${genero.gen_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[genero.gen_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"G\\xE9nero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[genero.gen_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [genero.gen_nombre.trim(), \" (\", generoElementCounts[genero.gen_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleGeneroClick(event, `genero-${genero.gen_id}`),\n      hasData: especies.some(especie => especie.gen_id === genero.gen_id),\n      children: renderEspecies(genero.gen_id)\n    }, genero.gen_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this));\n  };\n  const renderEspecies = generoId => {\n    const especiesOfGenero = especies.filter(especie => especie.gen_id === generoId);\n    return especiesOfGenero.map(especie => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `especie-${especie.esp_id}`,\n      label: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            style: {\n              color: colorNiveles[especie.esp_id],\n              fontSize: tamanoNivel,\n              fontFamily: tipoLetra\n            },\n            children: \"Especie:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `https://doi.org/${especie.ref_doi.trim()}`,\n            target: \"_blank\",\n            style: {\n              color: colorItems[especie.esp_id],\n              fontSize: tamanoItem,\n              fontFamily: tipoLetra\n            },\n            children: especie.esp_nombre.trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doi-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            style: {\n              color: colorNiveles[especie.esp_id],\n              fontSize: tamanoNivel,\n              fontFamily: tipoLetra\n            },\n            children: \"DOI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"doi-text\",\n            style: {\n              color: colorItems[especie.esp_id],\n              fontSize: tamanoItem,\n              fontFamily: tipoLetra\n            },\n            children: especie.ref_doi.trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 11\n      }, this)\n    }, especie.esp_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(StyledBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            fontFamily: \"Helvetica Neue\",\n            children: \"Nuestro sitio web es una plataforma dise\\xF1ada para facilitar la georreferenciaci\\xF3n de datos de especies. Con su interfaz f\\xE1cil de usar y su funcionalidad avanzada, permite a los investigadores, administradores y usuarios administrar y analizar de manera eficiente la informaci\\xF3n sobre especies.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(StyledBox, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"\\xC1rbol filogen\\xE9tico\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: searchText,\n                onChange: handleSearchChange,\n                placeholder: \"Buscar...\",\n                variant: \"outlined\",\n                size: \"small\",\n                fullWidth: true,\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 23\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TreeView, {\n              defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 38\n              }, this),\n              defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 36\n              }, this),\n              sx: {\n                height: 240,\n                flexGrow: 1,\n                marginLeft: \"60px\"\n              },\n              children: renderReinos()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(StyledBox, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Investigaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledBox, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"\\xC1rbol filogen\\xE9tico\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    value: searchTextCountry,\n                    onChange: handleSearchChangeCountry,\n                    placeholder: \"Buscar...\",\n                    variant: \"outlined\",\n                    size: \"small\",\n                    fullWidth: true,\n                    InputProps: {\n                      endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: handleButtonClick,\n                        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 672,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 671,\n                        columnNumber: 27\n                      }, this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 19\n                }, this), showContent && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: noticias.map((noticia, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      to: `https://doi.org/${noticia.ref_doi}`,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      style: {\n                        textDecoration: \"none\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        style: {\n                          fontSize: \"14px\",\n                          fontWeight: \"bold\",\n                          color: \"#333333\",\n                          fontFamily: \"Helvetica Neue\",\n                          textTransform: \"uppercase\",\n                          marginBottom: \"20px\"\n                        },\n                        children: noticia.ref_titulo\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 685,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 684,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      style: {\n                        textAlign: \"justify\",\n                        fontSize: \"14px\",\n                        color: \"#666666\",\n                        fontFamily: \"Helvetica Neue\",\n                        marginBottom: \"20px\"\n                      },\n                      children: noticia.ref_resumen\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 683,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 607,\n    columnNumber: 5\n  }, this);\n}\n_s(FileSystemNavigator, \"l6MzND/J3+5E5HNb8aq3frDT2S4=\");\n_c3 = FileSystemNavigator;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTreeItem\");\n$RefreshReg$(_c2, \"StyledBox\");\n$RefreshReg$(_c3, \"FileSystemNavigator\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","styled","ExpandMoreIcon","ChevronRightIcon","TreeItem","treeItemClasses","Grid","Typography","Box","TextField","IconButton","Button","SearchIcon","axios","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledTreeItem","_ref","rootNode","hasData","borderColor","nivelColor","itemColor","position","pointerEvents","content","width","left","top","borderBottom","group","marginLeft","paddingLeft","borderLeft","color","fontWeight","fontSize","whiteSpace","cursor","userSelect","display","_c","StyledBox","margin","textAlign","fontFamily","maxWidth","_c2","FileSystemNavigator","_s","searchText","setSearchText","searchTextCountry","setSearchTextCountry","showContent","setShowContent","handleButtonClick","response","get","setNoticias","data","error","console","handleSearchChange","event","target","value","handleSearchChangeCountry","colorNiveles","setColorNiveles","colorItems","setColorItems","reinos","setReinos","filos","setFilos","clases","setClases","ordenes","setOrdenes","familias","setFamilias","generos","setGeneros","especies","setEspecies","reinoElementCounts","setReinoElementCounts","filoElementCounts","setFiloElementCounts","claseElementCounts","setClaseElementCounts","ordenElementCounts","setOrdenElementCounts","familiaElementCounts","setFamiliaElementCounts","generoElementCounts","setGeneroElementCounts","noticias","colorNivel","colorItem","tamanoNivel","tamanoItem","tipoLetra","fetchReinos","reinosData","coloresNiveles","coloresItems","reino","rei_id","elementCounts","filosData","length","fetchFilos","reinoId","filo","fil_id","clasesData","fetchClases","filoId","clase","cla_id","ordenesData","fetchOrdenes","claseId","orden","ord_id","familiasData","fetchFamilias","ordenId","familia","fam_id","generosData","fetchGeneros","familiaId","genero","gen_id","especiesData","fetchEspecies","generoId","especie","esp_id","handleReinoClick","nodeId","split","find","toString","handleFiloClick","handleClaseClick","handleOrdenClick","handleFamiliaClick","handleGeneroClick","renderReinos","map","label","children","component","style","fileName","_jsxFileName","lineNumber","columnNumber","rei_nombre","trim","onClick","some","renderFilos","filosOfReino","filter","fil_nombre","renderClases","clasesOfFilo","cla_nombre","renderOrdenes","ordenesOfClase","ord_nombre","renderFamilias","familiasOfOrden","gen_nombre","renderGeneros","generosOfFamilia","renderEspecies","especiesOfGenero","to","ref_doi","esp_nombre","className","container","spacing","item","xs","variant","onChange","placeholder","size","fullWidth","InputProps","endAdornment","defaultCollapseIcon","defaultExpandIcon","sx","height","flexGrow","noticia","index","rel","textDecoration","textTransform","marginBottom","ref_titulo","ref_resumen","_c3","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/Inicio.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton, Button } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\n\n\nconst StyledTreeItem = styled(TreeItem)(({ rootNode, hasData }) => {\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\",\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`,\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\",\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor,\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\",\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\",\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\",\n    },\n  };\n});\n\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"600px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n\nexport default function FileSystemNavigator() {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchTextCountry, setSearchTextCountry] = useState(\"\");\n\n  const [showContent, setShowContent] = useState(false);\n\n  const handleButtonClick = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/noticias/Ecuador\");\n      setNoticias(response.data);\n      setShowContent(!showContent);\n    } catch (error) {\n      console.error(\"Error fetching noticias data: \", error);\n    }\n  };\n\n\n\n  const handleSearchChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const handleSearchChangeCountry = (event) => {\n    setSearchTextCountry(event.target.value);\n  };\n\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n\n\n\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n\n  const [noticias, setNoticias] = useState([]);\n\n\n  const colorNivel = \"#00000073\"\n  const colorItem = \"#1890FF\"\n  const tamanoNivel = \"14px\"\n  const tamanoItem = \"12px\"\n  const tipoLetra = \"Helvetica Neue\"\n\n\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Asignar el nivel \"Reino\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const reino of reinosData) {\n        coloresNiveles[reino.rei_id] = colorNivel; // Color gris para el nivel \"Reino\"\n        coloresItems[reino.rei_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada reino\n      const elementCounts = {};\n\n      for (const reino of reinosData) {\n        const response = await axios.get(`http://localhost:4000/filos/${reino.rei_id}`);\n        const filosData = response.data;\n        elementCounts[reino.rei_id] = filosData.length;\n      }\n\n\n      setReinos(reinosData);\n      setReinoElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n\n  const fetchFilos = async (reinoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n\n      // Asignar el nivel \"Filo\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const filo of filosData) {\n        coloresNiveles[filo.fil_id] = colorNivel;\n        coloresItems[filo.fil_id] = colorItem;\n      }\n\n\n      // Obtener el número de elementos de cada filo\n      const elementCounts = {};\n\n      for (const filo of filosData) {\n        const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n        const clasesData = response.data;\n        elementCounts[filo.fil_id] = clasesData.length;\n      }\n\n      setFilos(filosData);\n      setFiloElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n\n\n  const fetchClases = async (filoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      const clasesData = response.data;\n\n\n      // Asignar el nivel \"Clase\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const clase of clasesData) {\n        coloresNiveles[clase.cla_id] = colorNivel; // Color gris para el nivel \"Clase\"\n        coloresItems[clase.cla_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada clase\n      const elementCounts = {};\n\n      for (const clase of clasesData) {\n        const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n        const ordenesData = response.data;\n        elementCounts[clase.cla_id] = ordenesData.length;\n      }\n\n      setClases(clasesData);\n      setClaseElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n\n\n  const fetchOrdenes = async (claseId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      const ordenesData = response.data;\n\n\n      // Asignar el nivel \"Orden\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const orden of ordenesData) {\n        coloresNiveles[orden.ord_id] = colorNivel; // Color gris para el nivel \"Orden\"\n        coloresItems[orden.ord_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada orden\n      const elementCounts = {};\n\n      for (const orden of ordenesData) {\n        const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n        const familiasData = response.data;\n        elementCounts[orden.ord_id] = familiasData.length;\n      }\n\n      setOrdenes(ordenesData);\n      setOrdenElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n\n\n  const fetchFamilias = async (ordenId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      const familiasData = response.data;\n\n      // Asignar el nivel \"Familia\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const familia of familiasData) {\n        coloresNiveles[familia.fam_id] = colorNivel; // Color gris para el nivel \"Familia\"\n        coloresItems[familia.fam_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada familia\n      const elementCounts = {};\n\n      for (const familia of familiasData) {\n        const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n        const generosData = response.data;\n        elementCounts[familia.fam_id] = generosData.length;\n      }\n\n      setFamilias(familiasData);\n      setFamiliaElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n\n  const fetchGeneros = async (familiaId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      const generosData = response.data;\n\n      // Asignar el nivel \"Género\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const genero of generosData) {\n        coloresNiveles[genero.gen_id] = colorNivel; // Color gris para el nivel \"Género\"\n        coloresItems[genero.gen_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n      // Obtener el número de elementos de cada género\n      const elementCounts = {};\n\n      for (const genero of generosData) {\n        const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n        const especiesData = response.data;\n        elementCounts[genero.gen_id] = especiesData.length;\n      }\n\n      setGeneros(generosData);\n      setGeneroElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n\n\n  const fetchEspecies = async (generoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      const especiesData = response.data;\n      // Asignar el nivel \"Especie\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const especie of especiesData) {\n        coloresNiveles[especie.esp_id] = colorNivel; // Color gris para el nivel \"Especie\"\n        coloresItems[especie.esp_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      setEspecies(response.data);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find((reino) => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find((filo) => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find((clase) => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find((orden) => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find((familia) => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find((genero) => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n\n  const renderReinos = () => {\n    return reinos.map((reino) => (\n      <StyledTreeItem\n        key={reino.rei_id}\n        nodeId={`reino-${reino.rei_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[reino.rei_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Reino:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[reino.rei_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{reino.rei_nombre.trim()} ({reinoElementCounts[reino.rei_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleReinoClick(event, `reino-${reino.rei_id}`)}\n        hasData={filos.some((filo) => filo.rei_id === reino.rei_id)}\n      >\n        {/* Renderizar los filos */}\n        {renderFilos(reino.rei_id)}\n      </StyledTreeItem>\n    ));\n  }\n\n  const renderFilos = (reinoId) => {\n    const filosOfReino = filos.filter((filo) => filo.rei_id === reinoId);\n\n    return filosOfReino.map((filo) => (\n      <StyledTreeItem\n        key={filo.fil_id}\n        nodeId={`filo-${filo.fil_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[filo.fil_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Filo:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[filo.fil_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{filo.fil_nombre.trim()} ({filoElementCounts[filo.fil_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleFiloClick(event, `filo-${filo.fil_id}`)}\n        hasData={clases.some((clase) => clase.fil_id === filo.fil_id)}\n      >\n        {/* Renderizar las clases */}\n        {renderClases(filo.fil_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n\n  const renderClases = (filoId) => {\n    const clasesOfFilo = clases.filter((clase) => clase.fil_id === filoId);\n\n    return clasesOfFilo.map((clase) => (\n      <StyledTreeItem\n        key={clase.cla_id}\n        nodeId={`clase-${clase.cla_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[clase.cla_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Clase:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[clase.cla_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{clase.cla_nombre.trim()} ({claseElementCounts[clase.cla_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleClaseClick(event, `clase-${clase.cla_id}`)}\n        hasData={ordenes.some((orden) => orden.cla_id === clase.cla_id)}\n      >\n        {/* Renderizar las órdenes */}\n        {renderOrdenes(clase.cla_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n\n  const renderOrdenes = (claseId) => {\n    const ordenesOfClase = ordenes.filter((orden) => orden.cla_id === claseId);\n\n    return ordenesOfClase.map((orden) => (\n      <StyledTreeItem\n        key={orden.ord_id}\n        nodeId={`orden-${orden.ord_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[orden.ord_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Orden:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[orden.ord_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{orden.ord_nombre.trim()} ({ordenElementCounts[orden.ord_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleOrdenClick(event, `orden-${orden.ord_id}`)}\n        hasData={familias.some((familia) => familia.ord_id === orden.ord_id)}\n      >\n        {/* Renderizar las familias */}\n        {renderFamilias(orden.ord_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderFamilias = (ordenId) => {\n    const familiasOfOrden = familias.filter((familia) => familia.ord_id === ordenId);\n\n    return familiasOfOrden.map((familia) => (\n      <StyledTreeItem\n        key={familia.fam_id}\n        nodeId={`familia-${familia.fam_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[familia.fam_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Familia:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[familia.fam_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{familia.gen_nombre.trim()}  ({familiaElementCounts[familia.fam_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleFamiliaClick(event, `familia-${familia.fam_id}`)}\n        hasData={generos.some((genero) => genero.fam_id === familia.fam_id)}\n      >\n        {/* Renderizar los géneros */}\n        {renderGeneros(familia.fam_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderGeneros = (familiaId) => {\n    const generosOfFamilia = generos.filter((genero) => genero.fam_id === familiaId);\n\n    return generosOfFamilia.map((genero) => (\n      <StyledTreeItem\n        key={genero.gen_id}\n        nodeId={`genero-${genero.gen_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[genero.gen_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Género:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[genero.gen_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{genero.gen_nombre.trim()} ({generoElementCounts[genero.gen_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleGeneroClick(event, `genero-${genero.gen_id}`)}\n        hasData={especies.some((especie) => especie.gen_id === genero.gen_id)}\n      >\n        {/* Renderizar las especies */}\n        {renderEspecies(genero.gen_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderEspecies = (generoId) => {\n    const especiesOfGenero = especies.filter((especie) => especie.gen_id === generoId);\n\n    return especiesOfGenero.map((especie) => (\n      <StyledTreeItem\n        key={especie.esp_id}\n        nodeId={`especie-${especie.esp_id}`}\n        label={\n          <div>\n            <div>\n              <Typography component=\"span\" style={{ color: colorNiveles[especie.esp_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n                Especie:\n              </Typography>{\" \"}\n              <Link\n                to={`https://doi.org/${especie.ref_doi.trim()}`}\n                target=\"_blank\"\n                style={{ color: colorItems[especie.esp_id], fontSize: tamanoItem, fontFamily: tipoLetra }}\n              >\n                {especie.esp_nombre.trim()}\n              </Link>\n            </div>\n            <div className=\"doi-row\">\n              <Typography component=\"span\" style={{ color: colorNiveles[especie.esp_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n                DOI:\n              </Typography>{\" \"}\n              <span className=\"doi-text\" style={{ color: colorItems[especie.esp_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{especie.ref_doi.trim()}</span>\n            </div>\n          </div>\n        }\n      />\n    ));\n\n  };\n\n\n\n\n  return (\n    <Box >\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          {/* Descripción */}\n          <StyledBox>\n            <Typography variant=\"h5\">Descripción</Typography>\n            <Typography variant=\"body1\" fontFamily=\"Helvetica Neue\">\n              Nuestro sitio web es una plataforma diseñada para facilitar la\n              georreferenciación de datos de especies. Con su interfaz fácil de usar\n              y su funcionalidad avanzada, permite a los investigadores,\n              administradores y usuarios administrar y analizar de manera eficiente\n              la información sobre especies.\n            </Typography>\n          </StyledBox>\n        </Grid>\n        <Grid item xs={12}>\n          {/* Contenedor del Árbol y Trabajo académico */}\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <StyledBox>\n                <Typography variant=\"h6\">Árbol filogenético</Typography>\n                <TextField\n                  value={searchText}\n                  onChange={handleSearchChange}\n                  placeholder=\"Buscar...\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  InputProps={{\n                    endAdornment: (\n                      <IconButton>\n                        <SearchIcon />\n                      </IconButton>\n                    )\n                  }}\n                />\n              </StyledBox>\n              {/* Árbol filogenético */}\n              <TreeView\n                defaultCollapseIcon={<ExpandMoreIcon />}\n                defaultExpandIcon={<ChevronRightIcon />}\n                sx={{ height: 240, flexGrow: 1, marginLeft: \"60px\" }}\n              >\n                {/* Renderizar los reinos */}\n                {renderReinos()}\n              </TreeView>\n            </Grid>\n            <Grid item xs={8}>\n              {/* Trabajo académico */}\n              <Box >\n                <StyledBox>\n                  <Typography variant=\"h6\">Investigaciones</Typography>\n                  {/* Contenido del trabajo académico */}\n                  <StyledBox>\n                    <Typography variant=\"h6\">Árbol filogenético</Typography>\n                    <TextField\n                      value={searchTextCountry}\n                      onChange={handleSearchChangeCountry}\n                      placeholder=\"Buscar...\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      fullWidth\n                      InputProps={{\n                        endAdornment: (\n                          <IconButton onClick={handleButtonClick}>\n                            <SearchIcon />\n                          </IconButton>\n                        )\n                      }}\n                    />\n                    \n                  </StyledBox>\n\n                  {showContent && (\n                    <>\n                      {noticias.map((noticia, index) => (\n                        <div key={index}>\n                          <Link to={`https://doi.org/${noticia.ref_doi}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: \"none\" }}>\n                            <Typography variant=\"h6\" style={{ fontSize: \"14px\", fontWeight: \"bold\", color: \"#333333\", fontFamily: \"Helvetica Neue\", textTransform: \"uppercase\", marginBottom: \"20px\" }}>\n                              {noticia.ref_titulo}\n                            </Typography>\n                          </Link>\n                          <Typography variant=\"body1\" style={{ textAlign: \"justify\", fontSize: \"14px\", color: \"#666666\", fontFamily: \"Helvetica Neue\", marginBottom: \"20px\" }}>\n                            {noticia.ref_resumen}\n                          </Typography>\n                        </div>\n                      ))}\n                    </>\n                  )}\n\n                </StyledBox>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n\n      </Grid>\n    </Box>\n  );\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}