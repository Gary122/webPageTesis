{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\mapGeos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { styled } from \"@mui/system\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Typography } from '@mui/material';\nimport bannerImage from '../imagenes/bannerInicio.jpg'; // Asegúrate de cambiar esto a la ruta correcta de tu imagen\nimport { Box, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n// ... (otras definiciones de styled)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledBannerImage = styled('div')({\n  backgroundImage: `url(${bannerImage})`,\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center center',\n  height: '600px',\n  width: '100%',\n  opacity: 0.7,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: '0 20px',\n  color: '#FFFFFF',\n  margin: '0 auto'\n});\n_c = StyledBannerImage;\nconst StyledMapContainer = styled(MapContainer)({\n  height: '400px',\n  width: '100%',\n  margin: '20px 0'\n});\n_c2 = StyledMapContainer;\nexport default function TaskList() {\n  _s();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [provinces, setProvinces] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [isTableVisible, setIsTableVisible] = useState(false);\n  const loadTasks = async province => {\n    const response = await fetch(`http://localhost:4000/consult/${province}`);\n    const data = await response.json();\n    if (data.message) {\n      setOpenDialog(true);\n      setIsTableVisible(false); // Ocultar la tabla si se abre el diálogo\n    } else {\n      setTasks(data);\n      setIsTableVisible(data.length > 0);\n    }\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setIsTableVisible(false); // Ocultar la tabla cuando se cierra el diálogo\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:4000/country').then(response => response.json()).then(data => setCountries(data)).catch(error => console.error('Error:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedCountry !== '') {\n      fetch(`http://localhost:4000/stateByCountry/${selectedCountry}`).then(response => response.json()).then(data => setProvinces(data)).catch(error => console.error('Error:', error));\n    }\n  }, [selectedCountry]);\n  useEffect(() => {\n    if (selectedProvince) {\n      loadTasks(selectedProvince);\n    }\n  }, [selectedProvince]);\n  const handleCountryChange = event => {\n    setSelectedCountry(event.target.value);\n    setProvinces([]);\n    setSelectedProvince('');\n  };\n  const handleProvinceChange = event => {\n    setSelectedProvince(event.target.value);\n  };\n  const handleSearch = () => {\n    if (selectedProvince) {\n      loadTasks(selectedProvince);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledBannerImage, {\n      children: /*#__PURE__*/_jsxDEV(ContentContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: {\n              xs: '100%',\n              sm: '45%'\n            },\n            fontSize: '1.2em',\n            margin: '0 10px',\n            '& p': {\n              textAlign: 'justify'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: {\n              xs: '100%',\n              sm: '45%'\n            },\n            fontSize: '1.2em',\n            margin: '0 10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(StyledForm, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h\",\n              color: \"#000080\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"Fitrar por provincias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"filled\",\n                sx: {\n                  minWidth: 120,\n                  margin: '0 10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"country-select-label\",\n                  children: \"Pa\\xEDs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"country-select-label\",\n                  value: selectedCountry,\n                  onChange: handleCountryChange,\n                  children: countries.map((country, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: country.pas_nombre.trim(),\n                    children: country.pas_nombre.trim()\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"filled\",\n                sx: {\n                  minWidth: 120,\n                  margin: '0 10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"province-select-label\",\n                  children: \"Provincia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"province-select-label\",\n                  value: selectedProvince,\n                  onChange: handleProvinceChange,\n                  children: provinces && provinces.length > 0 ? provinces.map((province, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: province.pro_nombre.trim(),\n                    children: province.pro_nombre.trim()\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 49\n                  }, this)) : /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: \"No hay provincias disponibles\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                  open: openDialog,\n                  onClose: handleCloseDialog,\n                  \"aria-labelledby\": \"alert-dialog-title\",\n                  \"aria-describedby\": \"alert-dialog-description\",\n                  children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                    id: \"alert-dialog-title\",\n                    children: \"Advertencia\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                    children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                      id: \"alert-dialog-description\",\n                      children: \"No se encontraron datos para la provincia seleccionada.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleCloseDialog,\n                      color: \"primary\",\n                      autoFocus: true,\n                      children: \"Aceptar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleSearch,\n                children: \"Buscar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '70%'\n        },\n        children: isTableVisible && (tasks.length > 0 ? /*#__PURE__*/_jsxDEV(StyledTableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            stickyHeader: true,\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"Especie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"Sexo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"Parque Nacional \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"Provincia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"Identificador\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"A\\xF1o identificado\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"Colector\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"Fecha colectado\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"Metodo colectar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableHeaderCell, {\n                  children: \"Destino\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: tasks.map(task => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: task.esp_nombre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: task.esp_sexo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: task.loc_parque_nacional\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: task.pro_nombre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: task.ide_apellido\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: task.ide_anio\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: task.col_apellido\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: task.col_fecha\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: task.col_metodo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: task.col_destino\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 49\n                }, this)]\n              }, task.esp_nombre, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '30%'\n        },\n        children: isTableVisible && tasks.length > 0 && /*#__PURE__*/_jsxDEV(StyledMapContainer, {\n          center: [tasks[0].lat, tasks[0].lng],\n          zoom: 13,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), tasks.map((task, index) => task.lat && task.lng && /*#__PURE__*/_jsxDEV(Marker, {\n            position: [task.lat, task.lng],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: task.esp_nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 69\n              }, this), \"Detalles adicionales aqu\\xED\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 41\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TaskList, \"eEcADIcLEHPLzl1AQTgiYHtydUQ=\");\n_c3 = TaskList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledBannerImage\");\n$RefreshReg$(_c2, \"StyledMapContainer\");\n$RefreshReg$(_c3, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","styled","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Typography","bannerImage","Box","FormControl","InputLabel","Select","MenuItem","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledBannerImage","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","height","width","opacity","display","flexDirection","justifyContent","alignItems","padding","color","margin","_c","StyledMapContainer","_c2","TaskList","_s","openDialog","setOpenDialog","tasks","setTasks","countries","setCountries","selectedCountry","setSelectedCountry","provinces","setProvinces","selectedProvince","setSelectedProvince","isTableVisible","setIsTableVisible","loadTasks","province","response","fetch","data","json","message","length","handleCloseDialog","then","catch","error","console","handleCountryChange","event","target","value","handleProvinceChange","handleSearch","children","ContentContainer","sx","xs","sm","fontSize","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","StyledForm","variant","gutterBottom","component","minWidth","id","labelId","onChange","map","country","index","pas_nombre","trim","pro_nombre","open","onClose","onClick","autoFocus","StyledTableContainer","stickyHeader","StyledTableHeaderCell","task","StyledTableRow","StyledTableCell","scope","esp_nombre","esp_sexo","loc_parque_nacional","ide_apellido","ide_anio","col_apellido","col_fecha","col_metodo","col_destino","center","lat","lng","zoom","url","attribution","position","_c3","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/mapGeos.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { styled } from \"@mui/system\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Typography } from '@mui/material';\r\nimport bannerImage from '../imagenes/bannerInicio.jpg';  // Asegúrate de cambiar esto a la ruta correcta de tu imagen\r\nimport { Box, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\n// ... (otras definiciones de styled)\r\n\r\nconst StyledBannerImage = styled('div')({\r\n    backgroundImage: `url(${bannerImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center center',\r\n    height: '600px',\r\n    width: '100%',\r\n    opacity: 0.7,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '0 20px',\r\n    color: '#FFFFFF',\r\n    margin: '0 auto',\r\n});\r\n\r\n\r\nconst StyledMapContainer = styled(MapContainer)({\r\n    height: '400px',\r\n    width: '100%',\r\n    margin: '20px 0',\r\n});\r\n\r\n\r\nexport default function TaskList() {\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [selectedProvince, setSelectedProvince] = useState('');\r\n    const [isTableVisible, setIsTableVisible] = useState(false);\r\n\r\n\r\n    const loadTasks = async (province) => {\r\n        const response = await fetch(`http://localhost:4000/consult/${province}`);\r\n        const data = await response.json();\r\n        if (data.message) {\r\n            setOpenDialog(true);\r\n            setIsTableVisible(false); // Ocultar la tabla si se abre el diálogo\r\n        } else {\r\n            setTasks(data);\r\n            setIsTableVisible(data.length > 0);\r\n        }\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n        setIsTableVisible(false); // Ocultar la tabla cuando se cierra el diálogo\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/country')\r\n            .then(response => response.json())\r\n            .then(data => setCountries(data))\r\n            .catch(error => console.error('Error:', error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedCountry !== '') {\r\n            fetch(`http://localhost:4000/stateByCountry/${selectedCountry}`)\r\n                .then(response => response.json())\r\n                .then(data => setProvinces(data))\r\n                .catch(error => console.error('Error:', error));\r\n        }\r\n    }, [selectedCountry]);\r\n\r\n    useEffect(() => {\r\n        if (selectedProvince) {\r\n            loadTasks(selectedProvince);\r\n        }\r\n    }, [selectedProvince]);\r\n\r\n    const handleCountryChange = (event) => {\r\n        setSelectedCountry(event.target.value);\r\n        setProvinces([]);\r\n        setSelectedProvince('');\r\n    };\r\n\r\n    const handleProvinceChange = (event) => {\r\n        setSelectedProvince(event.target.value);\r\n    };\r\n\r\n    const handleSearch = () => {\r\n        if (selectedProvince) {\r\n            loadTasks(selectedProvince);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledBannerImage>\r\n                <ContentContainer>\r\n                    <Box sx={{\r\n                        width: { xs: '100%', sm: '45%' }, fontSize: '1.2em', margin: '0 10px', '& p': {\r\n                            textAlign: 'justify'\r\n                        }\r\n                    }}>\r\n                        <h2>Descripción</h2>\r\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n                    </Box>\r\n                    <Box sx={{ width: { xs: '100%', sm: '45%' }, fontSize: '1.2em', margin: '0 10px' }}>\r\n\r\n\r\n                        <StyledForm>\r\n                            <Typography variant=\"h\" color=\"#000080\" gutterBottom component=\"div\">\r\n                                Fitrar por provincias\r\n                            </Typography>\r\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <FormControl variant=\"filled\" sx={{ minWidth: 120, margin: '0 10px' }}>\r\n                                    <InputLabel id=\"country-select-label\">País</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"country-select-label\"\r\n                                        value={selectedCountry}\r\n                                        onChange={handleCountryChange}\r\n                                    >\r\n                                        {/* Aquí es donde mapeas los países para generar los elementos de menú */}\r\n                                        {countries.map((country, index) => (\r\n                                            <MenuItem key={index} value={country.pas_nombre.trim()}>\r\n                                                {country.pas_nombre.trim()}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl variant=\"filled\" sx={{ minWidth: 120, margin: '0 10px' }}>\r\n                                    <InputLabel id=\"province-select-label\">Provincia</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"province-select-label\"\r\n                                        value={selectedProvince}\r\n                                        onChange={handleProvinceChange}\r\n                                    >\r\n                                        {/* Y aquí es donde mapeas las provincias para generar los elementos de menú */}\r\n                                        {provinces && provinces.length > 0 ? (\r\n                                            provinces.map((province, index) => (\r\n                                                <MenuItem key={index} value={province.pro_nombre.trim()}>\r\n                                                    {province.pro_nombre.trim()}\r\n                                                </MenuItem>\r\n                                            ))\r\n                                        ) : (\r\n                                            <MenuItem value=\"\">No hay provincias disponibles</MenuItem>\r\n                                        )}\r\n                                    </Select>\r\n                                    <Dialog\r\n                                        open={openDialog}\r\n                                        onClose={handleCloseDialog}\r\n                                        aria-labelledby=\"alert-dialog-title\"\r\n                                        aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                        <DialogTitle id=\"alert-dialog-title\">{\"Advertencia\"}</DialogTitle>\r\n                                        <DialogContent>\r\n                                            <DialogContentText id=\"alert-dialog-description\">\r\n                                                No se encontraron datos para la provincia seleccionada.\r\n                                            </DialogContentText>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                            <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n                                                Aceptar\r\n                                            </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n\r\n                                </FormControl>\r\n                                <Button variant=\"contained\" onClick={handleSearch}>Buscar</Button>\r\n                            </Box>\r\n\r\n                        </StyledForm>\r\n                    </Box>\r\n                </ContentContainer>\r\n            </StyledBannerImage>\r\n            <ContentContainer>\r\n                <Box sx={{ width: '70%' }}>\r\n                    {isTableVisible && (\r\n                        tasks.length > 0 ? (\r\n                            <StyledTableContainer component={Paper}>\r\n                                <Table aria-label=\"simple table\" stickyHeader>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <StyledTableHeaderCell>Especie</StyledTableHeaderCell>\r\n                                            <StyledTableHeaderCell>Sexo</StyledTableHeaderCell>\r\n                                            <StyledTableHeaderCell>Parque Nacional </StyledTableHeaderCell>\r\n                                            <StyledTableHeaderCell>Provincia</StyledTableHeaderCell>\r\n                                            <StyledTableHeaderCell>Identificador</StyledTableHeaderCell>\r\n                                            <StyledTableHeaderCell>Año identificado</StyledTableHeaderCell>\r\n                                            <StyledTableHeaderCell>Colector</StyledTableHeaderCell>\r\n                                            <StyledTableHeaderCell>Fecha colectado</StyledTableHeaderCell>\r\n                                            <StyledTableHeaderCell>Metodo colectar</StyledTableHeaderCell>\r\n                                            <StyledTableHeaderCell>Destino</StyledTableHeaderCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {tasks.map((task) => (\r\n                                            <StyledTableRow key={task.esp_nombre}>\r\n                                                <StyledTableCell component=\"th\" scope=\"row\">{task.esp_nombre}</StyledTableCell>\r\n                                                <StyledTableCell>{task.esp_sexo}</StyledTableCell>\r\n                                                <StyledTableCell>{task.loc_parque_nacional}</StyledTableCell>\r\n                                                <StyledTableCell>{task.pro_nombre}</StyledTableCell>\r\n                                                <StyledTableCell>{task.ide_apellido}</StyledTableCell>\r\n                                                <StyledTableCell>{task.ide_anio}</StyledTableCell>\r\n                                                <StyledTableCell>{task.col_apellido}</StyledTableCell>\r\n                                                <StyledTableCell>{task.col_fecha}</StyledTableCell>\r\n                                                <StyledTableCell>{task.col_metodo}</StyledTableCell>\r\n                                                <StyledTableCell>{task.col_destino}</StyledTableCell>\r\n                                            </StyledTableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </StyledTableContainer>\r\n                        ) : (\r\n                            <Typography variant=\"h6\" color=\"error\"></Typography>\r\n                        )\r\n                    )}\r\n                </Box>\r\n                <Box sx={{ width: '30%' }}>\r\n                    {isTableVisible && tasks.length > 0 && (\r\n                        <StyledMapContainer\r\n                            center={[tasks[0].lat, tasks[0].lng]}\r\n                            zoom={13}\r\n                        >\r\n                            <TileLayer\r\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            />\r\n                            {tasks.map((task, index) =>\r\n                                task.lat && task.lng && (\r\n                                    <Marker key={index} position={[task.lat, task.lng]}>\r\n                                        <Popup>\r\n                                            <b>{task.esp_nombre}</b><br />\r\n                                            Detalles adicionales aquí\r\n                                        </Popup>\r\n                                    </Marker>\r\n                                )\r\n                            )}\r\n                        </StyledMapContainer>\r\n                    )}\r\n                </Box>\r\n            </ContentContainer>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}