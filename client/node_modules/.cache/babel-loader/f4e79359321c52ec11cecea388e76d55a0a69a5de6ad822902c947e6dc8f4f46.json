{"ast":null,"code":"import * as React from 'react';\nimport { Consumer as SettingsConsumer, Provider as SettingsProvider } from '../../core/settings';\nimport { ThemeProvider, withInternalTheme } from '../../core/theming';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext } from './PortalHost';\n/**\n * Portal allows rendering a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](PortalHost) component to be rendered somewhere in the parent tree.\n * Note that if you're using the `Provider` component, this already includes a `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Portal extends React.Component {\n  // @component ./PortalHost.tsx\n  static Host = PortalHost;\n  render() {\n    const {\n      children,\n      theme\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SettingsConsumer, null, settings => /*#__PURE__*/React.createElement(PortalContext.Consumer, null, manager => /*#__PURE__*/React.createElement(PortalConsumer, {\n      manager: manager\n    }, /*#__PURE__*/React.createElement(SettingsProvider, {\n      value: settings\n    }, /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme\n    }, children)))));\n  }\n}\nexport default withInternalTheme(Portal);","map":{"version":3,"names":["React","Consumer","SettingsConsumer","Provider","SettingsProvider","ThemeProvider","withInternalTheme","PortalConsumer","PortalHost","PortalContext","Portal","Component","Host","render","children","theme","props","createElement","settings","manager","value"],"sources":["C:\\Users\\Cristobal\\Desktop\\proyectoTesis\\client\\node_modules\\react-native-paper\\src\\components\\Portal\\Portal.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { InternalTheme } from 'src/types';\n\nimport {\n  Consumer as SettingsConsumer,\n  Provider as SettingsProvider,\n} from '../../core/settings';\nimport { ThemeProvider, withInternalTheme } from '../../core/theming';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext, PortalMethods } from './PortalHost';\n\nexport type Props = {\n  /**\n   * Content of the `Portal`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * Portal allows rendering a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](PortalHost) component to be rendered somewhere in the parent tree.\n * Note that if you're using the `Provider` component, this already includes a `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Portal extends React.Component<Props> {\n  // @component ./PortalHost.tsx\n  static Host = PortalHost;\n\n  render() {\n    const { children, theme } = this.props;\n\n    return (\n      <SettingsConsumer>\n        {(settings) => (\n          <PortalContext.Consumer>\n            {(manager) => (\n              <PortalConsumer manager={manager as PortalMethods}>\n                <SettingsProvider value={settings}>\n                  {/* @ts-expect-error check @callstack/react-theme-provider's children prop */}\n                  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n                </SettingsProvider>\n              </PortalConsumer>\n            )}\n          </PortalContext.Consumer>\n        )}\n      </SettingsConsumer>\n    );\n  }\n}\n\nexport default withInternalTheme(Portal);\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B,SACEC,QAAQ,IAAIC,gBAAgB,EAC5BC,QAAQ,IAAIC,gBAAgB,QACvB,qBAAqB;AAC5B,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,oBAAoB;AACrE,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,UAAU,IAAIC,aAAa,QAAuB,cAAc;AAavE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,SAASV,KAAK,CAACW,SAAS,CAAQ;EAC1C;EACA,OAAOC,IAAI,GAAGJ,UAAU;EAExBK,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC,QAAQ;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAEtC,oBACEhB,KAAA,CAAAiB,aAAA,CAACf,gBAAgB,QACbgB,QAAQ,iBACRlB,KAAA,CAAAiB,aAAA,CAACR,aAAa,CAACR,QAAQ,QACnBkB,OAAO,iBACPnB,KAAA,CAAAiB,aAAA,CAACV,cAAc;MAACY,OAAO,EAAEA;IAAyB,gBAChDnB,KAAA,CAAAiB,aAAA,CAACb,gBAAgB;MAACgB,KAAK,EAAEF;IAAS,gBAEhClB,KAAA,CAAAiB,aAAA,CAACZ,aAAa;MAACU,KAAK,EAAEA;IAAM,GAAED,QAAQ,CAAiB,CACtC,CAEtB,CAEJ,CACgB;EAEvB;AACF;AAEA,eAAeR,iBAAiB,CAACI,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}