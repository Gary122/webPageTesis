{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaxonomyTree() {\n  _s();\n  const [treeData, setTreeData] = useState([]);\n  function createTreeNode(id, name, children, level) {\n    return {\n      id: id.toString(),\n      name: name.trim(),\n      children,\n      level\n    };\n  }\n  async function loadFilos(reinoId) {\n    try {\n      const response = await fetch(`http://localhost:4000/filos/${reinoId}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching filos data: ', error);\n      return [];\n    }\n  }\n  async function fetchData() {\n    try {\n      const response = await fetch('http://localhost:4000/reinos');\n      const data = await response.json();\n      const nodes = data.map(item => createTreeNode(item.rei_id, item.rei_nombre, [], 'reino'));\n      setTreeData(nodes);\n    } catch (error) {\n      console.error('Error fetching reinos data: ', error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleNodeToggle = async (event, nodeIds) => {\n    const nodeId = nodeIds[nodeIds.length - 1];\n    const nodeIndex = treeData.findIndex(node => node.id === nodeId);\n    if (nodeIndex !== -1 && !treeData[nodeIndex].children.length) {\n      const updatedTreeData = [...treeData];\n      const node = updatedTreeData[nodeIndex];\n      if (node.id === 'animalia') {\n        const filos = await loadFilos(1);\n        const childNodes = filos.map(filo => createTreeNode(filo.fil_id, filo.fil_nombre, [], 'filo'));\n        node.children = childNodes;\n        setTreeData(updatedTreeData);\n      } else {\n        // Control para los otros reinos\n        console.log('No se despliegan filos para este reino');\n      }\n    }\n  };\n  const renderTree = nodes => {\n    return nodes.map(node => /*#__PURE__*/_jsxDEV(TreeItem, {\n      nodeId: node.id,\n      label: node.name,\n      onToggle: handleNodeToggle,\n      sx: {\n        color: '#000000'\n      } // Cambiar el color de la letra a negro\n      ,\n      children: Array.isArray(node.children) && node.children.length > 0 ? renderTree(node.children) : null\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TreeView, {\n      defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 30\n      }, this),\n      defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }, this),\n      sx: {\n        color: '#000000'\n      } // Cambiar el color de la letra a negro\n      ,\n      children: renderTree(treeData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(TaxonomyTree, \"beijQgCEr4PaHJnyDg4mOCdZI4w=\");\n_c = TaxonomyTree;\nexport default TaxonomyTree;\nvar _c;\n$RefreshReg$(_c, \"TaxonomyTree\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","TreeItem","ExpandMoreIcon","ChevronRightIcon","jsxDEV","_jsxDEV","TaxonomyTree","_s","treeData","setTreeData","createTreeNode","id","name","children","level","toString","trim","loadFilos","reinoId","response","fetch","data","json","error","console","fetchData","nodes","map","item","rei_id","rei_nombre","handleNodeToggle","event","nodeIds","nodeId","length","nodeIndex","findIndex","node","updatedTreeData","filos","childNodes","filo","fil_id","fil_nombre","log","renderTree","label","onToggle","sx","color","Array","isArray","fileName","_jsxFileName","lineNumber","columnNumber","defaultCollapseIcon","defaultExpandIcon","_c","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TreeView from '@mui/lab/TreeView';\nimport TreeItem from '@mui/lab/TreeItem';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\nfunction TaxonomyTree() {\n  const [treeData, setTreeData] = useState([]);\n\n  function createTreeNode(id, name, children, level) {\n    return { id: id.toString(), name: name.trim(), children, level };\n  }\n\n  async function loadFilos(reinoId) {\n    try {\n      const response = await fetch(`http://localhost:4000/filos/${reinoId}`);\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error fetching filos data: ', error);\n      return [];\n    }\n  }\n\n  async function fetchData() {\n    try {\n      const response = await fetch('http://localhost:4000/reinos');\n      const data = await response.json();\n      const nodes = data.map((item) =>\n        createTreeNode(item.rei_id, item.rei_nombre, [], 'reino')\n      );\n      setTreeData(nodes);\n    } catch (error) {\n      console.error('Error fetching reinos data: ', error);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleNodeToggle = async (event, nodeIds) => {\n    const nodeId = nodeIds[nodeIds.length - 1];\n    const nodeIndex = treeData.findIndex((node) => node.id === nodeId);\n    if (nodeIndex !== -1 && !treeData[nodeIndex].children.length) {\n      const updatedTreeData = [...treeData];\n      const node = updatedTreeData[nodeIndex];\n      if (node.id === 'animalia') {\n        const filos = await loadFilos(1);\n        const childNodes = filos.map((filo) =>\n          createTreeNode(filo.fil_id, filo.fil_nombre, [], 'filo')\n        );\n        node.children = childNodes;\n        setTreeData(updatedTreeData);\n      } else {\n        // Control para los otros reinos\n        console.log('No se despliegan filos para este reino');\n      }\n    }\n  };\n\n  const renderTree = (nodes) => {\n    return nodes.map((node) => (\n      <TreeItem\n        key={node.id}\n        nodeId={node.id}\n        label={node.name}\n        onToggle={handleNodeToggle}\n        sx={{ color: '#000000' }} // Cambiar el color de la letra a negro\n      >\n        {Array.isArray(node.children) && node.children.length > 0\n          ? renderTree(node.children)\n          : null}\n      </TreeItem>\n    ));\n  };\n\n  return (\n    <div>\n      <TreeView\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n        sx={{ color: '#000000' }} // Cambiar el color de la letra a negro\n      >\n        {renderTree(treeData)}\n      </TreeView>\n    </div>\n  );\n}\n\nexport default TaxonomyTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}