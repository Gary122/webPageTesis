{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterScreen() {\n  _s();\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const handleRegister = () => {\n    // Implementar lógica de registro\n  };\n  const passwordMatch = password === passwordConfirmation;\n  return /*#__PURE__*/_jsxDEV(SafeAreaView, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Nombre\",\n      value: name,\n      onChangeText: text => setName(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Apellido\",\n      value: surname,\n      onChangeText: text => setSurname(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Correo Electr\\xF3nico\",\n      value: email,\n      onChangeText: text => setEmail(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Contrase\\xF1a\",\n      value: password,\n      secureTextEntry: true,\n      onChangeText: text => setPassword(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Confirmaci\\xF3n de Contrase\\xF1a\",\n      value: passwordConfirmation,\n      secureTextEntry: true,\n      onChangeText: text => setPasswordConfirmation(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HelperText, {\n      type: \"error\",\n      visible: !passwordMatch,\n      children: \"Las contrase\\xF1as no coinciden.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      mode: \"contained\",\n      onPress: handleRegister,\n      disabled: !passwordMatch || !email || !name || !surname || !password,\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterScreen, \"t2xayyxRGg4kV5DmLxF85Min/zc=\");\n_c = RegisterScreen;\nvar _c;\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"names":["React","useState","SafeAreaView","TextInput","Button","HelperText","jsxDEV","_jsxDEV","RegisterScreen","_s","name","setName","surname","setSurname","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","handleRegister","passwordMatch","children","label","value","onChangeText","text","fileName","_jsxFileName","lineNumber","columnNumber","secureTextEntry","type","visible","mode","onPress","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { TextInput, Button, HelperText } from 'react-native-paper';\n\nexport default function RegisterScreen() {\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n\n  const handleRegister = () => {\n    // Implementar lógica de registro\n  };\n\n  const passwordMatch = password === passwordConfirmation;\n\n  return (\n    <SafeAreaView>\n      <TextInput\n        label='Nombre'\n        value={name}\n        onChangeText={text => setName(text)}\n      />\n      <TextInput\n        label='Apellido'\n        value={surname}\n        onChangeText={text => setSurname(text)}\n      />\n      <TextInput\n        label='Correo Electrónico'\n        value={email}\n        onChangeText={text => setEmail(text)}\n      />\n      <TextInput\n        label='Contraseña'\n        value={password}\n        secureTextEntry\n        onChangeText={text => setPassword(text)}\n      />\n      <TextInput\n        label='Confirmación de Contraseña'\n        value={passwordConfirmation}\n        secureTextEntry\n        onChangeText={text => setPasswordConfirmation(text)}\n      />\n      <HelperText type=\"error\" visible={!passwordMatch}>\n        Las contraseñas no coinciden.\n      </HelperText>\n      <Button mode=\"contained\" onPress={handleRegister} disabled={!passwordMatch || !email || !name || !surname || !password}>\n        Registrarse\n      </Button>\n    </SafeAreaView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}