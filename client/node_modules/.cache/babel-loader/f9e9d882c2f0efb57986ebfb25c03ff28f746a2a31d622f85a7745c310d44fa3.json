{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristobal\\\\Desktop\\\\proyectoTesis\\\\client\\\\src\\\\components\\\\Inicio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton, Button } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Autocomplete } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTreeItem = styled(TreeItem)(_ref => {\n  let {\n    rootNode,\n    hasData\n  } = _ref;\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\"\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\"\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\"\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\"\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\"\n    }\n  };\n});\n_c = StyledTreeItem;\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"600px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n_c2 = StyledBox;\nexport default function FileSystemNavigator() {\n  _s();\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchTextCountry, setSearchTextCountry] = useState(\"\");\n  const [showContent, setShowContent] = useState(false);\n  const handleButtonClickNoticias = async () => {\n    if (selectedCountry) {\n      setNoticias([]);\n      try {\n        const countryParam = selectedCountry.value.trim();\n        const url = `http://localhost:4000/noticias/${countryParam}`;\n        const response = await axios.get(url);\n        const noticiasData = response.data;\n        if (noticiasData.length === 0) {\n          setNoInvestigacionesMessage(\"Por el momento no hay Investigaciones en nuestro sistema con el país seleccionado.\");\n        } else {\n          setNoticias(noticiasData);\n          setShowContent(!showContent);\n          setNoInvestigacionesMessage(\"\"); // Limpiar el mensaje si hay investigaciones\n        }\n      } catch (error) {\n        console.error(\"Error fetching noticias data: \", error);\n      }\n    }\n  };\n  const handleSearchChange = event => {\n    setSearchText(event.target.value);\n  };\n  const handleSearchChangeCountry = event => {\n    setSearchTextCountry(event.target.value);\n  };\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n  const [noticias, setNoticias] = useState([]);\n  const [countryOptions, setCountryOptions] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [noInvestigacionesMessage, setNoInvestigacionesMessage] = useState(\"\");\n  const colorNivel = \"#00000073\";\n  const colorItem = \"#1890FF\";\n  const tamanoNivel = \"14px\";\n  const tamanoItem = \"12px\";\n  const tipoLetra = \"Helvetica Neue\";\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Asignar el nivel \"Reino\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const reino of reinosData) {\n        coloresNiveles[reino.rei_id] = colorNivel; // Color gris para el nivel \"Reino\"\n        coloresItems[reino.rei_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada reino\n      const elementCounts = {};\n      for (const reino of reinosData) {\n        const response = await axios.get(`http://localhost:4000/filos/${reino.rei_id}`);\n        const filosData = response.data;\n        elementCounts[reino.rei_id] = filosData.length;\n      }\n      setReinos(reinosData);\n      setReinoElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n  const fetchFilos = async reinoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n      // Asignar el nivel \"Filo\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const filo of filosData) {\n        coloresNiveles[filo.fil_id] = colorNivel;\n        coloresItems[filo.fil_id] = colorItem;\n      }\n\n      // Obtener el número de elementos de cada filo\n      const elementCounts = {};\n      for (const filo of filosData) {\n        const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n        const clasesData = response.data;\n        elementCounts[filo.fil_id] = clasesData.length;\n      }\n      setFilos(filosData);\n      setFiloElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n  const fetchClases = async filoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      const clasesData = response.data;\n\n      // Asignar el nivel \"Clase\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const clase of clasesData) {\n        coloresNiveles[clase.cla_id] = colorNivel; // Color gris para el nivel \"Clase\"\n        coloresItems[clase.cla_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada clase\n      const elementCounts = {};\n      for (const clase of clasesData) {\n        const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n        const ordenesData = response.data;\n        elementCounts[clase.cla_id] = ordenesData.length;\n      }\n      setClases(clasesData);\n      setClaseElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n  const fetchOrdenes = async claseId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      const ordenesData = response.data;\n\n      // Asignar el nivel \"Orden\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const orden of ordenesData) {\n        coloresNiveles[orden.ord_id] = colorNivel; // Color gris para el nivel \"Orden\"\n        coloresItems[orden.ord_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada orden\n      const elementCounts = {};\n      for (const orden of ordenesData) {\n        const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n        const familiasData = response.data;\n        elementCounts[orden.ord_id] = familiasData.length;\n      }\n      setOrdenes(ordenesData);\n      setOrdenElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n  const fetchFamilias = async ordenId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      const familiasData = response.data;\n\n      // Asignar el nivel \"Familia\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const familia of familiasData) {\n        coloresNiveles[familia.fam_id] = colorNivel; // Color gris para el nivel \"Familia\"\n        coloresItems[familia.fam_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada familia\n      const elementCounts = {};\n      for (const familia of familiasData) {\n        const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n        const generosData = response.data;\n        elementCounts[familia.fam_id] = generosData.length;\n      }\n      setFamilias(familiasData);\n      setFamiliaElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n  const fetchGeneros = async familiaId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      const generosData = response.data;\n\n      // Asignar el nivel \"Género\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const genero of generosData) {\n        coloresNiveles[genero.gen_id] = colorNivel; // Color gris para el nivel \"Género\"\n        coloresItems[genero.gen_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n      // Obtener el número de elementos de cada género\n      const elementCounts = {};\n      for (const genero of generosData) {\n        const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n        const especiesData = response.data;\n        elementCounts[genero.gen_id] = especiesData.length;\n      }\n      setGeneros(generosData);\n      setGeneroElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n  const fetchEspecies = async generoId => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      const especiesData = response.data;\n      // Asignar el nivel \"Especie\" y su color correspondiente\n      const coloresNiveles = {\n        ...colorNiveles\n      };\n      const coloresItems = {\n        ...colorItems\n      };\n      for (const especie of especiesData) {\n        coloresNiveles[especie.esp_id] = colorNivel; // Color gris para el nivel \"Especie\"\n        coloresItems[especie.esp_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      setEspecies(response.data);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n  const fetchCountries = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/country');\n      const countriesData = response.data.map(country => ({\n        label: country.pas_nombre.trim(),\n        value: country.pas_nombre.trim()\n      }));\n      setCountryOptions(countriesData);\n    } catch (error) {\n      console.error('Error fetching countries data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n  const handleCountryChange = (event, value) => {\n    setSelectedCountry(value);\n  };\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find(reino => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find(filo => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find(clase => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find(orden => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find(familia => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find(genero => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n  const renderReinos = () => {\n    return reinos.map(reino => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `reino-${reino.rei_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[reino.rei_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Reino:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[reino.rei_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [reino.rei_nombre.trim(), \" (\", reinoElementCounts[reino.rei_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleReinoClick(event, `reino-${reino.rei_id}`),\n      hasData: filos.some(filo => filo.rei_id === reino.rei_id),\n      children: renderFilos(reino.rei_id)\n    }, reino.rei_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFilos = reinoId => {\n    const filosOfReino = filos.filter(filo => filo.rei_id === reinoId);\n    return filosOfReino.map(filo => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `filo-${filo.fil_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[filo.fil_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Filo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[filo.fil_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [filo.fil_nombre.trim(), \" (\", filoElementCounts[filo.fil_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleFiloClick(event, `filo-${filo.fil_id}`),\n      hasData: clases.some(clase => clase.fil_id === filo.fil_id),\n      children: renderClases(filo.fil_id)\n    }, filo.fil_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this));\n  };\n  const renderClases = filoId => {\n    const clasesOfFilo = clases.filter(clase => clase.fil_id === filoId);\n    return clasesOfFilo.map(clase => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `clase-${clase.cla_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[clase.cla_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Clase:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[clase.cla_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [clase.cla_nombre.trim(), \" (\", claseElementCounts[clase.cla_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleClaseClick(event, `clase-${clase.cla_id}`),\n      hasData: ordenes.some(orden => orden.cla_id === clase.cla_id),\n      children: renderOrdenes(clase.cla_id)\n    }, clase.cla_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this));\n  };\n  const renderOrdenes = claseId => {\n    const ordenesOfClase = ordenes.filter(orden => orden.cla_id === claseId);\n    return ordenesOfClase.map(orden => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `orden-${orden.ord_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[orden.ord_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Orden:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[orden.ord_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [orden.ord_nombre.trim(), \" (\", ordenElementCounts[orden.ord_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleOrdenClick(event, `orden-${orden.ord_id}`),\n      hasData: familias.some(familia => familia.ord_id === orden.ord_id),\n      children: renderFamilias(orden.ord_id)\n    }, orden.ord_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this));\n  };\n  const renderFamilias = ordenId => {\n    const familiasOfOrden = familias.filter(familia => familia.ord_id === ordenId);\n    return familiasOfOrden.map(familia => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `familia-${familia.fam_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[familia.fam_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"Familia:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[familia.fam_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [familia.gen_nombre.trim(), \"  (\", familiaElementCounts[familia.fam_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleFamiliaClick(event, `familia-${familia.fam_id}`),\n      hasData: generos.some(genero => genero.fam_id === familia.fam_id),\n      children: renderGeneros(familia.fam_id)\n    }, familia.fam_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this));\n  };\n  const renderGeneros = familiaId => {\n    const generosOfFamilia = generos.filter(genero => genero.fam_id === familiaId);\n    return generosOfFamilia.map(genero => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `genero-${genero.gen_id}`,\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          style: {\n            color: colorNiveles[genero.gen_id],\n            fontSize: tamanoNivel,\n            fontFamily: tipoLetra\n          },\n          children: \"G\\xE9nero:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorItems[genero.gen_id],\n            fontSize: tamanoItem,\n            fontFamily: tipoLetra\n          },\n          children: [genero.gen_nombre.trim(), \" (\", generoElementCounts[genero.gen_id] || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      onClick: event => handleGeneroClick(event, `genero-${genero.gen_id}`),\n      hasData: especies.some(especie => especie.gen_id === genero.gen_id),\n      children: renderEspecies(genero.gen_id)\n    }, genero.gen_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this));\n  };\n  const renderEspecies = generoId => {\n    const especiesOfGenero = especies.filter(especie => especie.gen_id === generoId);\n    return especiesOfGenero.map(especie => /*#__PURE__*/_jsxDEV(StyledTreeItem, {\n      nodeId: `especie-${especie.esp_id}`,\n      label: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            style: {\n              color: colorNiveles[especie.esp_id],\n              fontSize: tamanoNivel,\n              fontFamily: tipoLetra\n            },\n            children: \"Especie:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `https://doi.org/${especie.ref_doi.trim()}`,\n            target: \"_blank\",\n            style: {\n              color: colorItems[especie.esp_id],\n              fontSize: tamanoItem,\n              fontFamily: tipoLetra\n            },\n            children: especie.esp_nombre.trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doi-row\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            style: {\n              color: colorNiveles[especie.esp_id],\n              fontSize: tamanoNivel,\n              fontFamily: tipoLetra\n            },\n            children: \"DOI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"doi-text\",\n            style: {\n              color: colorItems[especie.esp_id],\n              fontSize: tamanoItem,\n              fontFamily: tipoLetra\n            },\n            children: especie.ref_doi.trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this)\n    }, especie.esp_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(StyledBox, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            fontFamily: \"Helvetica Neue\",\n            children: \"Nuestro sitio web es una plataforma dise\\xF1ada para facilitar la georreferenciaci\\xF3n de datos de especies. Con su interfaz f\\xE1cil de usar y su funcionalidad avanzada, permite a los investigadores, administradores y usuarios administrar y analizar de manera eficiente la informaci\\xF3n sobre especies.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(StyledBox, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"\\xC1rbol Filogen\\xE9tico\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: searchText,\n                onChange: handleSearchChange,\n                placeholder: \"Buscar...\",\n                variant: \"outlined\",\n                size: \"small\",\n                fullWidth: true,\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 678,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 23\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TreeView, {\n              defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 38\n              }, this),\n              defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 36\n              }, this),\n              sx: {\n                height: 240,\n                flexGrow: 1,\n                marginLeft: \"60px\"\n              },\n              children: renderReinos()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(StyledBox, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Investigaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  value: selectedCountry,\n                  onChange: handleCountryChange,\n                  options: countryOptions,\n                  getOptionLabel: option => option.label,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    ...params,\n                    placeholder: \"Seleccionar Pa\\xEDs\",\n                    variant: \"outlined\",\n                    size: \"small\",\n                    fullWidth: true,\n                    InputProps: {\n                      ...params.InputProps,\n                      endAdornment: /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [params.InputProps.endAdornment, /*#__PURE__*/_jsxDEV(IconButton, {\n                          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                            onClick: handleButtonClickNoticias\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 719,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 718,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 707,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"error\",\n                  children: noInvestigacionesMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 19\n                }, this), showContent && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: noticias.map((noticia, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      to: `https://doi.org/${noticia.ref_doi}`,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      style: {\n                        textDecoration: \"none\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h6\",\n                        style: {\n                          fontSize: \"14px\",\n                          fontWeight: \"bold\",\n                          color: \"#333333\",\n                          fontFamily: \"Helvetica Neue\",\n                          textTransform: \"uppercase\",\n                          marginBottom: \"20px\"\n                        },\n                        children: noticia.ref_titulo\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 736,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 735,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      style: {\n                        textAlign: \"justify\",\n                        fontSize: \"14px\",\n                        color: \"#666666\",\n                        fontFamily: \"Helvetica Neue\",\n                        marginBottom: \"20px\"\n                      },\n                      children: noticia.ref_resumen\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 740,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 647,\n    columnNumber: 5\n  }, this);\n}\n_s(FileSystemNavigator, \"8caXZZauI4Q1jXkmY/Re+37r4Vo=\");\n_c3 = FileSystemNavigator;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTreeItem\");\n$RefreshReg$(_c2, \"StyledBox\");\n$RefreshReg$(_c3, \"FileSystemNavigator\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","styled","ExpandMoreIcon","ChevronRightIcon","TreeItem","treeItemClasses","Grid","Typography","Box","TextField","IconButton","Button","SearchIcon","axios","Link","Autocomplete","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledTreeItem","_ref","rootNode","hasData","borderColor","nivelColor","itemColor","position","pointerEvents","content","width","left","top","borderBottom","group","marginLeft","paddingLeft","borderLeft","color","fontWeight","fontSize","whiteSpace","cursor","userSelect","display","_c","StyledBox","margin","textAlign","fontFamily","maxWidth","_c2","FileSystemNavigator","_s","searchText","setSearchText","searchTextCountry","setSearchTextCountry","showContent","setShowContent","handleButtonClickNoticias","selectedCountry","setNoticias","countryParam","value","trim","url","response","get","noticiasData","data","length","setNoInvestigacionesMessage","error","console","handleSearchChange","event","target","handleSearchChangeCountry","colorNiveles","setColorNiveles","colorItems","setColorItems","reinos","setReinos","filos","setFilos","clases","setClases","ordenes","setOrdenes","familias","setFamilias","generos","setGeneros","especies","setEspecies","reinoElementCounts","setReinoElementCounts","filoElementCounts","setFiloElementCounts","claseElementCounts","setClaseElementCounts","ordenElementCounts","setOrdenElementCounts","familiaElementCounts","setFamiliaElementCounts","generoElementCounts","setGeneroElementCounts","noticias","countryOptions","setCountryOptions","setSelectedCountry","noInvestigacionesMessage","colorNivel","colorItem","tamanoNivel","tamanoItem","tipoLetra","fetchReinos","reinosData","coloresNiveles","coloresItems","reino","rei_id","elementCounts","filosData","fetchFilos","reinoId","filo","fil_id","clasesData","fetchClases","filoId","clase","cla_id","ordenesData","fetchOrdenes","claseId","orden","ord_id","familiasData","fetchFamilias","ordenId","familia","fam_id","generosData","fetchGeneros","familiaId","genero","gen_id","especiesData","fetchEspecies","generoId","especie","esp_id","fetchCountries","countriesData","map","country","label","pas_nombre","handleCountryChange","handleReinoClick","nodeId","split","find","toString","handleFiloClick","handleClaseClick","handleOrdenClick","handleFamiliaClick","handleGeneroClick","renderReinos","children","component","style","fileName","_jsxFileName","lineNumber","columnNumber","rei_nombre","onClick","some","renderFilos","filosOfReino","filter","fil_nombre","renderClases","clasesOfFilo","cla_nombre","renderOrdenes","ordenesOfClase","ord_nombre","renderFamilias","familiasOfOrden","gen_nombre","renderGeneros","generosOfFamilia","renderEspecies","especiesOfGenero","to","ref_doi","esp_nombre","className","container","spacing","item","xs","variant","onChange","placeholder","size","fullWidth","InputProps","endAdornment","defaultCollapseIcon","defaultExpandIcon","sx","height","flexGrow","options","getOptionLabel","option","renderInput","params","noticia","index","rel","textDecoration","textTransform","marginBottom","ref_titulo","ref_resumen","_c3","$RefreshReg$"],"sources":["C:/Users/Cristobal/Desktop/proyectoTesis/client/src/components/Inicio.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem, { treeItemClasses } from \"@mui/lab/TreeItem\";\nimport { Grid, Typography, Box, TextField, IconButton, Button } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { Autocomplete } from '@mui/lab';\n\nconst StyledTreeItem = styled(TreeItem)(({ rootNode, hasData }) => {\n  const borderColor = \"gray\";\n  const nivelColor = \"#808080\"; // Color para el nivel \"Reino\"\n  const itemColor = \"#1890FF\"; // Color para el nombre del elemento\n\n  return {\n    position: \"relative\",\n    \"&:before\": {\n      pointerEvents: \"none\",\n      content: '\"\"',\n      position: \"absolute\",\n      width: 32,\n      left: -23,\n      top: 12,\n      borderBottom: !rootNode ? `1px solid ${borderColor}` : \"none\",\n    },\n    [`& .${treeItemClasses.group}`]: {\n      marginLeft: 16,\n      paddingLeft: 23,\n      borderLeft: `1px solid ${borderColor}`,\n    },\n    \"& .MuiTreeItem-content\": {\n      color: nivelColor,\n      fontWeight: hasData ? \"bold\" : \"inherit\",\n      fontSize: \"30px\",\n    },\n    \"& .MuiTreeItem-iconContainer\": {\n      color: itemColor,\n    },\n    \"& .MuiTreeItem-label\": {\n      whiteSpace: \"nowrap\",\n    },\n    \"& .doi-row\": {\n      cursor: \"text\",\n      userSelect: \"text\",\n    },\n    \"& .doi-text\": {\n      display: \"inline-block\",\n    },\n  };\n});\n\nconst StyledBox = styled(Box)({\n  width: \"90%\",\n  fontSize: \"1.2em\",\n  margin: \"20px auto\",\n  textAlign: \"center\",\n  \"& p\": {\n    textAlign: \"justify\",\n    color: \"#000000\",\n    fontFamily: \"Helvetica Neue\",\n    margin: \"20px 10px\"\n  },\n  maxWidth: \"600px\",\n  color: \"#000000\" // Cambia el color del texto a negro\n});\n\nexport default function FileSystemNavigator() {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchTextCountry, setSearchTextCountry] = useState(\"\");\n\n  const [showContent, setShowContent] = useState(false);\n\n  const handleButtonClickNoticias = async () => {\n    if (selectedCountry) {\n      setNoticias([]);\n      try {\n        const countryParam = selectedCountry.value.trim();\n        const url = `http://localhost:4000/noticias/${countryParam}`;\n        const response = await axios.get(url);\n        const noticiasData = response.data;\n\n        if (noticiasData.length === 0) {\n          setNoInvestigacionesMessage(\n            \"Por el momento no hay Investigaciones en nuestro sistema con el país seleccionado.\"\n          );\n        } else {\n          setNoticias(noticiasData);\n          setShowContent(!showContent);\n          setNoInvestigacionesMessage(\"\"); // Limpiar el mensaje si hay investigaciones\n        }\n      } catch (error) {\n        console.error(\"Error fetching noticias data: \", error);\n      }\n    }\n  };\n\n\n\n\n  const handleSearchChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  const handleSearchChangeCountry = (event) => {\n    setSearchTextCountry(event.target.value);\n  };\n\n  const [colorNiveles, setColorNiveles] = useState({});\n  const [colorItems, setColorItems] = useState({});\n\n\n\n  const [reinos, setReinos] = useState([]);\n  const [filos, setFilos] = useState([]);\n  const [clases, setClases] = useState([]);\n  const [ordenes, setOrdenes] = useState([]);\n  const [familias, setFamilias] = useState([]);\n  const [generos, setGeneros] = useState([]);\n  const [especies, setEspecies] = useState([]);\n\n  const [reinoElementCounts, setReinoElementCounts] = useState({});\n  const [filoElementCounts, setFiloElementCounts] = useState({});\n  const [claseElementCounts, setClaseElementCounts] = useState({});\n  const [ordenElementCounts, setOrdenElementCounts] = useState({});\n  const [familiaElementCounts, setFamiliaElementCounts] = useState({});\n  const [generoElementCounts, setGeneroElementCounts] = useState({});\n\n  const [noticias, setNoticias] = useState([]);\n\n  const [countryOptions, setCountryOptions] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [noInvestigacionesMessage, setNoInvestigacionesMessage] = useState(\"\");\n\n\n  const colorNivel = \"#00000073\"\n  const colorItem = \"#1890FF\"\n  const tamanoNivel = \"14px\"\n  const tamanoItem = \"12px\"\n  const tipoLetra = \"Helvetica Neue\"\n\n\n  useEffect(() => {\n    // Obtener los reinos al cargar el componente\n    fetchReinos();\n  }, []);\n\n  const fetchReinos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/reinos\");\n      const reinosData = response.data;\n\n      // Asignar el nivel \"Reino\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const reino of reinosData) {\n        coloresNiveles[reino.rei_id] = colorNivel; // Color gris para el nivel \"Reino\"\n        coloresItems[reino.rei_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada reino\n      const elementCounts = {};\n\n      for (const reino of reinosData) {\n        const response = await axios.get(`http://localhost:4000/filos/${reino.rei_id}`);\n        const filosData = response.data;\n        elementCounts[reino.rei_id] = filosData.length;\n      }\n\n\n      setReinos(reinosData);\n      setReinoElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching reinos data: \", error);\n    }\n  };\n\n  const fetchFilos = async (reinoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/filos/${reinoId}`);\n      const filosData = response.data;\n\n\n      // Asignar el nivel \"Filo\" y su color correspondiente\n      const coloresNiveles = {};\n      const coloresItems = {};\n      for (const filo of filosData) {\n        coloresNiveles[filo.fil_id] = colorNivel;\n        coloresItems[filo.fil_id] = colorItem;\n      }\n\n\n      // Obtener el número de elementos de cada filo\n      const elementCounts = {};\n\n      for (const filo of filosData) {\n        const response = await axios.get(`http://localhost:4000/clases/${filo.fil_id}`);\n        const clasesData = response.data;\n        elementCounts[filo.fil_id] = clasesData.length;\n      }\n\n      setFilos(filosData);\n      setFiloElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching filos data: \", error);\n    }\n  };\n\n\n  const fetchClases = async (filoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/clases/${filoId}`);\n      const clasesData = response.data;\n\n\n      // Asignar el nivel \"Clase\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const clase of clasesData) {\n        coloresNiveles[clase.cla_id] = colorNivel; // Color gris para el nivel \"Clase\"\n        coloresItems[clase.cla_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada clase\n      const elementCounts = {};\n\n      for (const clase of clasesData) {\n        const response = await axios.get(`http://localhost:4000/ordenes/${clase.cla_id}`);\n        const ordenesData = response.data;\n        elementCounts[clase.cla_id] = ordenesData.length;\n      }\n\n      setClases(clasesData);\n      setClaseElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching clases data: \", error);\n    }\n  };\n\n\n  const fetchOrdenes = async (claseId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/ordenes/${claseId}`);\n      const ordenesData = response.data;\n\n\n      // Asignar el nivel \"Orden\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const orden of ordenesData) {\n        coloresNiveles[orden.ord_id] = colorNivel; // Color gris para el nivel \"Orden\"\n        coloresItems[orden.ord_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada orden\n      const elementCounts = {};\n\n      for (const orden of ordenesData) {\n        const response = await axios.get(`http://localhost:4000/familias/${orden.ord_id}`);\n        const familiasData = response.data;\n        elementCounts[orden.ord_id] = familiasData.length;\n      }\n\n      setOrdenes(ordenesData);\n      setOrdenElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching ordenes data: \", error);\n    }\n  };\n\n\n  const fetchFamilias = async (ordenId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/familias/${ordenId}`);\n      const familiasData = response.data;\n\n      // Asignar el nivel \"Familia\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const familia of familiasData) {\n        coloresNiveles[familia.fam_id] = colorNivel; // Color gris para el nivel \"Familia\"\n        coloresItems[familia.fam_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      // Obtener el número de elementos de cada familia\n      const elementCounts = {};\n\n      for (const familia of familiasData) {\n        const response = await axios.get(`http://localhost:4000/generos/${familia.fam_id}`);\n        const generosData = response.data;\n        elementCounts[familia.fam_id] = generosData.length;\n      }\n\n      setFamilias(familiasData);\n      setFamiliaElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching familias data: \", error);\n    }\n  };\n\n  const fetchGeneros = async (familiaId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/generos/${familiaId}`);\n      const generosData = response.data;\n\n      // Asignar el nivel \"Género\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const genero of generosData) {\n        coloresNiveles[genero.gen_id] = colorNivel; // Color gris para el nivel \"Género\"\n        coloresItems[genero.gen_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n      // Obtener el número de elementos de cada género\n      const elementCounts = {};\n\n      for (const genero of generosData) {\n        const response = await axios.get(`http://localhost:4000/especies/${genero.gen_id}`);\n        const especiesData = response.data;\n        elementCounts[genero.gen_id] = especiesData.length;\n      }\n\n      setGeneros(generosData);\n      setGeneroElementCounts(elementCounts);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching generos data: \", error);\n    }\n  };\n\n\n  const fetchEspecies = async (generoId) => {\n    try {\n      const response = await axios.get(`http://localhost:4000/especies/${generoId}`);\n      const especiesData = response.data;\n      // Asignar el nivel \"Especie\" y su color correspondiente\n      const coloresNiveles = { ...colorNiveles };\n      const coloresItems = { ...colorItems };\n      for (const especie of especiesData) {\n        coloresNiveles[especie.esp_id] = colorNivel; // Color gris para el nivel \"Especie\"\n        coloresItems[especie.esp_id] = colorItem; // Color azul celeste para el nombre del elemento\n      }\n\n      setEspecies(response.data);\n      setColorNiveles(coloresNiveles);\n      setColorItems(coloresItems);\n    } catch (error) {\n      console.error(\"Error fetching especies data: \", error);\n    }\n  };\n\n  const fetchCountries = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/country');\n      const countriesData = response.data.map((country) => ({\n        label: country.pas_nombre.trim(),\n        value: country.pas_nombre.trim()\n      }));\n      setCountryOptions(countriesData);\n    } catch (error) {\n      console.error('Error fetching countries data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n\n  const handleCountryChange = (event, value) => {\n    setSelectedCountry(value);\n  };\n\n  const handleReinoClick = (event, nodeId) => {\n    if (nodeId) {\n      const reinoId = nodeId.split(\"-\")[1];\n      const reino = reinos.find((reino) => reino.rei_id.toString() === reinoId);\n      if (reino) {\n        fetchFilos(reinoId);\n        setClases([]); // Reiniciar las clases cuando se cambia de reino\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFiloClick = (event, nodeId) => {\n    if (nodeId) {\n      const filoId = nodeId.split(\"-\")[1];\n      const filo = filos.find((filo) => filo.fil_id.toString() === filoId);\n      if (filo) {\n        fetchClases(filoId);\n        setOrdenes([]);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleClaseClick = (event, nodeId) => {\n    if (nodeId) {\n      const claseId = nodeId.split(\"-\")[1];\n      const clase = clases.find((clase) => clase.cla_id.toString() === claseId);\n      if (clase) {\n        fetchOrdenes(claseId);\n        setFamilias([]);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleOrdenClick = (event, nodeId) => {\n    if (nodeId) {\n      const ordenId = nodeId.split(\"-\")[1];\n      const orden = ordenes.find((orden) => orden.ord_id.toString() === ordenId);\n      if (orden) {\n        fetchFamilias(ordenId);\n        setGeneros([]);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleFamiliaClick = (event, nodeId) => {\n    if (nodeId) {\n      const familiaId = nodeId.split(\"-\")[1];\n      const familia = familias.find((familia) => familia.fam_id.toString() === familiaId);\n      if (familia) {\n        fetchGeneros(familiaId);\n        setEspecies([]);\n      }\n    }\n  };\n\n  const handleGeneroClick = (event, nodeId) => {\n    if (nodeId) {\n      const generoId = nodeId.split(\"-\")[1];\n      const genero = generos.find((genero) => genero.gen_id.toString() === generoId);\n      if (genero) {\n        fetchEspecies(generoId);\n      }\n    }\n  };\n\n  const renderReinos = () => {\n    return reinos.map((reino) => (\n      <StyledTreeItem\n        key={reino.rei_id}\n        nodeId={`reino-${reino.rei_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[reino.rei_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Reino:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[reino.rei_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{reino.rei_nombre.trim()} ({reinoElementCounts[reino.rei_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleReinoClick(event, `reino-${reino.rei_id}`)}\n        hasData={filos.some((filo) => filo.rei_id === reino.rei_id)}\n      >\n        {/* Renderizar los filos */}\n        {renderFilos(reino.rei_id)}\n      </StyledTreeItem>\n    ));\n  }\n\n  const renderFilos = (reinoId) => {\n    const filosOfReino = filos.filter((filo) => filo.rei_id === reinoId);\n\n    return filosOfReino.map((filo) => (\n      <StyledTreeItem\n        key={filo.fil_id}\n        nodeId={`filo-${filo.fil_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[filo.fil_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Filo:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[filo.fil_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{filo.fil_nombre.trim()} ({filoElementCounts[filo.fil_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleFiloClick(event, `filo-${filo.fil_id}`)}\n        hasData={clases.some((clase) => clase.fil_id === filo.fil_id)}\n      >\n        {/* Renderizar las clases */}\n        {renderClases(filo.fil_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n\n  const renderClases = (filoId) => {\n    const clasesOfFilo = clases.filter((clase) => clase.fil_id === filoId);\n\n    return clasesOfFilo.map((clase) => (\n      <StyledTreeItem\n        key={clase.cla_id}\n        nodeId={`clase-${clase.cla_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[clase.cla_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Clase:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[clase.cla_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{clase.cla_nombre.trim()} ({claseElementCounts[clase.cla_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleClaseClick(event, `clase-${clase.cla_id}`)}\n        hasData={ordenes.some((orden) => orden.cla_id === clase.cla_id)}\n      >\n        {/* Renderizar las órdenes */}\n        {renderOrdenes(clase.cla_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n\n  const renderOrdenes = (claseId) => {\n    const ordenesOfClase = ordenes.filter((orden) => orden.cla_id === claseId);\n\n    return ordenesOfClase.map((orden) => (\n      <StyledTreeItem\n        key={orden.ord_id}\n        nodeId={`orden-${orden.ord_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[orden.ord_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Orden:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[orden.ord_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{orden.ord_nombre.trim()} ({ordenElementCounts[orden.ord_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleOrdenClick(event, `orden-${orden.ord_id}`)}\n        hasData={familias.some((familia) => familia.ord_id === orden.ord_id)}\n      >\n        {/* Renderizar las familias */}\n        {renderFamilias(orden.ord_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderFamilias = (ordenId) => {\n    const familiasOfOrden = familias.filter((familia) => familia.ord_id === ordenId);\n\n    return familiasOfOrden.map((familia) => (\n      <StyledTreeItem\n        key={familia.fam_id}\n        nodeId={`familia-${familia.fam_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[familia.fam_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Familia:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[familia.fam_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{familia.gen_nombre.trim()}  ({familiaElementCounts[familia.fam_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleFamiliaClick(event, `familia-${familia.fam_id}`)}\n        hasData={generos.some((genero) => genero.fam_id === familia.fam_id)}\n      >\n        {/* Renderizar los géneros */}\n        {renderGeneros(familia.fam_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderGeneros = (familiaId) => {\n    const generosOfFamilia = generos.filter((genero) => genero.fam_id === familiaId);\n\n    return generosOfFamilia.map((genero) => (\n      <StyledTreeItem\n        key={genero.gen_id}\n        nodeId={`genero-${genero.gen_id}`}\n        label={\n          <>\n            <Typography component=\"span\" style={{ color: colorNiveles[genero.gen_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n              Género:\n            </Typography>{\" \"}\n            <span style={{ color: colorItems[genero.gen_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{genero.gen_nombre.trim()} ({generoElementCounts[genero.gen_id] || 0})</span>\n          </>\n        }\n        onClick={(event) => handleGeneroClick(event, `genero-${genero.gen_id}`)}\n        hasData={especies.some((especie) => especie.gen_id === genero.gen_id)}\n      >\n        {/* Renderizar las especies */}\n        {renderEspecies(genero.gen_id)}\n      </StyledTreeItem>\n    ));\n  };\n\n\n  const renderEspecies = (generoId) => {\n    const especiesOfGenero = especies.filter((especie) => especie.gen_id === generoId);\n\n    return especiesOfGenero.map((especie) => (\n      <StyledTreeItem\n        key={especie.esp_id}\n        nodeId={`especie-${especie.esp_id}`}\n        label={\n          <div>\n            <div>\n              <Typography component=\"span\" style={{ color: colorNiveles[especie.esp_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n                Especie:\n              </Typography>{\" \"}\n              <Link\n                to={`https://doi.org/${especie.ref_doi.trim()}`}\n                target=\"_blank\"\n                style={{ color: colorItems[especie.esp_id], fontSize: tamanoItem, fontFamily: tipoLetra }}\n              >\n                {especie.esp_nombre.trim()}\n              </Link>\n            </div>\n            <div className=\"doi-row\">\n              <Typography component=\"span\" style={{ color: colorNiveles[especie.esp_id], fontSize: tamanoNivel, fontFamily: tipoLetra }}>\n                DOI:\n              </Typography>{\" \"}\n              <span className=\"doi-text\" style={{ color: colorItems[especie.esp_id], fontSize: tamanoItem, fontFamily: tipoLetra }}>{especie.ref_doi.trim()}</span>\n            </div>\n          </div>\n        }\n      />\n    ));\n\n  };\n\n\n\n\n  return (\n    <Box >\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          {/* Descripción */}\n          <StyledBox>\n            <Typography variant=\"h5\">Descripción</Typography>\n            <Typography variant=\"body1\" fontFamily=\"Helvetica Neue\">\n              Nuestro sitio web es una plataforma diseñada para facilitar la\n              georreferenciación de datos de especies. Con su interfaz fácil de usar\n              y su funcionalidad avanzada, permite a los investigadores,\n              administradores y usuarios administrar y analizar de manera eficiente\n              la información sobre especies.\n            </Typography>\n          </StyledBox>\n        </Grid>\n        <Grid item xs={12}>\n          {/* Contenedor del Árbol y Trabajo académico */}\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <StyledBox>\n                <Typography variant=\"h6\">Árbol Filogenético</Typography>\n                <TextField\n                  value={searchText}\n                  onChange={handleSearchChange}\n                  placeholder=\"Buscar...\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  InputProps={{\n                    endAdornment: (\n                      <IconButton>\n                        <SearchIcon />\n                      </IconButton>\n                    )\n                  }}\n                />\n              </StyledBox>\n              {/* Árbol filogenético */}\n              <TreeView\n                defaultCollapseIcon={<ExpandMoreIcon />}\n                defaultExpandIcon={<ChevronRightIcon />}\n                sx={{ height: 240, flexGrow: 1, marginLeft: \"60px\" }}\n              >\n                {/* Renderizar los reinos */}\n                {renderReinos()}\n              </TreeView>\n            </Grid>\n            <Grid item xs={8}>\n              {/* Trabajo académico */}\n              <Box >\n                <StyledBox>\n                  <Typography variant=\"h6\">Investigaciones</Typography>\n                  {/* Contenido del trabajo académico */}\n\n                  <Autocomplete\n                    value={selectedCountry}\n                    onChange={handleCountryChange}\n                    options={countryOptions}\n                    getOptionLabel={(option) => option.label}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        placeholder=\"Seleccionar País\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        fullWidth\n                        InputProps={{\n                          ...params.InputProps,\n                          endAdornment: (\n                            <>\n                              {params.InputProps.endAdornment}\n                              <IconButton>\n                                <SearchIcon onClick={handleButtonClickNoticias} />\n                              </IconButton>\n                            </>\n                          )\n                        }}\n                      />\n                    )}\n                  />\n                  <Typography variant=\"body2\" color=\"error\">\n                    {noInvestigacionesMessage}\n                  </Typography>\n\n                  {showContent && (\n                    <>\n                      {noticias.map((noticia, index) => (\n                        <div key={index}>\n                          <Link to={`https://doi.org/${noticia.ref_doi}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: \"none\" }}>\n                            <Typography variant=\"h6\" style={{ fontSize: \"14px\", fontWeight: \"bold\", color: \"#333333\", fontFamily: \"Helvetica Neue\", textTransform: \"uppercase\", marginBottom: \"20px\" }}>\n                              {noticia.ref_titulo}\n                            </Typography>\n                          </Link>\n                          <Typography variant=\"body1\" style={{ textAlign: \"justify\", fontSize: \"14px\", color: \"#666666\", fontFamily: \"Helvetica Neue\", marginBottom: \"20px\" }}>\n                            {noticia.ref_resumen}\n                          </Typography>\n                        </div>\n                      ))}\n                    </>\n                  )}\n\n                </StyledBox>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n\n      </Grid>\n    </Box>\n  );\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}